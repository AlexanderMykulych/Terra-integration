<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrasoft.Core</name>
    </assembly>
    <members>
        <member name="P:Terrasoft.Core.AppConnection.RestrictedModifySchemaAccessNames">
            <summary>
            Перечислитель имен схем, в которых запрещено изменять или удалять записи с помощью сервиса DataService.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.RestrictedSelectSchemaAccessNames">
            <summary>
            Перечислитель имен схем, из которых запрещено чтение записей с помощью сервиса DataService.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.MaxEntityRowCount">
            <summary>
            Максимальное количество записей в EntityCollection.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchema">
            <summary>
            Представляет схему объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessBasedSchema">
            <summary>
            Базовый класс схемы, содержащей встроенный процесс.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Schema">
            <summary>
            Базовый класс схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManagerItemInstance">
            <summary>
            Предоставляет свойства экземпляра элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemInstance.ManagerItem">
            <summary>
            Элемент менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemInstance.Manager">
            <summary>
            Менеджер.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Schema"/> с заданным менеджером схем.
            </summary>
            <param name="schemaManager">Менеджер схем.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="schemaManager"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Schema.#ctor(Terrasoft.Core.Schema)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Schema"/>, являющийся клоном заданной схемы 
            <paramref name="source"/>.
            </summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств схемы из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeMethods">
            <summary>
            Инициализация методов схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableStrings">
            <summary>
            Инициализация локализуемых строк схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeUsings">
            <summary>
            Инициализация коллекции пространств имен, используемых схемой.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetLocalizableStringsDefInheritance">
            <summary>
            Для локализуемых строк схемы устанавливает свойства наследования.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemNamePrefix(Terrasoft.Core.IDesignItem,Terrasoft.Core.DesignModeClassDescriptor)">
            <summary>
            Для заданного элемента времени разработки генерирует префикс, используя заданное описание класса 
            объекта времени разработки.
            </summary>
            <param name="item">Элемент времени разработки.</param>
            <param name="classDescriptor">Описание класса объекта времени разработки.</param>
            <returns>Сгенерированный префикс для <paramref name="item"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.WriteCodeReviewData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>. Метаданные записываются в формате, адаптированном для 
            проведения ревизии кода.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.HandleNameChanging(System.String)">
            <summary>
            Актуализирует имена всех локализуемых свойств схемы при ее переименовании.
            </summary>
            <param name="oldName">Старое имя схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetDefInheritance">
            <summary>
            Для всех элементов схемы, у которых не установлен идентификатор родительской схемы, устанавливает 
            идентификатор текущей схемы как родительской. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Выполняет инициализацию локализуемых значений схемы из заданной группы заданного менеджера ресурсов.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceGroupName">Имя группы ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.ReInitializeLocalizableValues(System.String,System.String)">
            <summary>
            Выполняет переинициализацию локализуемых значений схемы из заданной группы заданного менеджера ресурсов.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceGroupName">Имя группы ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Загружает локализуемые значения схемы в заданную коллекцию.
            </summary>
            <param name="values">Коллекция возвращаемых локализуемых значений схемы.</param>
            <param name="includeInherited">Включать ли в коллекцию возвращаемых локализуемых значений унаследованные 
            свойства (по умолчанию - нет).</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.LoadLocalizableValues">
            <summary>
            Загружает значения для локализуемых элементов схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableValues">
            <summary>
            Выполняет инициализацию локализуемых значений схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.RenameLocalizedProperty(System.String,Terrasoft.Core.IMetaItem)">
            <summary>
            Актуализирует имя заданного локализуемого свойства схемы при переименовании схемы.
            </summary>
            <param name="oldName">Старое имя схемы.</param>
            <param name="childProperty">Локализуемое свойство схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializePrimaryInfo">
            <summary>
            Осуществляет инициализацию основных свойств схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetSchemaReferences">
            <summary>
            Возвращает коллекцию ссылок на сборки, которые необходимы для компиляции схемы.
            </summary>
            <returns>Коллекция ссылок на сборки, которые необходимы для компиляции схемы. </returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemCaption(Terrasoft.Core.DesignModeClassDescriptor,System.Int32)">
            <summary>
            Генерирует последовательный заголовок схемы, используя заданные индекс и описание класса 
            объекта времени разработки.
            </summary>
            <param name="classDescriptor">Описание класса объекта времени разработки.</param>
            <param name="index">Индекс схемы.</param>
            <returns>Локализуемая строка заголовка схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem(Terrasoft.Core.IDesignItem,Terrasoft.Core.DesignModeClassDescriptor,System.Int32)">
            <summary>
            Для заданного элемента времени разработки устанавливает уникальные имя и заголовок, используя заданные 
            индекс и описание класса объекта времени разработки.
            </summary>
            <param name="item">Элемент времени разработки, которому устанавливаются имя и заголовок.</param>
            <param name="classDescriptor">Описание класса объекта времени разработки</param>
            <param name="index">Индекс элемента.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem(Terrasoft.Core.IDesignItem)">
            <summary>
            Для заданного элемента времени разработки устанавливает уникальные имя и заголовок.
            </summary>
            <param name="item">Элемент времени разработки, которому устанавливаются имя и заголовок.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem``1(``0,Terrasoft.Core.MetaItemCollection{``0})">
            <summary>
            Для элемента времени разработки заданного типа из переданной коллекции устанавливает уникальные имя и 
            заголовок.</summary>
            <typeparam name="TItemType">Тип элемента времени разработки.</typeparam>
            <param name="item">Элемент времени разработки, для которого устанавливаются имя 
            и заголовок.</param>
            <param name="items">Коллекция элементов времени разработки, которой принадлежит <paramref name="item"/>.
            </param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemUniqueIndex(System.String)">
            <summary>
            Генерирует уникальный индекс элемента для заданного префикса.
            </summary>
            <param name="prefix">Префикс.</param>
            <returns>Уникальный индекс элемента для префикса <paramref name="prefix"/>.</returns>
            <remarks>Метод не реализован.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Заполняет переданную коллекцию всеми метаэлементами текущей схемы.
            </summary>
            <param name="metaItems">Коллекция, которая заполняется метаэлементами текущей схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetIsNamePrefixValid(System.String)">
            <summary>
            Проверяет, совпадает ли префикс имени объекта с префиксом, указанным в системной настройке
            "Префикс названия объекта".
            </summary>
            <param name="name">Имя объекта.</param>
            <returns><c>true</c>, если префикс имени объекта <paramref name="name"/> совпадает с префиксом, указанным 
            в системной настройке "Префикс названия объекта".</returns>
        </member>
        <member name="P:Terrasoft.Core.Schema.ItemsSequentiallyNumbered">
            <summary>
            Признак генерации для схемы последовательного имени.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SystemUserConnection">
            <summary>
            Системное пользовательское подключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManager">
            <summary>
            Менеджер схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ManagerItem">
            <summary>
            Представление схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManagerItem">
            <summary>
            Представление схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.IsCoreSchema">
            <summary>
            Признак, является ли схема системной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ResourceManager">
            <summary>
            Менеджер ресурсов схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Storage">
            <summary>
            Хранилище ресурсов схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.PackageUId">
            <summary>
            Уникальный идентификатор пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ReferenceSchemaUIds">
            <summary>
            Коллекция идентификаторов схем, на которые ссылается схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Caption">
            <summary>
            Заголовок схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Methods">
            <summary>
            Коллекция методов схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.HasMethods">
            <summary>
            Признак наличия у схемы методов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Usings">
            <summary>
            Коллекция пространств имен, используемых схемой.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.LocalizableStrings">
            <summary>
            Коллекция локализуемых строк схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.IsInitialized">
            <summary>
            Определяет, является ли схема инициализированной. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Description">
            <summary>
            Описание схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.AppManagerProvider">
            <summary>
            Провайдер менеджера схем уровня приложения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManagerProvider">
            <summary>
            Провайдер менеджера схем уровня конфигурации.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaNamePrefix">
            <summary>
            Префикс названия объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.CreatedInVersion">
            <summary>
            Создано в версии продукта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.DenyExtending">
            <summary>
            Запретить замещение.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/> с заданным менеджером схем.
            </summary>
            <param name="schemaManager">Менеджер схем.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.#ctor(Terrasoft.Core.Process.ProcessBasedSchema)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>, являющийся клоном заданной схемы.
            </summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeEventsProcessSchema">
            <summary>
            Выполняет инициализацию схемы встроенного процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств схемы из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.GetSchemaReferences">
            <summary>
            Возвращает коллекцию ссылок на сборки, которые необходимы для компиляции схемы.
            </summary>
            <returns>Коллекция ссылок на сборки, которые необходимы для компиляции схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Выполняет инициализацию локализуемых значений схемы со встроенным процессом из заданной группы заданного 
            менеджера ресурсов.</summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceGroupName">Имя группы ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Заполняет переданную коллекцию всеми метаэлементами текущей схемы.
            </summary>
            <param name="metaItems">Коллекция, которая заполняется метаэлементами текущей схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.CreateEventsProcess(Terrasoft.Core.UserConnection)">
            <summary>
            Создает экземпляр встроенного процесса схемы.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр созданного встроенного процесса.</returns>
            <exception cref="T:System.NotImplementedException">Виртуальный метод не реализован в классе 
            <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>, а переопределяется у классов - наследников 
            <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeEventsProcessSchemaLocalizableValues">
            <summary>
            Выполняет инициализацию локализуемых значений схемы встроенного процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.ProcessSchemaManager">
            <summary>
            Менеджер схемы, содержащей встроенный процесс.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.IsEventsProcessSchemaInitialized">
            <summary>
            Определяет, инициализирована ли схема встроенного процесса данной схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.EventsProcessSchema">
            <summary>
            Схема встроенного процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.ParentProcessBasedSchema">
            <summary>
            Родительская схема.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerSchema`1">
            <summary>
            Типизированный интерфейс схемы менеджера схем.
            </summary>
            <typeparam name="TSchemaManagerSchema">Тип, реализующий интерфейсы 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.InitializePrimaryInfo">
            <summary>
            Осуществляет инициализацию основных свойств схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.SetDefInheritance">
            <summary>
            Для всех элементов схемы, у которых не установлен идентификатор родительской схемы, устанавливает 
            идентификатор текущей схемы как родительской.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.AssignParentSchema(`0)">
            <summary>
            Для текущей схемы устанавливает в качестве родителя заданную схему. 
            </summary>
            <param name="parentSchema">Схема, устанавливаемая в качестве родителя для текущей схемы. </param>
            <returns>
            <c>true</c>, если для текущей схемы в качестве родительской установлена схема 
            <paramref name = "parentSchema"/>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Выполняет инициализацию локализуемых значений схемы из заданной группы заданного менеджера ресурсов.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceGroupName">Имя группы ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Загружает локализуемые значения схемы в заданную коллекцию.
            </summary>
            <param name="values">Коллекция возвращаемых локализуемых значений схемы.</param>
            <param name="includeInherited">Включать ли в коллекцию возвращаемых локализуемых значений унаследованные 
            свойства (по умолчанию - нет).</param>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.UId">
            <summary>
            Идентификатор.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.IsCoreSchema">
            <summary>
            Признак, является ли схема системной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Caption">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Description">
            <summary>
            Описание.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ParentSchemaUId">
            <summary>
            Идентификатор родительской схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ParentSchema">
            <summary>
            Ссылка на экземпляр родительской схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ResourceManager">
            <summary>
            Менеджер ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ReferenceSchemaUIds">
            <summary>
            Коллекция идентификаторов схем, на которые ссылается данная схема.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> с заданным менеджером схем.
            </summary>
            <param name="entitySchemaManager">Менеджер схем.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, являющийся полным или неполным клоном 
            заданной схемы <paramref name="source"/> в зависимости от значения <paramref name="isShallowClone"/>.
            </summary>
            <param name="source">Схема, клон которой создается.</param>
            <param name="isShallowClone">Признак полноты клонирования схемы. Если <paramref name="isShallowClone"/> 
            равен <c>true</c>, то в создаваемый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> не копируются колонки схемы 
            <paramref name="source"/>. Если <paramref name="isShallowClone"/> равен <c>false</c>, то создается 
            полноценный клон <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, являющийся полным клоном заданной схемы 
            <paramref name="source"/>.
            </summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств схемы из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CompleteApplyingMetaDataValues">
            <summary>
            Завершение инициализации сериализуемых свойств схемы после вычитки всех значений свойств из метаданных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeProperties">
            <summary>
            Инициализация свойства схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryColumn">
            <summary>
            Инициализация колонки с первичным ключом схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryDisplayColumn">
            <summary>
            Инициализация первичной колонки для отображения данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryImageColumn">
            <summary>
            Инициализация первичной колонки для отображения изображения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryOrderColumn">
            <summary>
            Инициализация первичной колонки для сортировки.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeOneToOneParentAssociationColumn">
            <summary>
            Инициализация колонки связи с родителем при наследовании один к одному.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeOwnerColumn">
            <summary>
            Инициализация колонки владельца записи.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeHierarchyColumn">
            <summary>
            Инициализация колонки связи с родительской записью для иерархических объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedOnColumn">
            <summary>
            Инициализация колонки для хранения даты создания.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedByColumn">
            <summary>
            Инициализация колонки для хранения ссылки на контакт, который создал запись.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedOnColumn">
            <summary>
            Инициализация колонки для хранения даты модификации схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedByColumn">
            <summary>
            Инициализация колонки, определяющей, кем была изменения схема.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeColumns">
            <summary>
            Инициализация колонок.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeIndexes">
            <summary>
            Инициализация индексов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeColumnsLocalizableValues">
            <summary>
            Инициализация локализуемых значений колонок.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePredefinedColumnsLocalizableValues">
            <summary>
            Инициализация предопределенных локализуемых значений колонок.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.SetColumnsDefInheritance(System.Guid)">
            <summary>
            Всем колонкам, для которых не указана схема, где они были созданы, устанавливает переданный 
            идентификатор схемы. 
            </summary>
            <param name="schemaUId">Уникальный идентификатор схемы, в которой были созданы колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@,System.Boolean)">
            <summary>
            Создает базовый запрос для получения заданного перечислителя колонок схемы, используя заданное 
            пользовательское подключение, возвращая при этом карту колонок. В зависимости от значения параметра 
            <paramref name="takeDisplayLookupValues"/> в запросе могут возвращаться первичные отображаемые значения 
            из справочников.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columns">Колонки, которые должны быть возвращены в запросе.</param>
            <param name="takeDisplayLookupValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.
            </param>
            <param name="columnMap">Карта колонок по созданному запросу.</param>
            <param name="useAdminRights">Признак учета в запросе прав администрирования.</param>
            <returns>Запрос для получения колонок текущей схемы.</returns>
            <exception cref="T:System.Security.SecurityException">Недостаточно прав для чтения информации о данной схеме.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если для первичных отображаемых значений не указан список схем, из 
            которых берутся значения либо если одна из этих схем не проинициализирована.</exception>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryInfo">
            <summary>
            Осуществляет инициализацию основных свойств данной схемы. 
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если имя данной схемы пустое или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Осуществляет вычитку схемы из метаданных с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого вычитываются 
            метаданные схемы.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedInSchemaUId">
            <summary>
            Для наследуемых колонок данной схемы устанавливает уникальный идентификатор схемы, в которой они 
            были созданы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedInSchemaUId">
            <summary>
            Для наследуемых колонок данной схемы устанавливает уникальный идентификатор схемы, в которой они 
            были изменены.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.SetDefInheritance">
            <summary>
            Для всех элементов схемы, у которых не установлен идентификатор родительской схемы, устанавливает 
            идентификатор текущей схемы как родительский. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Выполняет инициализацию локализуемых значений схемы из заданной группы заданного менеджера ресурсов.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceGroupName">Имя группы ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Заполняет переданную коллекцию всеми метаэлементами текущей схемы.
            <see cref="T:Terrasoft.Core.MetaItem"/>.
            </summary>
            <param name="metaItems">Коллекция, которая заполняется метаэлементами текущей схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Загружает локализуемые значения схемы в заданную коллекцию.
            </summary>
            <param name="values">Коллекция возвращаемых локализуемых значений схемы.</param>
            <param name="includeInherited">Включать ли в коллекцию возвращаемых локализуемых значений унаследованные 
            свойства (по умолчанию - нет).</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.LoadLocalizableValues">
            <summary>
            Загружает значения для локализуемых элементов схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CloneShallow">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, являющийся клоном текущей схемы без колонок.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - клон текущей схемы без колонок.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Создает экземпляр объекта, который описывает схема.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> с данными, построенный по текущей схеме.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateTrackChangesInsertSelect(Terrasoft.Core.UserConnection,System.Object,Terrasoft.Core.Entities.EntityChangeType)">
            <summary>
            Возвращает запрос на сохранение записи в журнале, если схема является журналируемой.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="primaryColumnValue"></param>
            <param name="changeType">Тип изменения сущности - объекта.</param>
            <returns>Запрос на сохранение записи в журнале изменений по текущей схеме.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Создает базовый запрос для получения колонок текущей схемы, используя заданное пользовательское подключение.
            В зависимости от значения параметра <paramref name="takeDisplayLookupValues"/> в запросе могут возвращаться 
            первичные отображаемые значения из справочников.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="takeDisplayLookupValues">Признак получения в запросе первичных отображаемых значений.
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Запрос для получения колонок текущей схемы.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@)">
            <summary>
            Создает базовый запрос для получения значений всех колонок текущей схемы, используя заданное 
            пользовательское подключение, возвращая при этом карту колонок. В зависимости от параметра 
            <paramref name="takeDisplayLookupValues"/> в запросе могут возвращаться первичные отображаемые значения.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="takeDisplayLookupValues">Признак получения в запросе первичных отображаемых значений.
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.
            </param>
            <param name="columnMap">Карта колонок по созданному запросу.</param>
            <returns>Запрос для получения колонок текущей схемы.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean)">
            <summary>
            Создает базовый запрос для получения значений заданного перечислителя колонок текущей схемы, используя 
            заданное пользовательское подключение. В зависимости от значения параметра 
            <paramref name="takeDisplayLookupValues"/> в запросе могут возвращаться первичные отображаемые значения из 
            справочников.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columns">Колонки, которые должны быть возвращены в запросе.</param>
            <param name="takeDisplayLookupValues">Признак получения в запросе первичных отображаемых значений.
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.
            </param>
            <returns>Запрос для получения колонок текущей схемы.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@)">
            <summary>
            Создает базовый запрос для получения заданного перечислителя колонок схемы, используя заданное 
            пользовательское подключение, возвращая при этом карту колонок. В зависимости от значения параметра 
            <paramref name="takeDisplayLookupValues"/> в запросе могут возвращаться первичные отображаемые значения 
            из справочников.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columns">Колонки, которые должны быть возвращены в запросе.</param>
            <param name="takeDisplayLookupValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.
            </param>
            <param name="columnMap">Карта колонок по созданному запросу.</param>
            <returns>Запрос для получения колонок текущей схемы.</returns>
            <exception cref="T:System.Security.SecurityException">Недостаточно прав для чтения информации о данной схеме.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если для первичных отображаемых значений не указан список схем, из 
            которых берутся значения либо если одна из этих схем не проинициализирована.</exception>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateGeneralSelect(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает запрос для получения всех колонок текущей схемы, используя заданное пользовательское подключение.
            В этот запрос не включаются отображаемые колонки справочников.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Запрос для получения всех колонок текущей схемы.</returns>
            <exception cref="T:System.Security.SecurityException">Недостаточно прав для чтения информации по данной схеме.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindDBPrimaryColumn">
            <summary>
            Возвращает первичную колонку на уровне базы данных для текущей схемы.
            </summary>
            <returns>
            Если схема наследуется независимо, будет возвращена первичная колонка текущей схемы. При наследовании схемы 
            один к одному будет возвращена колонка связи с родителем данной схемы.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetDBPrimaryColumn">
            <summary>
            В зависимости от типа наследования схемы, возвращает первичную колонку данной схемы на уровне базы данных. 
            Если колонка не найдена, генерируется исключение.
            </summary>
            <returns>
            Если схема наследуется независимо, будет возвращена первичная колонка текущей схемы. При наследовании схемы 
            один к одному будет возвращена колонка связи с родителем данной схемы.
            </returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если у текущей схемы не определена первичная колонка либо колонка 
            для связи с родительской схемой.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryColumnName">
            <summary>
            Возвращает имя первичной колонки данной схемы на уровне базы данных.
            </summary>
            <returns>Имя первичной колонки схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetDBPrimaryColumnName">
            <summary>
            Имя первичной колонки данной схемы в таблице базы данных.
            </summary>
            <returns>Имя колонки в таблице базы данных, соответствующей первичной колонке схемы.</returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если для данной схемы не проинициализирована первичная колонка.
            </exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если имя первичной колонки данной схемы пустое или <c>null</c>.
            </exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если для данной схемы не проинициализирована колонка связи с 
            родителем при наследовании один к одному.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если имя колонки связи с родителем данной схемы пустое или 
            <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryDisplayColumn">
            <summary>
            Возвращает первичную колонку для отображения.
            </summary>
            <returns>Первичная колонка для отображения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindPrimaryDisplayColumnName">
            <summary>
            Определяет наличие у текущей схемы первичной колонки для отображения.
            </summary>
            <returns>
            Имя первичной колонки для отображения либо <c>null</c>, если эта колонка у схемы не определена.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryDisplayColumnName">
            <summary>
            Возвращает первичную колонку для отображения. Если такая колонка у схемы не определена, 
            генерируется исключение.
            </summary>
            <returns>
            Имя первичной колонки для отображения.
            </returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если для данной схемы не проинициализирована первичная колонка для 
            отображения либо если имя пустое или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetInheritedPath(System.String)">
            <summary>
            По заданному пути к колонке схемы формирует строку фактического пути к ней, который строится с учетом 
            типа наследования схемы.
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <returns>Строка пути к колонке схемы, преобразованная с учетом наследования.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если параметр <paramref name="columnPath"/> является пустым 
            или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetMultiLookupPathParts(System.String)">
            <summary>
            По заданному пути к lookup-колонке схемы формирует массив строк фактических путей к ней, построенных с 
            учетом наследования.
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <returns>Массив строк пути к первичной колонке для отображения, преобразованных с учетом 
            наследования.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnByPath(System.String)">
            <summary>
            Преобразует заданный путь к колонке к фактическому пути с учетом наследования схемы и возвращает 
            соответствующую ему колонку.
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <returns>Колонка, фактически соответствующая пути <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для колонки с типом справочник, не указан список 
            схем - справочников.
            </exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">У колонки с типом справочник не указана ссылка на 
            схему-справочник.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnByPath(System.String)">
            <summary>
            Преобразует заданный путь к колонке к фактическому пути с учетом наследования схемы и возвращает
            соответствующую ему колонку. Если такая колонка не найдена, генерируется исключение. 
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <returns>Колонка, фактически соответствующая пути <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если не найдена колонка по сформированному фактическому пути для 
            <paramref name="columnPath"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnReversePathByPath(System.String)">
            <summary>
            По заданному пути к колонке формирует строку фактического пути с обратными связями.
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <returns>Путь с обратными связями к колонке схемы, соответствующий <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            указано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">У колонки с типом справочник не указана ссылка на 
            схему-справочник</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Колонка должна быть типа справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана ссылка на 
            схему-справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана первичная 
            колонка.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnByMetaPath(System.String)">
            <summary>
            Преобразует заданный метапуть к колонке к фактическому пути с учетом наследования схемы и возвращает 
            соответствующую ему колонку.
            </summary>
            <param name="columnMetaPath">Метапуть к колонке.</param>
            <returns>
            Колонка, фактически соответствующая метапути <paramref name="columnMetaPath"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnByMetaPath(System.String)">
            <summary>
            Преобразует заданный метапуть к колонке к фактическому пути с учетом наследования схемы и возвращает 
            соответствующую ему колонку. Если такая колонка не найдена, генерируется исключение.
            </summary>
            <param name="columnMetaPath">Метапуть к колонке.</param>
            <returns>
            Колонка, фактически соответствующая метапути <paramref name="columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnMetaPath"/>
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана ссылка на 
            схему-справочник.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnFullCaptionByPath(System.String,System.String)">
            <summary>
            По заданному пути к колонке схемы формирует строку полного заголовка колонки через заданный разделитель.
            </summary>
            <param name="columnPath">Путь к колонке схемы.</param>
            <param name="delimiter">Разделитель.</param>
            <returns>Строка, представляющая собой полный заголовок колонки, заданной в <paramref name="columnPath"/>
            через разделитель <paramref name="delimiter"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана ссылка на 
            схему-справочник.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnMetaPathByPath(System.String)">
            <summary>
            По заданному фактическому пути к колонке формирует строку метапути к данной колонке.
            </summary>
            <param name="columnPath">Фактический путь к колонке.</param>
            <returns>Метапуть к колонке, заданной <paramref name = "columnPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnPathByMetaPath(System.String)">
            <summary>
            По заданному метапути к колонке схемы формирует строку фактического пути к ней, который строится с учетом
            типа наследования схемы.
            </summary>
            <param name="columnMetaPath">Метапуть к колонке.</param>
            <returns>Строка фактического пути к колонке, соответствующая метапути <paramref name="columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана ссылка на 
            схему-справочник.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnPathByMetaPath(System.String)">
            <summary>
            По заданному метапути к колонке схемы формирует строку фактического пути к ней, который строится с учетом
            типа наследования схемы.
            </summary>
            <param name="columnMetaPath">Метапуть к колонке.</param>
            <returns>Строка фактического пути к колонке, соответствующая метапути <paramref name="columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnMetaPath"/>
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если колонка не является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с типом справочник не указана ссылка на 
            схему-справочник.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String)">
            <summary>
            Добавляет в текущую схему новую колонку с указанным именем типа.
            </summary>
            <param name="typeName">Имя типа колонки.</param>
            <returns>Колонка типа <paramref name="typeName"/>.</returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String)">
            <summary>
            Добавляет в текущую схему новую колонку с указанными именем типа и именем колонки.
            </summary>
            <param name="typeName">Имя типа.</param>
            <param name="name">Имя колонки.</param>
            <returns>Колонка с именем <paramref name="name"/> типа <paramref name="name"/>.</returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String,System.Guid)">
            <summary>
            Добавляет в текущую схему новую колонку с указанными именем колонки, именем типа и уникальным 
            идентификатором.
            </summary>
            <param name="typeName">Имя типа.</param>
            <param name="name">Имя колонки.</param>
            <param name="uid">Уникальный идентификатор колонки.</param>
            <returns>Колонка с именем <paramref name="name"/> типа <paramref name="name"/> и идентификатором 
            <paramref name="uid"/>.</returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String,System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnRequirementType)">
            <summary>
            Добавляет в текущую схему новую колонку с указанными именем, типом и уникальным идентификатором. При этом 
            для колонки указывается уровень проверки значений, обязательных для заполнения.
            </summary>
            <param name="typeName">Имя типа.</param>
            <param name="name">Имя колонки.</param>
            <param name="uid">Уникальный идентификатор колонки.</param>
            <param name="requirementType">Уровень проверки обязательных значений.</param>
            <returns>Колонка с именем <paramref name="name"/> типа <paramref name="name"/>, идентификатором 
            <paramref name="uid"/>, уровнем проверки обязательных значений <paramref name="requirementType"/>.</returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String)">
            <summary>
            Добавляет в текущую схему новую колонку типа справочник с указанными именем колонки и именем 
            схемы-справочника.
            </summary>
            <param name="referenceSchemaName">Имя схемы-справочника.</param>
            <param name="name">Имя колонки.</param>
            <returns>Колонка типа справочник с именем <paramref name="name"/> схемы-справочника 
            <paramref name="referenceSchemaName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddSystemLookupColumn(System.String,System.String)">
            <summary>
            Добавляет в текущую схему новую колонку типа справочник с указанием имени колонки и имени системной 
            схемы-справочника.
            </summary>
            <param name="referenceSchemaName">Имя системной схемы-справочника.</param>
            <param name="name">Имя колонки.</param>
            <returns>
            Колонка типа справочник с именем <paramref name="name"/> системной схемы-справочника 
            <paramref name="referenceSchemaName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String,System.Guid)">
            <summary>
            Добавляет новую колонку типа справочник с указанными именем и идентификатором, которая ссылается на 
            заданную схему.
            </summary>
            <param name="referenceSchemaName">Имя схемы, на которую ссылается колонка.</param>
            <param name="name">Имя колонки.</param>
            <param name="uid">Уникальный идентификатор колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с именем <paramref name="name"/>, идентификатором 
            <paramref name="uid"/>, которая ссылается на справочник <paramref name="referenceSchemaName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String,System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnRequirementType)">
            <summary>
            Добавляет новую колонку типа справочник с указанными именем, идентификатором, которая ссылается на заданную 
            схему. При этом для колонки указывается уровень проверки значений, обязательных для заполнения.
            </summary>
            <param name="referenceSchemaName">Схема, на которую ссылается данная колонка.</param>
            <param name="name">Имя колонки.</param>
            <param name="uid">Уникальный идентификатор.</param>
            <param name="requirementType">Тип обязательности параметра.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AssignParentSchema(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Для текущей схемы устанавливает в качестве родителя заданную схему. 
            </summary>
            <param name="parentSchema">Схема, устанавливаемая в качестве родителя для текущей схемы. </param>
            <returns>
            <c>true</c>, если для текущей схемы в качестве родительской установлена схема 
            <paramref name = "parentSchema"/>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AssignDBInheritanceType">
            <summary>
            Модифицирует колонку <see cref="P:Terrasoft.Core.Entities.EntitySchema.OneToOneParentAssociationColumn"/> текущей схемы при смене значения у нее 
            свойства <see cref="P:Terrasoft.Core.Entities.EntitySchema.DBInheritanceType"/>.
            </summary>
            <returns>
            <c>true</c>, если колонка <see cref="P:Terrasoft.Core.Entities.EntitySchema.OneToOneParentAssociationColumn"/> текущей схемы успешно 
            модифицирована; иначе - <c>false</c>.
            </returns>
            <remarks>Метод используется в дизайнере схем для корректной установки типа наследования.
            Основываясь на значении свойства DBInheritanceType метод либо добавляет колонку связи с родителем в текущую 
            схему и инициализирует ею свойство OneToOneParentAssociationColumn, либо, если тип наследования 
            IndependentTable, удаляет эту колонку связи.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ValidateNames(System.Boolean)">
            <summary>
            Проверяет, являются ли допустимыми имена текущей схемы и ее элементов.
            </summary>
            <param name="validatePrefixes"><c>true</c>, если необходимо проверять допустимость префиксов имен; иначе -
            <c>false</c>.</param> 
            <exception cref="T:Terrasoft.Common.InvalidNameException">Если имя схемы или элемента недопустимо.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetTrackChangesInDBSchemaName">
            <summary>
            Возвращает имя схемы для журналирования.
            </summary>
            <returns>Имя схемы для журналирования текущей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetTrackChangesInDBSchema">
            <summary>
            Возвращает схему для журналирования текущей схемы.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, отвечающий за журналирование изменений текущей схемы.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetKindSuffix">
            <summary>
            Возвращает суффикс в соответствии с типом текущей схемы, который используется для генерации уникальных имен 
            системных объектов базы данных.
            </summary>
            <returns>Суффикс, соответствующий типу текущей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetEntitySchemaByKind(Terrasoft.Core.Entities.EntitySchemaKind)">
            <summary>
            По заданному типу системной схемы возвращает соответствующий экземпляр системной схемы.
            </summary>
            <param name="kind">Тип схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> типа <paramref name="kind"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.BaseSchemaUId">
            <summary>
            Уникальный идентификатор базовой схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Manager">
            <summary>
            Менеджер схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UId">
            <summary>
            Уникальный идентификатор схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ProcessSchemaManager">
            <summary>
            Менеджер схем процессов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Kind">
            <summary>
            Тип схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DBInheritanceType">
            <summary>
            Тип наследования схемы на уровне базы данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DeleteOneToOneParentRecord">
            <summary>
            Признак удаления записи из родительской схемы при удалении текущей записи, 
            если схема наследуется один к одному.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ParentSchemaUId">
            <summary>
            Уникальный идентификатор родительской схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ParentSchema">
            <summary>
            Родительская схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsVirtual">
            <summary>
            Признак виртуальности схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsDBView">
            <summary>
            Признак, является ли схема представлением в базе данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AutoInitializeColumns">
            <summary>
            Признак автоматической инициализации колонок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Columns">
            <summary>
            Коллекция колонок схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryColumn">
            <summary>
            Колонка, представляющая первичный ключ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryDisplayColumn">
            <summary>
            Первичная колонка для отображения данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryImageColumn">
            <summary>
            Первичная колонка для отображения изображения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryOrderColumn">
            <summary>
            Первичная колонка для сортировки. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.OneToOneParentAssociationColumn">
            <summary>
            Колонка связи с родителем при наследовании один к одному.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.OwnerColumn">
            <summary>
            Колонка, указывающая на владельца. Используется для раздачи прав на запись владельцу.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HierarchyColumn">
            <summary>
            Колонка связи с родительской записью для иерархических объектов. 
            Используется для построения иерархических запросов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.CreatedOnColumn">
            <summary>
            Колонка для хранения даты создания записи.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.CreatedByColumn">
            <summary>
            Колонка для хранения ссылки на контакт, который создал запись.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ModifiedOnColumn">
            <summary>
            Колонка для хранения даты модификации записи.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ModifiedByColumn">
            <summary>
            Колонка для хранения ссылки на контакт, который модифицировал запись.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Indexes">
            <summary>
            Коллекция индексов схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsTrackChangesInDB">
            <summary>
            Признак журналируемости схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.EntitySchemaManager">
            <summary>
            Менеджер схем объектов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DataValueTypeManager">
            <summary>
            Менеджер типов данных колонок схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.SystemValueManager">
            <summary>
            Менеджер системных значений. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.SystemEntitySchemaManager">
            <summary>
            Менеджер системных схем объектов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Events">
            <summary>
            События схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HasEvents">
            <summary>
            Признак наличия событий для данной схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByOperations">
            <summary>
            Признак администрирования схемы по операциям.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByColumns">
            <summary>
            Признак администрирования схемы по колонкам.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByRecords">
            <summary>
            Признак администрирования схемы по записям.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UseDenyRecordRights">
            <summary>
            Признак использования запрещающих прав для схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HasIndependentProcessListeners">
            <summary>
            Признак определения для схемы своих завершающих условий элементов процессов, отличных от системных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsDynamicallyCreated">
            <summary>
            Признак динамически созданной схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.SystemEntity">
            <summary>
            Системный объект.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Entity">
            <summary>
            Представляет экземпляр сущности объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.String)">
            <summary>
            Осуществляет запись значения типа <see cref="T:Terrasoft.Core.Entities.Entity"/> в поток вывода с заданными именем.
            </summary>
            <param name="dataWriter">Экземпляр класса <see cref="T:Terrasoft.Common.DataWriter"/>, предоставляющий методы
            последовательной записи значений в поток вывода.</param>
            <param name="entity">Значение для записи типа <see cref="T:Entity"/>.</param>
            <param name="propertyName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.String,System.Boolean)">
            <summary>
            Осуществляет запись значения типа <see cref="T:Terrasoft.Core.Entities.Entity"/> в поток вывода с заданными именем.
            </summary>
            <param name="dataWriter">Экземпляр класса <see cref="T:Terrasoft.Common.DataWriter"/>, предоставляющий методы
            последовательной записи значений в поток вывода.</param>
            <param name="entity">Значение для записи типа <see cref="T:Entity"/>.</param>
            <param name="propertyName">Имя объекта.</param>
            <param name="couldConvertForXml">Разрешить преобразование для xml-сериализации.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Read(Terrasoft.Core.UserConnection,Terrasoft.Common.DataReader)">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:Terrasoft.Core.Entities.Entity"/> из потока ввода.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="dataReader">Экземпляр класса <see cref="T:Terrasoft.Core.DataReader"/>.</param>
            <returns> Экземляр класса <see cref="T:Entity"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.RemoveCurrentActiveProcess">
            <summary>
            Removes current active entity process from RequestData store.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,System.Boolean)">
            <summary>
            По заданному условию загружает объект из базы данных.
            </summary>
            <param name="conditionColumn">Колонка, для которой задается условие выборки.</param>
            <param name="conditionValue">Значение колонки условия для выбираемых данных.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если объект загружен - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.String,System.Object,System.Boolean)">
            <summary>
            По заданному условию загружает объект из базы данных.
            </summary>
            <param name="conditionColumnName">Название колонки, для которой задается условие выборки.</param>
            <param name="conditionValue">Значение колонки условия для выбираемых данных.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если объект загружен - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.Object,System.Boolean)">
            <summary>
            По заданному значению ключевого поля загружает объект из базы данных.
            </summary>
            <param name="keyValue">Значение ключевого поля.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если объект загружен - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            По заданным условиям загружает объект из базы данных.
            </summary>
            <param name="conditions">Набор условий фильтрации выборки записи объекта.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если объект загружен - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean)">
            <summary>
            По заданному условию загружает из базы данных объект с указанным набором колонок.
            </summary>
            <param name="conditionColumn">Колонка, для которой задается условие выборки.</param>
            <param name="conditionValue">Значение колонки условия для выбираемых данных.</param>
            <param name="columnsToFetch">Список колонок, которые будут выбраны.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если запись выбрана - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            По заданному условию загружает из базы данных объект с набором колонок с указанными именами.
            </summary>
            <param name="conditionColumnName">Название колонки, для которой задается условие выборки.</param>
            <param name="conditionValue">Значение колонки условия для выбираемых данных.</param>
            <param name="columnNamesToFetch">Список названий колонок, которые будут выбраны.</param>
            <param name="useDisplayValues">Признак получения в запросе первичных отображаемых значений. 
            Если параметр равен <c>true</c>, в запросе будут возвращены первичные отображаемые значения.</param>
            <returns>Если объект загружен - <c>true</c>, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись в поток вывода для текущей схемы объекта.
            </summary>
            <param name="writer">Экземпляр класса <see cref="T:Terrasoft.Common.DataWriter"/>, предоставляющий методы
            последовательной записи значений в поток вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Осуществляет запись в поток вывода для указанной схемы объекта.
            </summary>
            <param name="writer">Экземпляр класса <see cref="T:Terrasoft.Common.DataWriter"/>, предоставляющий методы
            последовательной записи значений в поток вывода.</param>
            <param name="schema">Схема объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            Осуществляет запись в поток вывода для указанной схемы объекта.
            </summary>
            <param name="writer">Экземпляр класса <see cref="T:Terrasoft.Common.DataWriter"/>, предоставляющий методы
            последовательной записи значений в поток вывода.</param>
            <param name="schema">Схема объекта.</param>
            <param name="couldConvertForXml">Разрешает преобразование для xml-сериализации.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.Entity.UseAdminRights">
            <summary>Параметр, определяющий будут ли учитываться права при вставке, обновлении, удалении и получении
            данных.</summary>
            <remarks>Значение по умолчанию: true</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.SystemEntity"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.#ctor(Terrasoft.Core.Entities.SystemEntity)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.SystemEntity"/>, являющийся клоном заданного системного объекта.
            </summary>
            <param name="source">Системный объект, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего системного объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего системного объекта.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema">
            <summary>Базовая схема для постоянного хранилища данных.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="entitySchemaManager">Менеджер схем.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPersistentStoreSchema,System.Boolean)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
            <param name="isShallowClone">Признак полноты клонирования схемы. Если <paramref name="isShallowClone"/> 
            равен <c>true</c>, то в создаваемый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> не копируются колонки схемы 
            <paramref name="source"/>. Если <paramref name="isShallowClone"/> равен <c>false</c>, то создается 
            полноценный клон <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPersistentStoreSchema)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>Создает экземпляр объекта, который описывает схема.</summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> с данными, построенный по текущей схеме.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.Clone">
            <summary>Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.CloneShallow">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, являющийся клоном текущей схемы без колонок.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - клон текущей схемы без колонок.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPersistentStore">
            <summary>Базовый объект для постоянного хранилища данных.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.#ctor(Terrasoft.Core.UserConnection)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</summary>
            <param name="userConnection">Пользовательское соединение.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.#ctor(Terrasoft.Core.Configuration.SysPersistentStore)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.Clone">
            <summary>Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</returns>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPersistentStore.GroupKey">
            <summary>Группирующий ключ.</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPersistentStore.Key">
            <summary>Ключ.</summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema">
            <summary>Схема для постоянного хранилища данных бизнес-процессов.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="entitySchemaManager">Менеджер схем объектов.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema,System.Boolean)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
            <param name="isShallowClone">Признак полноты клонирования схемы. Если <paramref name="isShallowClone"/> 
            равен <c>true</c>, то в создаваемый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> не копируются колонки схемы 
            <paramref name="source"/>. Если <paramref name="isShallowClone"/> равен <c>false</c>, то создается 
            полноценный клон <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>Создает экземпляр объекта, который описывает схема.</summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> с данными, построенный по текущей схеме.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.Clone">
            <summary>Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.CloneShallow">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, являющийся клоном текущей схемы без колонок.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - клон текущей схемы без колонок.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcPersistentStore">
            <summary>Объект для постоянного хранилища данных бизнес-процессов.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.#ctor(Terrasoft.Core.UserConnection)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStore"/>.</summary>
            <param name="userConnection">Пользовательское соединение.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStore)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStore"/>.</summary>
            <param name="source">Схема, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.Clone">
            <summary>Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей схемы.</returns>
        </member>
        <member name="T:Terrasoft.Core.GlobalAppSettings">
            <summary>
            Настройки приложения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GlobalAppSettings.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Инициализация класса.
            </summary>
            <param name="appSettings">Коллекция параметров настройки приложения.</param>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.MemoryCacheStoreSlidingExpiration">
            <summary>
            Время устаревания данных в глобальном кеше памяти приложения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMultilanguageData">
            <summary>
            Признак использования мультиязычия для данных объектов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.BaseSchemaUId">
            <summary>
            Уникальный идентификатор базовой схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CombinedSourceSchemaDataItem">
            <summary>
            Класс для хранения данных комбинированных исходных кодов клиентских схем.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CombinedSourceSchemaDBProvider">
            <summary>
            Класс провайдера комбинированных исходных кодов клиентских схем для работы с базой данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ICombinedSourceSchemaProvider">
            <summary>
            Интерфейс провайдера комбинированных исходных кодов клиентских схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ICombinedSourceSchemaProvider.SaveCombinedSchemaDescriptors(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Генерирует комбинированные дескрипторы для всех клиентских схем и сохраняет их в базу данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schemaId">Идентификатор клиентской схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.ICombinedSourceSchemaProvider.SaveCombinedSchemaSource(Terrasoft.Core.UserConnection,Terrasoft.Core.ClientUnitSchema)">
            <summary>
            Генерирует комбинированные исходные коды и хэш для клиентской схемы (с зависимостями)
            и сохраняет их в базу данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schema">Клиентская схема.</param>
        </member>
        <member name="M:Terrasoft.Core.ICombinedSourceSchemaProvider.GetCombinedSchemas(Terrasoft.Core.UserConnection)">
            <summary>
            Вычитывает перечень комбинированных клиентских схем (с зависимостями) из базы данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Коллекция комбинированных клиентских схем (с зависимостями).</returns>
        </member>
        <member name="M:Terrasoft.Core.CombinedSourceSchemaDBProvider.SaveCombinedSchemaDescriptors(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Генерирует комбинированные дескрипторы для всех клиентских схем и сохраняет их в базу данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schemaId">Идентификатор клиентской схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.CombinedSourceSchemaDBProvider.SaveCombinedSchemaSource(Terrasoft.Core.UserConnection,Terrasoft.Core.ClientUnitSchema)">
            <summary>
            Генерирует комбинированные исходные коды и хэш для клиентской схемы (с зависимостями)
            и сохраняет их в базу данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schema">Клиентская схема.</param>
        </member>
        <member name="M:Terrasoft.Core.CombinedSourceSchemaDBProvider.GetCombinedSchemas(Terrasoft.Core.UserConnection)">
            <summary>
            Вычитывает перечень комбинированных клиентских схем (с зависимостями) из базы данных.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Коллекция комбинированных клиентских схем (с зависимостями).</returns>
        </member>
        <member name="T:Terrasoft.Core.CombinedSourceSchemaProviderFactory">
            <summary>
            Фабрика классов для генерации провайдера комбинированных исходных кодов клиентских схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CombinedSourceSchemaProviderFactory.CreateInstance">
            <summary>
            Возвращает экземпляр интерфейса <see cref="T:Terrasoft.Core.ICombinedSourceSchemaProvider"/>.
            </summary>
            <returns>Экземпляр интерфейса <see cref="T:Terrasoft.Core.ICombinedSourceSchemaProvider"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysRegistrationDataSchema">
            <summary>
            Схема объекта "Регистрационные данные".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysRegistrationData">
            <summary>
            Регистрационные данные.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.SysAdminUnit">
            <summary>
            Пользователь.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.Contact">
            <summary>
            Контакт.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.UserPassword">
            <summary>
            Пароль пользователя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkType">
            <summary>
            Тип ссылки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkId">
            <summary>
            Идентификатор ссылки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkExpireDate">
            <summary>
            Дата окончания действия ссылки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor">
            <summary>
            Дескриптор элемента менеджера схем объектов.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemDescriptor">
            <summary>
            Дескриптор элемента менеджера схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию дескриптора.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию дескриптора.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemDescriptor.IsInitialized">
            <summary>
            Признак того, что дескриптор проинициализирован.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor._messages">
            <summary>
            Коллекция сообщений схемы.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor._dependencies">
            <summary>
            Коллекция зависимостей схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию дескриптора.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию дескриптора.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.BodyHash">
            <summary>
            Хэш исходного кода и стилей CSS.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.SchemaType">
            <summary>
            Тип схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.HasCss">
            <summary>
            Признак, содержит ли схема стили CSS.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.LocalizableStringsHash">
            <summary>
            Хэш локализуемых строк схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.ActionsConfigUtilities">
            <summary>
            Вспомогательный класс для перечисления <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.IsSetted(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Проверяет установку бита перечисления <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">Исходное значение <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">Значение бита, которое необходимо проверить.</param>
            <returns><c>true</c>, если значение бита установлено, иначе <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.Set(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Устанавливает значение бита перечисления <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">Исходное значение <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">Значение <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>, которое необходимо установить.</param>
            <returns>
            Возвращает новое значение с установленным битом перечисления <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.Clear(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Сбрасывает значение бита перечисления <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">Исходное значение <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">Значение <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>, которое необходимо сбросить.</param>
            <returns>Возвращает новое значение со сброшенным битом <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaComparer">
            <summary>
            Класс, сравнивающий схемы объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaComparer.IsEqualToDbStructure(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Определяет, идентична ли структура схемы обеъекта структуре сответствующей таблицы в базе данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor">
            <summary>
            Дескриптор элемента менеджера схем объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию дескриптора.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию дескриптора.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.MetaDataHash">
            <summary>
            Хэш метаданных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.UserLevelResource">
            <summary>
            Используется для получения ресурсов требующих работу с базой от имени пользователя, 
            проверку прав или наличие сессии </summary>
        </member>
        <member name="M:Terrasoft.Core.EntityResource.#ctor(Terrasoft.Core.UserConnection,System.String,System.Guid,System.Guid)">
            <summary>
            </summary>
            <param name="resourceSchemaIdentity"> Содержит либо имя схемы, либо UId схемы</param>
            <param name="resourceColumnUId"></param>
            <param name="resourceId"></param>
            <param name="userConnection"></param>
        </member>
        <member name="M:Terrasoft.Core.ICombinedSchemaGenerator.RegenerateIncludeDependencySources(System.Boolean)">
            <summary>
            Regenerates and saves included dependency sources for ClientUnitSchemas.
            </summary>
            <param name="needRefresh">Flag is manager need refresh. Optional, default value - <c>false</c>.</param>
            <remarks>
            Regenerating for all ClientUnitSchemas with property "Include dependency source" is set. Also regenerating
            descriptors for all ClientUnitSchemas and EntitySchemas.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.ICombinedSchemaGenerator.RegenerateCombinedSchemaDescriptors">
            <summary>
            Regenerates and saves descriptors for all ClientUnitSchemas and EntitySchemas.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IIncludeDependencySourcesManager">
            <summary>
            Интерфейс менеджера комбинированных исходных кодов клиентских схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IIncludeDependencySourcesManager.ReloadData">
            <summary>
            Перезагружает список комбинированных исходных кодов клиентских схем (с зависимостями) из БД в кеш.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IIncludeDependencySourcesManager.GetSchemaBody(System.Guid,System.String)">
            <summary>
            Получает тело клиентской схемы с комбинированными исходными кодами (с зависимостями) из кеша.
            </summary>
            <param name="schemaUId">Идентификатор клиенской схемы.</param>
            <param name="cultureName">Название культуры.</param>
            <returns>Тело клиентской схемы с комбинированными исходными кодами (с зависимостями).</returns>
        </member>
        <member name="M:Terrasoft.Core.IIncludeDependencySourcesManager.GetSchemaHash(System.Guid,System.String)">
            <summary>
            Получает хеш клиентской схемы с комбинированными исходными кодами (с зависимостями) из кеша.
            </summary>
            <param name="schemaUId">Идентификатор клиенской схемы.</param>
            <param name="cultureName">Название культуры.</param>
            <returns>Хеш клиентской схемы с комбинированными исходными кодами (с зависимостями).</returns>
        </member>
        <member name="T:Terrasoft.Core.IncludeDependencySourcesManager">
            <summary>
            Класс менеджера комбинированных исходных кодов клиентских схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IncludeDependencySourcesManager.Instance(Terrasoft.Core.UserConnection,Terrasoft.Core.ICombinedSourceSchemaProvider)">
            <summary>
            Инициализатор единого экземпляра.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="provider">Провайдер комбинированных исходных кодов клиентских схем (с зависимостями).</param>
            <returns>Единый экземпляр менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.IncludeDependencySourcesManager.ReloadData">
            <summary>
            Перезагружает список комбинированных исходных кодов клиентских схем (с зависимостями) из БД в кеш.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IncludeDependencySourcesManager.GetSchemaHash(System.Guid,System.String)">
            <summary>
            Получает хеш клиентской схемы с комбинированными исходными кодами (с зависимостями) из кеша.
            </summary>
            <param name="schemaUId">Идентификатор клиенской схемы.</param>
            <param name="cultureName">Название культуры.</param>
            <returns>Хеш клиентской схемы с комбинированными исходными кодами (с зависимостями).</returns>
        </member>
        <member name="M:Terrasoft.Core.IncludeDependencySourcesManager.GetSchemaBody(System.Guid,System.String)">
            <summary>
            Получает тело клиентской схемы с комбинированными исходными кодами (с зависимостями) из кеша.
            </summary>
            <param name="schemaUId">Идентификатор клиенской схемы.</param>
            <param name="cultureName">Название культуры.</param>
            <returns>Тело клиентской схемы с комбинированными исходными кодами (с зависимостями).</returns>
        </member>
        <member name="T:Terrasoft.Core.ISchemaMethod">
            <summary>
            Интерфейс схемы метода
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.Body">
            <summary>
            Тело метода
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.UseFlowEngineScriptVersion">
            <summary>
            Признак, указывающий на использование нового движка процессов
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.Name">
            <summary>
            Имя метода
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.UId">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ConfigurationSourceControlManager.#ctor(Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.BasePackageUriGenerator,Terrasoft.Core.Packages.ISourceControlAuthManager)">
            <summary>
            Инициализирует новый экземпляр класса
            <see cref="T:Terrasoft.Core.Packages.ConfigurationSourceControlManager"/> с заданными параметрами.
            </summary>
            <param name="sourceControlManager">Менеджер для работы с клиентом системы контроля версий.</param>
            <param name="uriGenerator">Генератор путей к хранилищу системы контроля версий.</param>
            <param name="authManager">Менеджер для работы с аутентификацией в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ConfigurationSourceControlManager.CommitPackage(Terrasoft.Core.Configuration.SysPackage,System.String,System.String,Terrasoft.Common.SourceControlSaveType)">
            <summary>
            Фиксирует пакет в хранилище.
            </summary>
            <param name="package">Пакет.</param>
            <param name="packagesCopyPath">Путь к рабочей копии пакета.</param>
            <param name="commitMessage">Сообщение при фиксации.</param>
            <param name="sourceControlSaveType">Тип фиксации.</param>
            <returns>Номер ревизии.</returns>
        </member>
        <member name="T:Terrasoft.Core.IMetaDataSerializer">
            <summary>
            Интерфейс сериализатора метаданных схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.TextWriter)">
            <summary>
            Сериализует метаданные схемы <paramref name="schema"/>
            с помощью <paramref name="textWriter"/>.
            </summary>
            <param name="schema">Метаданные схемы.</param>
            <param name="textWriter">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого выполняется
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.Stream)">
            <summary>
            Сериализует метаданные схемы <paramref name = "schema"/> в поток <paramref name = "stream"/>.
            </summary>
            <param name="schema">Метаданные схемы.</param>
            <param name="stream">Поток.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.TextWriter)">
            <summary>
            Сериализует метаданные списка схем <paramref name="schemaList"/>
            с помощью <paramref name="textWriter"/>.
            </summary>
            <param name="schemaList">Список метаданных схем для сериализации.</param>
            <param name="textWriter">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого выполняется
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.Stream)">
            <summary>
            Сериализует метаданные списка схем <paramref name = "schemaList"/> в поток <paramref name = "stream"/>.
            </summary>
            <param name="schemaList">Список метаданных схем для сериализации.</param>
            <param name="stream">Поток.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Десериализует метаданные списка схем с помощью <paramref name="input"/>.
            </summary>
            <param name="input">Экземпляр <see cref="T:System.IO.TextReader"/>, с помощью которого выполняется
            десериализация.</param>
            <returns>Список десериализованных элеметов менеджера схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Десериализует метаданные списка схем из потока <paramref name = "input"/>.
            </summary>
            <param name="input">Поток.</param>
            <returns>Список десериализованных элеметов менеджера схем.</returns>
        </member>
        <member name="T:Terrasoft.Core.PersistentStore">
            <summary>Постоянное хранилище данных.</summary>
        </member>
        <member name="T:Terrasoft.Core.Store.IBaseStore">
            <summary>Базовый интерфейс для постоянных хранилищ данных и кэшей.</summary>
        </member>
        <member name="M:Terrasoft.Core.Store.IBaseStore.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициализирует хранилище заданными конфигурационными параметрами.
            </summary>
            <param name="parameters">Параметры для конфигурирования хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IBaseStore.Remove(System.String)">
            <summary>Удаляет элемент с заданным ключом из хранилища.</summary>
            <param name="key">Ключ элемента.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.IBaseStore.Item(System.String)">
            <summary>Получает или устанавливает элемент хранилища по заданному ключу.</summary>
            <param name="key">Ключ элемента.</param>
            <returns>Значение элемента с ключом <paramref name="key"/>либо <c>null</c>, если значение не найдено.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.#ctor(System.Type,Terrasoft.Core.UserConnection,System.String,Terrasoft.Core.Store.ICacheStore)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.PersistentStore"/>.</summary>
            <param name="storage">Объект-хранилище для данных в БД.
            Должен быть наследником <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</param>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="storageKey">Ключ-сокращение для группировки ключей в Redis.</param>
            <param name="cacheStore">Хранилище для кеширования данных.</param>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если объект-хранилище не является производным от 
            <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</exception>
            <exception cref="T:System.TypeInitializationException">Если не инициализировано пользовательское соединение.
            </exception>
        </member>
        <member name="F:Terrasoft.Core.PersistentStore._cacheStore">
            <summary>Получает или устанавливает хранилище для кеширования данных.</summary>
            <returns>Хранилище для кеширования данных.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Не используется для хранилища.</summary>
            <param name="parameters">Параметры для конфигурирования хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.RemoveGroup(System.String)">
            <summary>Удаляет из хранилища записи из группы.</summary>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.Remove(System.String)">
            <summary>Удаляет из хранилища запись по ключу.</summary>
            <param name="key">Ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.Remove(System.String,System.String)">
            <summary>Удаляет из хранилища запись по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.Remove(System.String,System.Guid)">
            <summary>Удаляет из хранилища запись по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Получает перечень значений по списку ключей.</summary>
            <param name="keys">Список ключей.</param>
            <returns>Возвращает словать ключей-значений.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue(System.String,System.String)">
            <summary>Получает значение по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Возвращает значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue(System.String,System.String,System.Object)">
            <summary>Получает значение по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>Возвращает значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue(System.String,System.Guid,System.Object)">
            <summary>Получает значение по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>Возвращает значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue``1(System.String,System.String)">
            <summary>Получает типизированное значение по ключу и группирующему ключу.</summary>
            <typeparam name="T">Тип для приведения значения.</typeparam>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Возвращает типизированное значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue``1(System.String,System.Guid)">
            <summary>Получает типизированное значение по ключу и группирующему ключу.</summary>
            <typeparam name="T">Тип для приведения значения.</typeparam>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Возвращает типизированное значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue``1(System.String,System.String,``0)">
            <summary>Получает типизированное значение по ключу и группирующему ключу.</summary>
            <typeparam name="T">Тип для приведения значения.</typeparam>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>Возвращает типизированное значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.GetValue``1(System.String,System.Guid,``0)">
            <summary>Получает типизированное значение по ключу и группирующему ключу.</summary>
            <typeparam name="T">Тип для приведения значения.</typeparam>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>Возвращает типизированное значение.</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStore.SetValue(System.String,System.Object,System.String)">
            <summary>Устанавливает значение по ключу и группирующему ключу.</summary>
            <param name="key">Ключ.</param>
            <param name="value">Значение.</param>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="P:Terrasoft.Core.PersistentStore.Item(System.String)">
            <summary>Получает или устанавливает элемент хранилища по заданному ключу.</summary>
            <param name="key">Ключ элемента.</param>
            <returns>Значение элемента с ключом <paramref name="key"/>либо <c>null</c>, если значение не найдено.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.PersistentStore.Item(System.String,System.String)">
            <summary>Получает или устанавливает элемент хранилища по заданному ключу с учетом группы.</summary>
            <param name="key">Ключ элемента.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Значение элемента с ключом <paramref name="key"/> и группой <paramref name="groupKey"/> 
            либо <c>null</c>, если значение не найдено.</returns>
        </member>
        <member name="P:Terrasoft.Core.PersistentStore.Item(System.String,System.Guid)">
            <summary>Получает или устанавливает элемент хранилища по заданному ключу с учетом группы.</summary>
            <param name="key">Ключ элемента.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Значение элемента с ключом <paramref name="key"/> и группой <paramref name="groupKey"/> 
            либо <c>null</c>, если значение не найдено.</returns>
        </member>
        <member name="T:Terrasoft.Core.PersistentStoreDBProvider">
            <summary>Провайдер БД постоянного хранилища данных.</summary>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.PersistentStoreDBProvider"/>.</summary>
            <param name="connection">Пользовательское соединение.</param>
            <param name="storageName">Имя хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Add(System.String,System.Object,System.String)">
            <summary>Добавляет запись в БД.</summary>
            <param name="key">Ключ.</param>
            <param name="value">Значение.</param>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Get(System.String,System.String)">
            <summary>Получает значение записи из БД.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Значение</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.GetGroup(System.String)">
            <summary>Получает записи группы из БД.</summary>
            <param name="groupKey">Группирующий ключ.</param>
            <returns>Коллекция ключей/значений</returns>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Remove(System.String,System.String)">
            <summary>Удаляет запись из БД по ключу во всех группах или ко ключу в указанной группе.</summary>
            <param name="key">Ключ.</param>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.RemoveGroup(System.String)">
            <summary>Удаляет группу из БД.</summary>
            <param name="groupKey">Группирующий ключ.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessDataSourceFiltersConverter">
            <summary>
            Интерфейс для конвертера источников данных в элементах процессов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataSourceFiltersConverter.ConvertToProcessDataSourceFilters(Terrasoft.Core.Process.ProcessActivity,System.Guid,System.String)">
            <summary>
            Конвертирует набор фильтров в формат процесса.
            </summary>
            <param name="processElement">Элемент процесса.</param>
            <param name="entitySchemaUId">Идентификатор схемы объекта.</param>
            <param name="dataSourceFilters">Набор фильтров.</param>
            <returns>Набор фильтров в формате процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParameterInfoComposer">
            <summary>
            Представляет интерфейс, ответственный за коррекцию таблицы связей процесса в случае, когда его схема была
            изменена после запуска.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterInfoComposer.GetComposedParameterMappings(System.Guid,System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Выполняет слияние таблицы связей запущенного процесса с указанным шаблонным набором связей параметров.
            </summary>
            <param name="processUId">Идентификатор процесса.</param>
            <param name="parameterMappings">Таблица связей параметров схемы процесса.</param>
            <returns>Объединенную таблицу связей с дополнениями из шаблона и изменениями, внесенными в ходе исполнения
            процесса. </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessModel">
            <summary>
            Представляет доступ к методам экземпляра процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessModel.GetScriptTaskMethod(System.String)">
            <summary>
            Возвращает ссылку на экземпляр метода по его имени.
            </summary>
            <param name="methodName">Имя метода.</param>
            <returns>Делегат c определенной сигнатурой метода.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowStartMessage">
            <summary>
            Представляет элемент "Стартовое сообщение" бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent">
            <summary>
            Представляет базовый класс элементов бизнес-процесса, генерирующих и обрабатывающих сообщения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowElement">
            <summary>
            Представляет элемент бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.#ctor(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/>, используя схему процесса <see cref="P:Terrasoft.Core.Process.FlowElement.FlowSchema"/>
            и BPMN наименование элемента бизнес-процесса.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <param name="bpmnElementName">BPMN наименование элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.SubscribeOnVisited(System.Func{Terrasoft.Core.Process.FlowElement,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement}})">
            <summary>
            Подписывает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> на событие "посещен".
            </summary>
            <param name="defaultHandler">Метод по умолчанию для вызова события "посещен".</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> и заданный экземпляр 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/>, который сравнивается с текущим экземпляром 
            <see cref="T:Terrasoft.Core.Process.FlowElement"/>.</param>
            <returns><c>true</c>, если сравниваемые объекты идентичны; иначе — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.GetHashCode">
            <summary>
            Возвращает хэш-код объекта.
            </summary>
            <returns>Хэш-код объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Записывает свойства бизнес-процесса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="dataWriter">Экземпляр класса для записи свойств.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Читает свойства бизнес-процесса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="dataReader">Экземпляр класса для чтения свойств.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Обрабатывает элемент бизнес-процесса.
            </summary>
            <param name="visitor">Экземпляр класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, который отвечает за переход между
            элементами процесса.</param>
            <param name="previousFlowElement">Не используется.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.UseClonedInstance">
            <summary>
            Определяет, нужно ли схеме при инстанцировании элемента клонировать его.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.UId">
            <summary>
            Возвращает и устанавливает идентификатор элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.Name">
            <summary>
            Возвращает и устанавливает наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.BpmnElementName">
            <summary>
            Возвращает BPMN наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.FlowSchema">
            <summary>
            Возвращает экземпляр схемы бизнес-процесса <see cref="P:Terrasoft.Core.Process.FlowElement.FlowSchema"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.ParameterStore">
            <summary>
            Хранилище параметров бизнес-процесса <see cref="T:Terrasoft.Core.Process.IProcessParameterStore"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.FlowService">
            <summary>
            Служба обмена сообщений <see cref="P:Terrasoft.Core.Process.FlowElement.FlowService"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.ParameterPathes">
            <summary>
            Перечень путей к значениям параметров процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.IsUsedInEventSubProcess">
            <summary>
            Признак, используется ли в событийном подпроцессе.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.FlowElement.Visited">
            <summary>
            Событие, возникающее когда элемент был обработан.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.#ctor(Terrasoft.Core.Process.FlowIntermediateMessageEvent)">
            <summary>
            Создает копию экземпляра <see cref="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent"/>.
            </summary>
            <param name="flowElement">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.#ctor(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema"></param>
            <param name="bpmnElementName">Имя типа элемента процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет запись свойств.
            </summary>
            <param name="dataWriter">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется запись свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет чтение свойств.
            </summary>
            <param name="dataReader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется вычитка свойств.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowIntermediateMessageEvent.Message">
            <summary>
            Текст cообщения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowStartMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowStartMessage"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchema"/> схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowStartMessage.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessValidationResult">
            <summary>
            Представляет данные анализа схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.IsInterpretable">
            <summary>
            Признак, определяющий возможность интерпретации процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.Message">
            <summary>
            Текстовое сообщение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.ExecutionMode">
            <summary>
            Режимы исполнения схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.ValidatorInfo">
            <summary>
            Возвращает список свойств процесса, которые не позволяет ему быть интерпретируемым.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.Results">
            <summary>
            Результаты валидации схемы бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessEngineStrategy">
            <summary>
            Представляет семейство алгоритмов, которые переопределяют поведение экземпляра <see cref="T:Terrasoft.Core.ProcessEngine"/>.
            <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessEngineStrategy.GetProcessActivityStatus">
            <summary>
            Возвращает список пар ключ/значение, где ключ - состояние активности, а значение - идентификатор состояния.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessFlowElementStrategy">
            <summary>
            Представляет семейство алгоритмов, которые переопределяют поведение экземпляра <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.
            <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElementStrategy.GetDBExecutor">
            <summary>
            Возвращает экземпляр исполнителя запросов к БД.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ExecutionMode">
            <summary>
            Режимы исполнения схемы бизнес-процесса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.Compile">
            <summary>
            Режим исполнения, который требует генерации и компиляции исходного кода.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.Interpretable">
            <summary>
            Режим исполнения, который не требует генерации и компиляции исходного кода.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.CompileInterpretable">
            <summary>
            Режим исполнения, который требует генерации и компиляции исходного кода только для методов процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessValidationResult">
            <summary>
            Представляет результаты анализа на возможность интерпретации схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.IsInterpretable">
            <summary>
            Возвращает признак, интерпретируемый процесс или нет.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.ValidatorInfo">
            <summary>
            Возвращает список свойств процесса, которые требуют компиляции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.Message">
            <summary>
            Текстовое сообщение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.ExecutionMode">
            <summary>
            Режимы исполнения схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.Results">
            <summary>
            Результаты валидации схемы бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterStoreEmulator">
            <summary>Эмулятор хранилища параметров процессов.</summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParameterStore">
            <summary>
            Интерфейс хранилища параметров бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfoPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь данные параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к данным параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.FindParameterInfo(System.Guid,System.String)">
            <summary>
            Осуществляет поиск данных параметра процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> или <c>null</c>, если данные не найдены.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfo(System.Guid,System.String)">
            <summary>
            Возвращает данные параметра процесса. Если данные не найдены, генерируется исключение.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Сохраняет данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="pathParametersInfo">Список пар ключ/значение, где ключ - путь к параметру,
            а значение - данные параметра процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <summary>
            Сохраняет данные параметра заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <param name="parameterInfo">Данные параметра бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.RemoveParametersInfo(System.Guid)">
            <summary>
            Удаляет все данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetProcessParameterPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь значения параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к значениям параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.String)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.String"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Guid)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.Guid"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Int32)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Int32"/> .
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Double)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.Double"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Enum)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.Enum"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.DateTime"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:System.Boolean"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value"> Значение параметра типа <see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <summary>
            Устанавливает для заданного параметра значение типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.String"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Guid"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Int32"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Double"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Enum"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.DateTime"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Boolean"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.RemoveParameterValues(System.Guid)">
            <summary>
            Удаляет все значения параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.FindParameterValue(System.Guid,System.String)">
            <summary>
            Извлекает значение параметра произвольного типа по сформированному ключу. Ключ формируется по значению 
            идентификатора <paramref name="processUId"/> и значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <returns>
            Значение параметра или <c>null</c> в случае, если параметр не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.#ctor">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterStoreEmulator"/>.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessParameterStoreEmulator._parameterInfoPathes">
            <summary>Получает хранилище путей параметров.</summary>
            <returns>Хранилище для путей параметров.</returns>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessParameterStoreEmulator._parameterInfoLocalStore">
            <summary>Получает хранилище для описания параметров.</summary>
            <returns>Хранилище для описания параметров.</returns>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessParameterStoreEmulator._parameterStores">
            <summary>Получает хранилище для параметров.</summary>
            <returns>Хранилище для параметров.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.GetParameterInfoPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь данные параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к данным параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.FindParameterInfo(System.Guid,System.String)">
            <summary>
            Осуществляет поиск данных параметра процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> или <c>null</c>, если данные не найдены.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.GetParameterInfo(System.Guid,System.String)">
            <summary>
            Возвращает данные параметра процесса. Если данные не найдены, генерируется исключение.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если данные параметра процесса не найдены.</exception>&gt;.
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <summary>
            Сохраняет данные параметра заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <param name="parameterInfo">Данные параметра бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Сохраняет данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="pathParametersInfo">Список пар ключ/значение, где ключ - путь к параметру,
            а значение - данные параметра процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.RemoveParametersInfo(System.Guid)">
            <summary>
            Удаляет все данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.RemoveParameterValues(System.Guid)">
            <summary>
            Удаляет все данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.GetProcessParameterPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь значения параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к значениям параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.FindParameterValue(System.Guid,System.String)">
            <summary>
            Извлекает значение параметра произвольного типа по сформированному ключу. Ключ формируется по значению 
            идентификатора <paramref name="processUId"/> и значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <returns>
            Значение параметра или <c>null</c> в случае, если параметр не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Decimal"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Descimal"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Guid)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Guid"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Int32)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Int32"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.String)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.String"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Enum)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Enum"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.DateTime"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Boolean"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/> по сформированному
            ключу. Ключ формируется по значению идентификатора <paramref name="processUId"/> и значению параметра
            <paramref name="parameterPath"/>.</summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.SetParameterValue(System.Guid,System.String,System.Double)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Double"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Decimal"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Guid"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Int32"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.String"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Enum"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.DateTime"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Boolean"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.</summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/> по
            сформированному ключу. Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.</summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterStoreEmulator.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Double"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.GetLookupSettingsDisplayValue(Terrasoft.Core.UserConnection,Terrasoft.Core.Configuration.SysSettings,System.Guid)">
            <summary>
            Получает значение для отображения системной настройки с типом Справочник.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserLoginError(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Записывает в лог сообщение об ошибке авторизации, включающее информацию об исключении, которое вызвало эту
            ошибку.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="userName">Имя пользователя.</param>
            <param name="clientIP">IP адрес.</param>
            <param name="exceptionMessage">Информация об исключении.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserLoginError(Terrasoft.Core.UserConnection,System.String,System.String,System.Exception)">
            <summary>
            Записывает в лог сообщение об ошибке авторизации, включающее информацию об исключении, которое вызвало эту
            ошибку.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="userName">Имя пользователя.</param>
            <param name="clientIP">IP адрес.</param>
            <param name="exception">Исключение.</param>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSSPEntitySchemaAccessList">
            <summary>
            Список доступа пользователей портала к объектам.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSSPEntitySchemaAccessList.EntitySchemaUId">
            <summary>
            Идентификатор объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaType">
            <summary>Тип схемы исходного кода</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.Module">
            <summary>Модуль</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.EditViewModelSchema">
            <summary>Схема представления модели карточки</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.ModuleViewModelSchema">
            <summary>Схема представления модели раздела</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.DetailViewModelSchema">
            <summary>Схема представления модели детали</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.GridDetailViewModelSchema">
            <summary>Схема представления модели детали с реестром</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.EditControlsDetailViewModelSchema">
            <summary>Схема представления модели детали с полями</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.UnitTestModule">
            <summary>Схема модуля unit-теста</summary>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaDependency">
            <summary>
            Зависимость схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.ClientUnitSchemaDependency"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.#ctor(Terrasoft.Core.ClientUnitSchemaDependency)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.ClientUnitSchemaDependency"/>,
            являющийся клоном заданного индекса.
            </summary>
            <param name="source">Зависимость, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств зависимости схемы из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных зависимости схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные зависимости.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.Clone">
            <summary>
            Возвращает клон текущей зависимости схемы.
            </summary>
            <returns>Клон текущей зависимости схемы.</returns>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaDependency.SchemaUId">
            <summary>
            Идентификатор схемы, от которой зависит текущая <see cref="T:Terrasoft.Core.ClientUnitSchema"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection">
            <summary>
            Предоставляет методы работы с коллекцией зависимостей схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.#ctor(Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection"/>,
            являющийся клоном заданной коллекции зависимостей схемы.
            </summary>
            <param name="source">Коллекция зависимостей схемы, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.Clone">
            <summary>
            Возвращает коллекцию зависимостей схемы - клон данной коллекции.
            </summary>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection"/>, который является клоном текущей коллекции
            зависимостей схемы.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.SchemaManager`1">
            <summary>
            Базовый класс менеджера схем.
            </summary>
            <typeparam name="TSchemaManagerSchema">Класс, наследуемый от <see cref="T:Terrasoft.Core.Schema"/>, реализующий интерфейсы 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>, 
            <see cref="T:System.ICloneable"/>.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.Manager`2">
            <summary>
            Менеджер.
            </summary>
            <typeparam name="TItem">Класс, реализующий интерфейс <see cref="T:Terrasoft.Core.IManagerItem"/>.</typeparam>
            <typeparam name="TInstance">Любой тип.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.IManager`2">
            <summary>
            Параметризованный класс интерфейса <see cref="T:Terrasoft.Core.IManager"/>.
            </summary>
            <typeparam name="TItem">Тип элемента менеджера</typeparam>
            <typeparam name="TInstance">Экземпляр элемента менеджера соответствующего типа.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.IManager">
            <summary>
            Предоставляет методы и свойства менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager.Initialize(Terrasoft.Core.ManagerProvider,Terrasoft.Core.ManagerProviderConfigurationElement)">
            <summary>
            Инициализирует менеджер, используя заданные провайдер менеджера и информацию конфигурационного файла.
            </summary>
            <param name="provider">Провайдер менеджера.</param>
            <param name="configuration">Информация конфигурационного файла.</param>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindItemByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента менеджера.</param>
            <returns>
            Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с уникальным идентификатором <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера с заданным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента менеджера.</param>
            <returns>
            Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с уникальным идентификатором <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByRealUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера для заданного уникального идентификатора расширения схемы.
            </summary>
            <param name="itemUId">Уникальный идентификатор расширения схемы.</param>
            <returns>
            Элемент менеджера для расширения схемы с уникальным идентификатором <paramref name = "itemUId"/>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindItemByName(System.String)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByName(System.String)">
            <summary>
            Возвращает элемент менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindInstanceByUId(System.Guid)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetInstanceByUId(System.Guid)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindInstanceByName(System.String)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetInstanceByName(System.String)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя экземпляра элемента менеджера с именем <paramref name="name"/>.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItems">
            <summary>
            Возвращает перечисление элементов менеджера.
            </summary>
            <returns>Перечисление элементов менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            Возвращает перечисление элементов менеджера, которые соответствуют заданным критериям.
            </summary>
            <param name="match">Критерии, которым должны соответствовать возвращаемые элементы перечисления.</param>
            <returns>Перечисление элементов менеджера, которые соответствуют критериям <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.Clear">
            <summary>
            Удаляет все элементы из коллекции элементов менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.Provider">
            <summary>
            Провайдер.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.ItemCount">
            <summary>
            Количество элементов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindItemByUId(System.Guid)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.FindItemByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetItemByUId(System.Guid)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.GetItemByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindItemByName(System.String)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.FindItemByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetItemByName(System.String)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.GetItemByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindInstanceByUId(System.Guid)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.FindInstanceByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetInstanceByUId(System.Guid)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.GetInstanceByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindInstanceByName(System.String)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.FindInstanceByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetInstanceByName(System.String)">
            <summary>
            Замещение метода <see cref="M:Terrasoft.Core.IManager.GetInstanceByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.CreateItemCollection">
            <summary>
            Создает коллекцию элементов менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/>.
            </summary>
            <returns>Коллекция элементов менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeInstance(`0)">
            <summary>
            Создает экземпляр заданного	элемента менеджера.
            </summary>
            <param name="item">Элемент менеджера, экземпляр которого создается.</param>
            <returns>Экземпляр элемента менеджера <paramref name="item"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeSafeInstance(`0)">
            <summary>
            Создает безопасный экземпляр заданного элемента менеджера. 
            </summary>
            <param name="item">Элемент менеджера, безопасный экземпляр которого создается.</param>
            <returns>
            Безопасный экземпляр элемента менеджера <paramref name="item"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeAllItemCollection(Terrasoft.Core.IManagerItemCollection{Terrasoft.Core.IManagerItem})">
            <summary>
            Инициализирует коллекцию элементов менеджера.
            </summary>
            <param name="items">Коллекция элементов менеджера для инициализации.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.ClearItems(System.Object,System.EventArgs)">
            <summary>
            Удаляет все элементы в коллекции элементов менеджера.
            </summary>
            <param name="sender">Ссылка на объект, инициировавший удаление.</param>
            <param name="eventArgs">Аргументы события удаления элементов.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Initialize(Terrasoft.Core.ManagerProvider,Terrasoft.Core.ManagerProviderConfigurationElement)">
            <summary>
            Инициализирует менеджер схем, используя заданные провайдер менеджера и информацию конфигурационного файла.
            </summary>
            <param name="provider">Провайдер менеджера.</param>
            <param name="configuration">Информация конфигурационного файла.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента менеджера текущего типа с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента менеджера.</param>
            <returns>Элемент менеджера текущего типа с уникальным идентификатором <paramref name="uid"/>. Если 
            элемент с уникальным идентификатором <paramref name="uid"/> не найден, возвращается значение по умолчанию 
            для текущего типа элемента менеджера.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindItemByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента менеджера.</param>
            <returns>
            Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с уникальным идентификатором <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера с заданным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента менеджера.</param>
            <returns>
            Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с уникальным идентификатором <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItemByUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера с заданным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента менеджера.</param>
            <returns>
            Элемент менеджера текущего типа с уникальным идентификатором <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByRealUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера для заданного уникального идентификатора расширения схемы.
            </summary>
            <param name="itemUId">Уникальный идентификатор расширения схемы.</param>
            <returns>
            Элемент менеджера для расширения схемы с уникальным идентификатором <paramref name = "itemUId"/>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByName(System.String)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера текущего типа с именем <paramref name="name"/>. Если элемент с именем 
            <paramref name="name"/> не найден, возвращается значение по умолчанию для текущего типа элемента менеджера.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindItemByName(System.String)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByName(System.String)">
            <summary>
            Возвращает элемент менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера типа <see cref="T:Terrasoft.Core.IManagerItem"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItemByName(System.String)">
            <summary>
            Возвращает элемент менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера универсального типа с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindInstanceByUId(System.Guid)">
            <summary>
            Возвращает экземпляр элемента менеджера по заданному уникальному идентификатору.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>. Если элемент 
            менеджера с уникальным идентификатором <paramref name="uid"/> не найден, возвращается экземпляр по 
            умолчанию текущего типа элемента менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindInstanceByUId(System.Guid)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetInstanceByUId(System.Guid)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetInstanceByUId(System.Guid)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindInstanceByName(System.String)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>. Если экземпляр элемента менеджера с 
            уникальным идентификатором <paramref name="name"/> не найден, возвращается экземпляр по умолчанию для 
            текущего типа элемента менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindInstanceByName(System.String)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetInstanceByName(System.String)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя экземпляра элемента менеджера с именем <paramref name="name"/>.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetInstanceByName(System.String)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByCaption(System.String)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным заголовком.
            </summary>
            <param name="caption">Заголовок элемента менеджера.</param>
            <returns>Элемент менеджера текущего типа с заголовком <paramref name="caption"/>. Если элемент с заголовком
            <paramref name="caption"/> не найден, возвращается значение по умолчанию для текущего типа элемента
            менеджера.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItems">
            <summary>
            Возвращает перечислитель элементов менеджера.
            </summary>
            <returns>Перечислитель элементов менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            Возвращает перечислитель элементов менеджера, которые соответствуют заданным критериям. 
            </summary>
            <param name="match">Критерии, которым должны соответствовать возвращаемые элементы перечисления.</param>
            <returns>Перечислитель элементов менеджера, которые соответствуют критериям <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItems">
            <summary>
            Возвращает перечислитель элементов менеджера текущего типа.
            </summary>
            <returns>Перечислитель элементов менеджера текущего типа.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Add(`0)">
            <summary>
            Добавляет новый элемент менеджера в конец коллекции.
            </summary>
            <param name="item">Элемент, который добавляется в коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Remove(`0)">
            <summary>
            Удаляет из коллекции элементов менеджера заданный элемент.
            </summary>
            <param name="item">Элемент, который должен быть удален из коллекции.</param>
            <returns>
            <c>true</c>, если <paramref name="item"/> успешно удален; иначе - <c>false</c>. Этот метод также может 
            возвратить <c>false</c>, если <paramref name="item"/> не найден в коллекции элементов менеджера.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Clear">
            <summary>
            Удаляет все элементы из коллекции элементов менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Items">
            <summary>
            Коллекция элементов менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.AllItems">
            <summary>
            Коллекция элементов менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Provider">
            <summary>
            Провайдер.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.ItemCount">
            <summary>
            Количество элементов.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManager">
            <summary>
            Интерфейс менеджера схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Инициализирует менеджер схем, используя заданный провайдер и информацию конфигурационного файла.
            </summary>
            <param name="provider">Провайдер менеджера схем.</param>
            <param name="configuration">Информация конфигурационного файла.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.AddSchema(System.Guid,System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString,System.Guid)">
            <summary>
            Добавляет схему с заданными параметрами в менеджер схем.
            </summary>
            <param name="uid">Идентификатор схемы.</param>
            <param name="name">Имя схемы.</param>
            <param name="caption">Заголовок схемы.</param>
            <param name="description">Описание схемы.</param>
            <param name="parentUId">Идентификатор родительской схемы.</param>
            <returns>Элемент менеджера, содержащий добавленную схему с заданными параметрами.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.RemoveSchema(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Удаляет из менеджера схем схему с заданным идентификатором.
            </summary>
            <param name="uid">Идентификатор удаляемой схемы.</param>
            <param name="userConnetion">Пользовательское подключение.</param>
            <returns>Идентификатор записи в SysSchemaInSolution, в которой схема была удалена.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.RemoveItemByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Удаляет элемент с заданным идентификатором из текущего менеджера схем.
            </summary>
            <param name="uid">Идентификатор удаляемого элемента.</param>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Создает новую схему с заданными именем и родительской схемой с указанием признака 
            создания схемы из метаданных.
            </summary>
            <param name="name">Имя схемы.</param>
            <param name="baseSchema">Элемент, содержащий родительскую схему.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="fromMetaData">Признак создания схемы из метаданных.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Создает новую схему с заданными именем, родительской схемой и указанием признака добавления схемы в список 
            редактируемых элементов.
            </summary>
            <param name="name">Имя схемы.</param>
            <param name="baseSchema">Элемент, содержащий родительскую схему.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <param name="addToDesignItems">Признак добавления схемы к списку редактируемых элементов.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},System.Guid)">
            <summary>
            Загружает в переданную коллекцию исходные коды заданной схемы.
            </summary>
            <param name="compileCollection">Коллекция, в которую загружаются исходные коды схемы.</param>
            <param name="uid">Идентификатор схемы, исходные коды которой загружаются.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Создает экземпляр схемы по типу, указанному в переданном элементе менеджера. Если тип схемы элемента 
            менеджера не найден в сборке, генерируется исключение.
            </summary>
            <param name="schemaManagerItem">Элемент менеджера, в котором должна быть проинициализирована схема.</param>
            <param name="assembly">Сборка, которая содержит тип создаваемой схемы.</param>
            <returns>Пронициализированный экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetDefSchemaUId">
            <summary>
            Возвращает идентификатор схемы, от которой наследуются все базовые схемы менеджера схем.
            </summary>
            <returns>Идентификатор схемы, от которой наследуются все базовые схемы менеджера схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GenerateItemUniqueName(System.String)">
            <summary>
            Генерирует уникальное имя элемента менеджера с использованием заданного префикса.
            </summary>
            <param name="prefix">Префикс.</param>
            <returns>Уникальное имя элемента менеджера с префиксом <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GenerateItemUniqueCaption(System.String)">
            <summary>
            Генерирует уникальный заголовок элемента менеджера с использованием заданного префикса.
            </summary>
            <param name="prefix">Префикс.</param>
            <returns>Уникальный заголовок элемента менеджера с префиксом <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные схемы с заданным идентификатором.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы с идентификатором <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные схемы с заданным идентификатором в формате, удобном для чтения.
            </summary>
            <param name="schemaId">Идентификатор схемы, метаданные которой нужно получить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы с идентификатором <paramref name="schemaId"/> в формате, 
            удобном для чтения.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные заданной схемы в формате, удобном для чтения.
            </summary>
            <param name="schema">Схема, метаданные которой нужно получить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы <paramref name="schema"/> в формате, удобном для чтения.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает генератор исходных кодов схем процессов.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Генератор схем процессов.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveSchemaSources(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            Сохраняет исходные коды из переданной коллекции.
            </summary>
            <param name="sources">Коллекция исходных кодов, которые нужно сохранить.</param>
            <returns>
            <c>true</c>, если все исходные коды из коллекции <paramref name="sources"/> сохранены успешно; 
            <c>false</c> - если хотя бы один элемент коллекции не был сохранен.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetSchemaSources(System.Guid,System.Guid,Terrasoft.Core.UserConnection,System.String@)">
            <summary>
            Получение исходных кодов схемы с заданным идентификатором.
            </summary>
            <param name="uid">Идентификатор схемы, исходные коды которой нужно получить.</param>
            <param name="schemaInSolutionUId">Идентификатор записи в таблице SysSchemaInSolution.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="errorMessage">Сообщение об ошибке при получении исходных кодов схемы.</param>
            <returns>Коллекция объектов с исходными кодами схемы с идентификатором <paramref name="uid"/>. 
            Если при получении исходных кодов произошла ошибка, будет возвращен <c>null</c>, а в 
            параметре <paramref name="errorMessage"/> будет возвращено сообщение об ошибке.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.InitializeItem(System.Guid)">
            <summary>
            Выполняет инициализацию элемента менеджера с заданным идентификатором.
            </summary>
            <param name="itemUId">Идентификатор элемента менеджера, который нужно проинициализировать.</param>
            <returns><c>true</c>, если элемент менеджера с идентификатором <paramref name="itemUId"/> 
            проинициализирован успешно; иначе - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если в качестве параметра <paramref name="itemUId"/> передано 
            пустое значение.</exception>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.FindDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Осуществляет поиск редактируемого элемента менеджера с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор искомого элемента.</param>
            <returns>Редактируемый элемент с идентификатором <paramref name="uid"/> либо 
            <c>null</c>, если такой элемент не найден.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает редактируемый элемент с заданным идентификатором. Если такой элемент не найден, генерируется 
            исключение. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор возвращаемого элемента.</param>
            <returns>Редактируемый элемента с идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveDesignedItemInSessionData(Terrasoft.Core.UserConnection,Terrasoft.Core.MetaSchema,System.Guid)">
            <summary>
            Сериализует и сохраняет в данные сессии экземпляр редактируемого элемента с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="designedItem">Редактируемый элемент менеджера.
            </param>
            <param name="designedItemId">Идентификатор сохраняемого редактируемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveDesignedItemFolderIdInSessionData(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Сохраняет в данные сессии переданный идентификатор каталога, в котором хранится редактируемая схема 
            элемента с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="designedItemId">Идентификатор редактируемого элемента.
            </param>
            <param name="designedItemFolderId">Идентификатор каталога, котором хранится редактируемая схема элемента с
            идентификатором <paramref name="designedItemId"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Актуализирует дескриптор элемента менеджера схем.
            </summary>
            <param name="item">Элемент менеджера, в котором необходимо актуализировать дескриптор.</param>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.AppConnection">
            <summary>
            Системное соединение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ItemName">
            <summary>
            Имя элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ItemCaption">
            <summary>
            Заголовок элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ResourceManagerName">
            <summary>
            Имя менеджера ресурсов.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemAdding">
            <summary>
            Событие, возникающее перед добавлением элемента в менеджер.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemAdded">
            <summary>
            Событие, возникающее после добавления элемента в менеджер.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemRemoving">
            <summary>
            Событие, возникающее перед удалением элемента из менеджера.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemRemoved">
            <summary>
            Событие, возникающее после удаления элемента из менеджера.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemSaving">
            <summary>
            Событие, возникающее перед сохранением элемента.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemSaved">
            <summary>
            Событие, возникающее после сохранения элемента.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.SchemaManager`1"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemAdding(Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs)">
            <summary>
            Обработчик события, возникающего перед добавлением новой схемы.
            </summary>
            <param name="e">Агрументы события, возникающего перед добавлением новой схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemAdded(Terrasoft.Core.SchemaManagerItemAfterAddEventArgs)">
            <summary>
            Обработчик события, возникающего после добавления новой схемы.
            </summary>
            <param name="e">Аргументы события, возникающего после добавления новой схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemRemoving(Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs)">
            <summary>
            Обработчик события, возникающего перед удалением схемы.
            </summary>
            <param name="e">Аргументы события, возникающего перед удалением схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemRemoved(Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs)">
            <summary>
            Обработчик события, возникающего после удаления схемы.
            </summary>
            <param name="e">Агрументы события, возникающего после удаления схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemSaving(Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs)">
            <summary>
            Обработчик события, возникающего перед сохранением схемы.
            </summary>
            <param name="e">Аргументы события, возникающего перед сохранением схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemSaved(Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs)">
            <summary>
            Обработчик события, возникающего после сохранения схемы.
            </summary>
            <param name="e">Аргументы события, возникающего после сохранения схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetFullItemHierarchy(System.Guid)">
            <summary>
            Возвращает иерархию элементов менеджера схем по заданому уникальному идентификатору.
            </summary>
            <param name="realUId">Уникальный идентификатор элемента, от которого строится иерархия.</param>
            <returns>Иерархия элементов менеджера схем по заданому уникальному идентификатору.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateRuntimeSchemaFromMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Создает схему из метаданных с учетом полной иерархии элементов, включая расширения схемы в параллельных 
            пакетах.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Схема с учетом полной иерархии элементов, включая параллельные ветки.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Исключение генерируется, если <paramref name="schemaUId"/> - идентификатор замещающей схемы.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindInstanceFromMetaData(System.Guid)">
            <summary>
            Осуществляет поиск экземпляра схемы с заданным уникальным идентификатором на основании метаданных.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetInstanceFromMetaData(System.Guid)">
            <summary>
            Возвращает экземпляр схемы с заданным уникальным идентификатором на основании метаданных.
            </summary>
            <param name="schemaUId">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает генератор исходных кодов схем менеджера.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Генератор исходных кодов схем менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetItems">
            <summary>
            Возвращает перечислитель элементов данного менеджера.
            </summary>
            <returns>Перечислитель элементов менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Clear">
            <summary>
            Удаляет все элементы из коллекции элементов менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveItemByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Удаляет элемент с заданным идентификатором из текущего менеджера схем.
            </summary>
            <param name="uid">Идентификатор удаляемого элемента.</param>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает экземпляр генератора схем процессов.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Генератор схем процессов.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Выполняет инициализацию менеджера схем, используя заданный провайдер и информацию конфигурационного файла.
            </summary>
            <param name="provider">Провайдер менеджера схем.</param>
            <param name="configuration">Информация конфигурационного файла.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetMetaDataSerializer(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает сериализатор схем менеджера. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Сериализатор схем менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Актуализирует дескриптор элемента менеджера схем.
            </summary>
            <param name="item">Элемент менеджера, в котором необходимо актуализировать дескриптор.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.DesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает экземпляр элемента времени разработки.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <returns>Экземпляр элемента времени разработки.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetItemFromMetaData(System.Guid,Terrasoft.Core.UserConnection,System.Nullable{System.Guid})">
            <summary>
            Возвращает элемент менеджера, содержащий схему с заданным идентификатором, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="workspaceId">Уникальный идентификатор рабочего пространства.</param>
            <returns>Элемент менеджера, содержащий схему с идентификатором <paramref name="schemaUId"/> для
            пользовательского подключения <paramref name="userConnection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeItem(System.Guid)">
            <summary>
            Выполняет инициализацию элемента менеджера с заданным идентификатором.
            </summary>
            <param name="itemUId">Идентификатор элемента менеджера, который нужно проинициализировать.</param>
            <returns><c>true</c>, если элемент менеджера с идентификатором <paramref name="itemUId"/> 
            проинициализирован успешно; иначе - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если в качестве параметра <paramref name="itemUId"/> передано 
            пустое значение.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Создает экземпляр схемы по типу, указанному в переданном элементе менеджера. Если тип схемы элемента 
            менеджера не найден в сборке, генерируется исключение.
            </summary>
            <param name="schemaManagerItem">Элемент менеджера, в котором должна быть проинициализирована схема.</param>
            <param name="assembly">Сборка, которая содержит тип создаваемой схемы.</param>
            <returns>Пронициализированный экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeSafeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Создает экземпляр схемы по типу, указанному в переданном элементе менеджера. Если тип схемы не найден в 
            сборке, возвращается <c>null</c>.
            </summary>
            <param name="schemaManagerItem">Элемент менеджера, в котором должна быть проинициализирована схема.</param>
            <param name="assembly">Сборка, которая содержит тип создаваемой схемы.</param>
            <returns>Пронициализированный экземпляр схемы либо <c>null</c>, если 
            тип схемы <paramref name="schemaManagerItem"/> не найден в сборке <paramref name="assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Загружает в переданную коллекцию исходные коды заданной схемы.
            </summary>
            <param name="compileCollection">Коллекция, в которую загружаются исходные коды схемы.</param>
            <param name="item">Элемент менеджера, содержащий схему, исходные коды которой загружаются.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},System.Guid)">
            <summary>
            Загружает в переданную коллекцию исходные коды заданной схемы.
            </summary>
            <param name="compileCollection">Коллекция, в которую загружаются исходные коды схемы.</param>
            <param name="uid">Идентификатор схемы, исходные коды которой загружаются.</param>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddCoreSchema(System.Guid,System.String)">
            <summary>
            Добавляет в менеджер схем системную схему с заданными идентификатором и именем.
            </summary>
            <param name="uid">Идентификатор добавляемой системной схемы.</param>
            <param name="name">Имя добавляемой системной схемы.</param>
            <returns>Элемент менеджера, содержащий добавленную системную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddCoreSchema(System.Guid,System.String,System.Guid,System.Guid[])">
            <summary>
            Добавляет в менеджер схем системную схему с заданными идентификатором и именем с указанием родительской 
            схемы и списка схем, на которые ссылается добавляемая системная схема.
            </summary>
            <param name="uid">Идентификатор добавляемой системной схемы.</param>
            <param name="name">Имя добавляемой системной схемы.</param>
            <param name="parentSchemaUId">Идентификатор родительской схемы.</param>
            <param name="referenceSchemaUIds">Список идентификаторов схем, на которые ссылается добавляемая схема.
            </param>
            <returns>Элемент менеджера, содержащий добавленную системную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddSchema(System.Guid,System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString,System.Guid)">
            <summary>
            Добавляет схему с заданными параметрами в менеджер схем.
            </summary>
            <param name="uid">Идентификатор схемы.</param>
            <param name="name">Имя схемы.</param>
            <param name="caption">Заголовок схемы.</param>
            <param name="description">Описание схемы.</param>
            <param name="parentUId">Идентификатор родительской схемы.</param>
            <returns>Элемент менеджера, содержащий добавленную схему с заданными параметрами.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveSchema(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Удаляет из базы данных схему с заданным идентификатором.
            </summary>
            <param name="id">Идентификатор удаляемой схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Идентификатор записи в SysSchemaInSolution, в которой схема была удалена.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если менеджер не содержит схемы с идентификатором
            <paramref name="id"/>.</exception>
            <exception cref="T:System.Security.SecurityException">Если у пользователя недостаточно прав для удаления объекта.</exception>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Terrasoft#Core#ISchemaManager#CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Создает новую схему с заданными именем и родительской схемой с указанием признака 
            создания схемы из метаданных.
            </summary>
            <param name="name">Имя схемы.</param>
            <param name="baseSchema">Элемент менеджера, содержащий базовую схему.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="fromMetaData">Признак создания схемы из метаданных.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Terrasoft#Core#ISchemaManager#CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Создает новую схему с заданными именем, родительской схемой и указанием признака добавления схемы в список 
            редактируемых схем.
            </summary>
            <param name="name">Имя схемы.</param>
            <param name="baseSchema">Элемент, содержащий родительскую схему.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <param name="addToDesignItems">Признак добавления схемы к списку редактируемых схем.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(System.String,`0,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Создает новую схему с заданными именем и родительской схемой с указанием признака добавления схемы с список 
            редактируемых схем.
            </summary>
            <param name="name">Имя схемы.</param>
            <param name="baseSchema">Экземпляр родительской схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <param name="addToDesignItems">Признак добавления схемы к списку редактируемых схем.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Создает новую схему с заданным идентификатором с указанием признака добавления схемы с список редактируемых 
            схем. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <param name="addToDesignItems">Признак добавления схемы в список редактируемых схем.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(Terrasoft.Core.UserConnection)">
            <summary>
            Создает новую схему.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Элемент менеджера, содержащий созданную схему.</returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,System.Boolean,Terrasoft.Core.UserConnection)">
            <summary>
            Сохраняет редактируемую схему с заданным идентификатором с указанием признака удаления после сохранения 
            редактируемого элемента с этой схемой. 
            </summary>
            <param name="uid">Уникальный идентификатор схемы, которую нужно сохранить.</param>
            <param name="removeDesignItem">Признак удаления редактируемой схемы из коллекции редактируемых элементов 
            менеджера после сохранения. Если <paramref name="removeDesignItem"/> равен <c>true</c>, редактируемая схема 
            удаляется из коллекции.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns><c>true</c>, если схема сохранена успешно; иначе - <c>false</c>.</returns>
            <exception cref="T:System.Security.SecurityException">Если у пользователя недостаточно прав для модификации объекта.
            </exception>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(Terrasoft.Core.ISchemaManagerItem{`0},Terrasoft.Core.UserConnection)">
            <summary>
            Сохраняет редактируемую схему.
            </summary>
            <param name="designItem">Редактируемая схема, которую нужно сохранить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns><c>true</c>, если схема сохранена успешно; иначе - <c>false</c>.</returns>
            <exception cref="T:System.Security.SecurityException">Если у пользователя недостаточно прав для модификации объекта.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaInCustomPackage(System.Guid,System.Boolean,Terrasoft.Core.UserConnection)">
            <summary>
            Сохраняет редактируемую схему с заданным идентификатором с указанием признака удаления после сохранения
            редактируемого элемента с этой схемой. 
            </summary>
            <param name="uid">Уникальный идентификатор схемы, которую нужно сохранить.</param>
            <param name="removeDesignItem">Признак удаления редактируемой схемы из коллекции редактируемых элементов 
            менеджера после сохранения. Если <paramref name="removeDesignItem"/> равен <c>true</c>, редактируемая схема 
            удаляется из коллекции.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns><c>true</c>, если схема сохранена успешно; иначе - <c>false</c>.</returns>
            <remarks>Метод перегружен.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Сохраняет редактируемую схему с заданным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор схемы, которую нужно сохранить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns><c>true</c>, если схема сохранена успешно; иначе - <c>false</c>.</returns>
            <remarks>
            Метод перегружен.
            Данный метод вызывает перегруженный метод <see cref="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,System.Boolean,Terrasoft.Core.UserConnection)"/>, передав в 
            качестве второго параметра значение <c>false</c>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaInCustomPackage(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Сохраняет редактируемую схему с заданным идентификатором в пользовательском пакете.
            </summary>
            <param name="uid">Уникальный идентификатор схемы, которую нужно сохранить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns><c>true</c>, если схема сохранена успешно; иначе - <c>false</c>.</returns>
            <remarks>
            Метод перегружен.
            Данный метод вызывает перегруженный метод <see cref="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,System.Boolean,Terrasoft.Core.UserConnection)"/>, передав в 
            качестве второго параметра значение <c>false</c>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaSource(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает исходный код схемы с заданным идентификатором.
            </summary>
            <param name="schemaUId">Идентификатор схемы, исходный код которой нужно возвратить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий исходный код схемы с идентификатором <paramref name="schemaUId"/> либо 
            <c>null</c>, если исходный код получить не удалось.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaMetaDataDifferencePackage(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает пакет разницы между схемой с заданным идентификатором и ее родительской схемой.
            </summary>
            <param name="schemaUId">Идентификатор схемы, пакет разницы для которой нужно возвратить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий пакет разницы между базовой схемой и схемой с идентификатором 
            <paramref name="schemaUId"/> либо <c>null</c>, если пакет разницы сформировать не удалось.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные схемы с заданным идентификатором.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы с идентификатором <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDefSchemaUId">
            <summary>
            Возвращает идентификатор схемы, от которой наследуются все базовые схемы менеджера схем.
            </summary>
            <returns>Идентификатор схемы, от которой наследуются все базовые схемы менеджера схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GenerateItemUniqueName(System.String)">
            <summary>
            Генерирует уникальное имя элемента менеджера с использованием заданного префикса.
            </summary>
            <param name="prefix">Префикс.</param>
            <returns>Уникальное имя элемента менеджера с префиксом <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GenerateItemUniqueCaption(System.String)">
            <summary>
            Генерирует уникальный заголовок элемента менеджера с использованием заданного префикса.
            </summary>
            <param name="prefix">Префикс.</param>
            <returns>Уникальный заголовок элемента менеджера с префиксом <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные схемы с заданным идентификатором в формате, удобном для чтения.
            </summary>
            <param name="schemaUId">Идентификатор схемы, метаданные которой нужно получить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы с идентификатором <paramref name="schemaUId"/> в формате, 
            удобном для чтения.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Получает метаданные заданной схемы в формате, удобном для чтения.
            </summary>
            <param name="schema">Схема, метаданные которой нужно получить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="toLowerCamelCase">Признак генерации имен свойств в стиле LowerCamelCase.</param>
            <returns>Поток, содержащий метаданные схемы <paramref name="schema"/> в формате, удобном для чтения.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Получает метаданные заданной схемы в формате, удобном для чтения.
            </summary>
            <param name="schema">Схема, метаданные которой нужно получить.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Поток, содержащий метаданные схемы <paramref name="schema"/> в формате, удобном для чтения.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaSources(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            Сохраняет исходные коды из переданной коллекции.
            </summary>
            <param name="sources">Коллекция исходных кодов, которые нужно сохранить.</param>
            <returns>
            <c>true</c>, если все исходные коды из коллекции <paramref name="sources"/> сохранены успешно; 
            <c>false</c> - если хотя бы один элемент коллекции не был сохранен.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaSources(System.Guid,System.Guid,Terrasoft.Core.UserConnection,System.String@)">
            <summary>
            Получение коллекции объектов, содержащих исходные коды схемы с заданным идентификатором.
            </summary>
            <param name="schemaUId">Идентификатор схемы, исходные коды которой нужно получить.</param>
            <param name="schemaId">Идентификатор записи в таблице SysSchema.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="errorMessage">Сообщение об ошибке при получении исходных кодов схемы.</param>
            <returns>Коллекция объектов с исходными кодами схемы с идентификатором <paramref name="schemaUId"/>. 
            Если при получении исходных кодов произошла ошибка, будет возвращен <c>null</c>, а в 
            параметре <paramref name="errorMessage"/> будет возвращено сообщение об ошибке.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.DropInstances">
            <summary>
            Удаляет экземпляры всех схем менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Осуществляет поиск редактируемого элемента с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор искомой схемы.</param>
            <returns>Редактируемый элемент с идентификатором <paramref name="uid"/> либо 
            <c>null</c>, если такая схема не найдена.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает редактируемый элемент с заданным идентификатором. Если такой элемент не найден, генерируется 
            исключение. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор возвращаемого элемента.</param>
            <returns>Редактируемый элемент с идентификатором <paramref name="uid"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если редактируемый элемент с идентификатором <paramref name="uid"/> 
            не найдена.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает типизированный редактируемый элемент с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор схемы.</param>
            <returns>Типизированный редактируемый элемент с идентификатором 
            <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindDesignInstance(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Осуществляет поиск экземпляра редактируемой схемы с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор экземпляра редактируемой схемы.</param>
            <returns>Экземпляр редактируемой схемы с идентификатором <paramref name="uid"/>. Если экземпляр не найден, 
            возвращается <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignInstance(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает экземпляр редактируемой схемы с заданным идентификатором. Если такая схема не найдена, 
            генерируется исключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор экземпляра редактируемой схемы.</param>
            <returns>Экземпляр редактируемой схемы с идентификатором <paramref name="uid"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если экземпляр редактируемой схемы с идентификатором
            <paramref name="uid"/> не найден у текущего менеджера схем.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Сериализует и сохраняет в данные сессии экземпляр заданной редактируемой схемы.
            </summary>
            <param name="designItem">Элемент менеджера, содержащий редактируемую схему, экземпляр которой сохраняется в 
            данных сессии.</param>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Сериализует и сохраняет в данные сессии экземпляр заданной типизированной редактируемой схемы.
            </summary>
            <param name="designItem">Элемент менеджера, содержащий типизированную редактируемую схему, экземпляр 
            которой сохраняется в данных сессии.</param>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.UserConnection,Terrasoft.Core.MetaSchema,System.Guid)">
            <summary>
            Сериализует и сохраняет в данные сессии экземпляр редактируемой схемы с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="designedItem">Экземпляр редактируемого элемента менеджера.</param>
            <param name="designedItemId">Идентификатор сохраняемой редактируемой схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemFolderIdInSessionData(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Сохраняет в данные сессии переданный идентификатор каталога, в котором хранится редактируемая схема 
            элемента с заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="designedItemId">Идентификатор редактируемого элемента.
            </param>
            <param name="designedItemFolderId">Идентификатор каталога, в котором хранится редактируемая схема элемента 
            с идентификатором <paramref name="designedItemId"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignedItemFolderIdFromSessionData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Возвращает из данных сессии идентификатор каталога, в котором хранится редактируемая схема элемента с 
            заданным идентификатором.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="designedItemId">Идентификатор элемента, который содержит хранимую редактируемую схему.
            </param>
            <returns>Идентификатор каталога, в котором хранится редактируемая схема <paramref name="designedItemId"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveDesignedItemFromSessionData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Удаляет редактируемый элемент с заданным идентификатором из данных сессии. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="uid">Идентификатор редактируемого элемента.</param>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveDesignedItemFromSessionData(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Удаляет заданный редактируемый элемент из данных сессии. 
            </summary>
            <param name="designItem">Редактируемый элемент менеджера, который должен быть удален.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ItemCaption">
            <summary>
            Заголовок элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ResourceManagerName">
            <summary>
            Имя менеджера ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ItemName">
            <summary>
            Имя элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.SchemaManagerProvider">
            <summary>
            Провайдер менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.AppConnection">
            <summary>
            Системное соединение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.Namespace">
            <summary>
            Пространство имен.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ProcessSchemaManager">
            <summary>
            Менеджер схем процессов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.DefSchema">
            <summary>
            Базовая схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.SupportsProfiles">
            <summary>
            Определяет, поддерживает ли менеджер схем работу с профилями.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemAdding">
            <summary>
            Событие, возникающее перед добавлением новой схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemAdding">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManager`1.ItemAdding"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemAdded">
            <summary>
            Событие, возникающее после добавления новой схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemAdded">
            <summary>
            Определяет, инициировано ли событие <see cref="E:Terrasoft.Core.SchemaManager`1.ItemAdded"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemRemoving">
            <summary>
            Событие, возникающее перед удалением схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemRemoving">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManager`1.ItemRemoving"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemRemoved">
            <summary>
            Событие, возникающее после удаления схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemRemoved">
            <summary>
            Определяет, инициировано ли событие <see cref="E:Terrasoft.Core.SchemaManager`1.ItemRemoved"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemSaving">
            <summary>
            Событие, возникающее перед сохранением схемы. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemSaving">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManager`1.ItemSaving"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemSaved">
            <summary>
            Событие, возникающее после сохранения схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemSaved">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManager`1.ItemSaved"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.FindInstanceByName(System.String)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя искомого экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>. Если экземпляр элемента менеджера с 
            именем <paramref name="name"/> не найден, возвращает <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.GetInstanceByName(System.String)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным именем.
            </summary>
            <param name="name">Имя экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.FindInstanceByUId(System.Guid)">
            <summary>
            Осуществляет поиск экземпляра элемента менеджера по заданному уникальному идентификатору.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>. Если элемент 
            менеджера с уникальным идентификатором <paramref name="uid"/> не найден, возвращает <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.GetInstanceByUId(System.Guid)">
            <summary>
            Возвращает экземпляр элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор экземпляра элемента менеджера.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Создает экземпляр схемы типа <see cref="T:Terrasoft.Core.ClientUnitSchema"/>.
            </summary>
            <param name="schemaManagerItem">Элемент менеджера.</param>
            <param name="assembly">Сборка, которая содержит тип создаваемой схемы.</param>
            <returns>Пронициализированный экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Актуализирует дескриптор элемента менеджера схем.
            </summary>
            <param name="item">Элемент менеджера, в котором необходимо актуализировать дескриптор.</param>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManager.HashFunc">
            <summary>
            Функция хеширования. По умолчанию - MD5.
            </summary>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если устанавливаемое значение равно <c>null</c>.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitUtilities">
            <summary>
            Operations with ClientunitSchema's files.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.CombineSchemaDescriptors(Terrasoft.Core.UserConnection)">
            <summary>
            Генерирует комбинированные дескрипторы клиентских схем.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Комбинированные дескрипторы клиентских схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.CombineSchemaSources(Terrasoft.Core.UserConnection,Terrasoft.Core.ClientUnitSchema)">
            <summary>
            Генерирует комбинированные исходные коды для клиентской схемы (с зависимостями).
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schema">Клиентская схема.</param>
            <returns>Словарь c идентификатором культуры и комбинированными исходными кодами
            для клиентской схемы(с зависимостями).</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.SetReadOnlyAttribute(System.String,System.String)">
            <summary>
            Устанавливает признак <c>ReadOnly</c> для файла указанной клиентской схемы.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <param name="packageName">Имя пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.SetReadOnlyAttribute(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo})">
            <summary>
            Устанавливает признак <c>ReadOnly</c> для файлов клиентских схем, указанных в списке.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.ResetReadOnlyAttribute(System.String,System.String)">
            <summary>
            Снимает признак <c>ReadOnly</c> для файла указанной клиентской схемы.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <param name="packageName">Имя пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.ResetReadOnlyAttribute(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo})">
            <summary>
            Снимает признак <c>ReadOnly</c> для файлов клиентских схем, указанных в списке.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.SetAllFilesReadOnlyAttribute">
            <summary>
            Устанавливает признак <c>ReadOnly</c> для всех файлов клиентских схем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.RegenerateIncludeDependencySources(System.Boolean)">
            <summary>
            Regenerates and saves included dependency sources for ClientUnitSchemas.
            </summary>
            <param name="needRefresh">Flag is manager need refresh. Optional, default value - <c>false</c>.</param>
            <remarks>
            Regenerating for all ClientUnitSchemas with property "Include dependency source" is set. Also regenerating
            descriptors for all ClientUnitSchemas and EntitySchemas.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitUtilities.RegenerateCombinedSchemaDescriptors">
            <summary>
            Regenerates and saves descriptors for all ClientUnitSchemas and EntitySchemas.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage">
            <summary>
            Данные схемы в пакете (представление).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.SysSchemaId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.SysSchema">
            <summary>
            Схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.InstallType">
            <summary>
            Тип установки данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.IsChanged">
            <summary>
            Изменен.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.IsLocked">
            <summary>
            Заблокирован.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.Name">
            <summary>
            Название.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.NeedInstall">
            <summary>
            Требует установки в БД.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.LastError">
            <summary>
            Текст последней ошибки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessUserTaskSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessUserTask">
            <summary>
            Пользовательское действие процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessUserTask.SysUserTaskSchemaUId">
            <summary>
            Идентификатор пользовательского действия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessUserTask.Position">
            <summary>
            Позиция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysEntitySchemaInWorkspace">
            <summary>
            Объект рабочего пространства (представление).
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace">
            <summary>
            Элемент рабочего пространства (представление).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Name">
            <summary>
            Название.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Caption">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ManagerName">
            <summary>
            Имя менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ParentId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Parent">
            <summary>
            Родитель.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ExtendParent">
            <summary>
            Расширяет родителя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.IsChanged">
            <summary>
            Изменен.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.IsLocked">
            <summary>
            Заблокирован.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackageId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackageName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackage">
            <summary>
            Пакет.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.PackageUId">
            <summary>
            Идентификатор пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspaceId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspaceName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspace">
            <summary>
            Рабочее пространство.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Description">
            <summary>
            Описание.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaInPackage">
            <summary>
            Элемент пакета (представление).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Name">
            <summary>
            Название.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Caption">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ManagerName">
            <summary>
            Имя менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ParentId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ParentCaption">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Parent">
            <summary>
            Родительский элемент.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspaceId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspaceName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspace">
            <summary>
            Рабочее пространство.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackage">
            <summary>
            Пакет.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageUId">
            <summary>
            Идентификатор пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageLevel">
            <summary>
            Уровень пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ExtendParent">
            <summary>
            Расширяет родителя.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessListSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList">
            <summary>
            Список объектов, доступных пользователям портала (представление).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaUId">
            <summary>
            Идентификатор объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.WorkspaceId">
            <summary>
            Идентификатор рабочего пространства.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaCaption">
            <summary>
            Заголовок объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaName">
            <summary>
            Имя объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ImageAPI.ImageAPI.SaveThumbnail(System.Guid,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat,System.Int64)">
            <summary>
            Сохраняет уменьшенную копию изображения. </summary>
            <param name="id">Id записи в таблице SysImage.</param>
            <param name="width">Ширина уменьшенного изображения.</param>
            <param name="height">Высоты уменьшенного изображения.</param>
            <param name="imageFormat">Формат изображения (JPEG, PNG, BMP и др.).</param>
            <param name="quality">Качество сохраняемого изображения в процентном эквиваленте.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.CommitLockerManager">
            <summary>
            Предоставляет методы работы c файлом <see cref="P:Terrasoft.Core.Packages.CommitLockerManager.FileName"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ICommitLockerManager.Create(System.String)">
            <summary>
            Создает файл <see cref="P:Terrasoft.Core.Packages.ICommitLockerManager.FileName"/> в указанном каталоге. Если файл существует, 
            он пересоздается.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ICommitLockerManager.Exists(System.String)">
            <summary>
            Проверяет, существует ли файл <see cref="P:Terrasoft.Core.Packages.ICommitLockerManager.FileName"/> в указанном каталоге.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
            <returns><c>true</c>, если файл существует в каталоге <paramref name="directoryPath"/> ; в противном 
            случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ICommitLockerManager.GetFilePath(System.String)">
            <summary>
            Формирует локальный путь к файлу <see cref="P:Terrasoft.Core.Packages.ICommitLockerManager.FileName"/>.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
            <returns>Путь к файлу.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ICommitLockerManager.GetFilePathUri(System.Uri)">
            <summary>
            Формирует <see cref="T:System.Uri"/> путь к файлу <see cref="P:Terrasoft.Core.Packages.ICommitLockerManager.FileName"/>.
            </summary>
            <param name="uriPath">Путь к каталогу.</param>
            <returns>Путь к файлу.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.ICommitLockerManager.FileName">
            <summary>
            Имя файла.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Packages.CommitLockerManager.CommitLockerFileName">
            <summary>
            Имя файла.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.CommitLockerManager.Create(System.String)">
            <summary>
            Создает файл <see cref="P:Terrasoft.Core.Packages.CommitLockerManager.FileName"/> в указанном каталоге. Если файл существует, 
            он пересоздается.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.CommitLockerManager.Exists(System.String)">
            <summary>
            Проверяет, существует ли файл <see cref="P:Terrasoft.Core.Packages.CommitLockerManager.FileName"/> в указанном каталоге.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
            <returns><c>true</c>, если файл существует в каталоге <paramref name="directoryPath"/> ; в противном 
            случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.CommitLockerManager.GetFilePath(System.String)">
            <summary>
            Формирует локальный путь к файлу <see cref="P:Terrasoft.Core.Packages.CommitLockerManager.FileName"/>.
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
            <returns>Путь к файлу.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.CommitLockerManager.GetFilePathUri(System.Uri)">
            <summary>
            Формирует <see cref="T:System.Uri"/> путь к файлу <see cref="P:Terrasoft.Core.Packages.CommitLockerManager.FileName"/>.
            </summary>
            <param name="uriPath">Путь к каталогу.</param>
            <returns>Путь к файлу.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.CommitLockerManager.FileName">
            <summary>
            Имя файла.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.DescriptorComparer">
            <summary>
            Класс, который сравнивает дескрипторы элементов системы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.IDescriptorComparer">
            <summary>
            Интерфейс класса, который сравнивает дескрипторы элементов системы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemNew(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, является ли новым дескриптор из хранилища источника.
            </summary>
            <param name="sourceItem">Дескриптор из хранилища источника.</param>
            <returns><c>true</c>, если дескриптор <paramref name = "sourceItem"/> новый; иначе — значение 
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, изменен ли дескриптор из целевого хранилища.
            </summary>
            <param name="sourceItem">Дескриптор из хранилища источника.</param>
            <param name="targetItem">Дескриптор из целевого хранилища.</param>
            <returns><c>true</c>, если дескриптор из хранилища источника <paramref name = "sourceItem"/> изменен; 
            иначе — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemDeleted(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, удален ли дескриптор из целевого хранилища.
            </summary>
            <param name="targetItem">Дескриптор из целевого хранилища.</param>
            <returns><c>true</c>, если дескриптор <paramref name = "targetItem"/> удален; иначе — значение 
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparer.IsItemNew(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, является ли новым дескриптор из хранилища источника.
            </summary>
            <param name="sourceItem">Дескриптор из хранилища источника.</param>
            <returns><c>true</c>, если дескриптор <paramref name = "sourceItem"/> новый; иначе — значение 
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparer.IsItemChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, изменен ли дескриптор из целевого хранилища.
            </summary>
            <param name="sourceItem">Дескриптор из хранилища источника.</param>
            <param name="targetItem">Дескриптор из целевого хранилища.</param>
            <returns><c>true</c>, если дескриптор из хранилища источника <paramref name = "sourceItem"/> изменен; 
            иначе — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparer.IsItemDeleted(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Проверяет, удален ли дескриптор из целевого хранилища.
            </summary>
            <param name="targetItem">Дескриптор из целевого хранилища.</param>
            <returns><c>true</c>, если дескриптор <paramref name = "targetItem"/> удален; иначе — значение 
            <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ILockerManager">
            <summary>
            Интерфейс менеджера блокирования элементов системы в системе контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockPackage(System.String,System.String@)">
            <summary>
            Блокирует указанный пакет в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="message">Cодержит сообщение об ошибке, если пакет <paramref name = "packageName"/> не 
            заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> заблокирован в системе контроля версий; 
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.ExistsPackage(System.String)">
            <summary>
            Определяет, существует ли пакет <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> существует в хранилище системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockPackage(System.String)">
            <summary>
            Разблокирует указанный пакет в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> разблокирован на уровне системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchema(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанную схему в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <param name="message">Cодержит сообщение об ошибке, если схема <paramref name = "schemaName"/> из пакета 
            <paramref name = "packageName"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            заблокирована в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные схемы в системе контроля версий.
            </summary>
            <param name="packageSchemaNames">Список схем для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одна из схем
            <paramref name = "packageSchemaNames"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все схемы из списка схем <paramref name = "packageSchemaNames"/> заблокированы
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.ExistsSchema(System.String,System.String)">
            <summary>
            Определяет, существует ли схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/> в
            хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            существует в хранилище системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSchema(System.String,System.String)">
            <summary>
            Разблокирует указанную схему в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            разблокирована на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSqlScript(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанный SQL-сценарий в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <param name="message">Cодержит сообщение об ошибке, если SQL-сценарий <paramref name = "sqlScriptName"/> из
            пакета <paramref name = "packageName"/> не заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> заблокирован в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSqlScripts(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные SQL-сценарии в системе контроля версий.
            </summary>
            <param name="packageSqlScriptNames">Список SQL-сценариев для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы один из SQL-сценариев
            <paramref name = "packageSqlScriptNames"/> не заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все SQL-сценарии из списка SQL-сценариев
            <paramref name = "packageSqlScriptNames"/> заблокированы в системе контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.SqlScriptExists(System.String,System.String)">
            <summary>
            Определяет, существует ли SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSqlScript(System.String,System.String)">
            <summary>
            Разблокирует указанный SQL-сценарий в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> разблокирован на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemaData(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанныe данные схемы в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <param name="message">Cодержит сообщение об ошибке, если данные схемы <paramref name = "schemaDataName"/> из
            пакета <paramref name = "packageName"/> не заблокированы; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> заблокированы в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemaDatas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные данные схем в системе контроля версий.
            </summary>
            <param name="packageSchemaDataNames">Список данных схем для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одни из данных схем
            <paramref name = "packageSchemaDataNames"/> не заблокированы; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все данные схем из списка данных схем <paramref name = "packageSchemaDataNames"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.SchemaDataExists(System.String,System.String)">
            <summary>
            Определяет, существуют ли данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSchemaData(System.String,System.String)">
            <summary>
            Разблокирует указанные данные схемы в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> разблокированы на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockAssembly(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанную сборку в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <param name="message">Cодержит сообщение об ошибке, если сборка <paramref name = "assemblyName"/> из
            пакета <paramref name = "packageName"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> заблокирована в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockAssemblies(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные сборки в системе контроля версий.
            </summary>
            <param name="packageAssemblyNames">Список сборок для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одна из сборок
            <paramref name = "packageAssemblyNames"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все сборки из списка сборок <paramref name = "packageAssemblyNames"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.AssemblyExists(System.String,System.String)">
            <summary>
            Определяет, существует ли сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <returns><c>true</c>, если сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockAssembly(System.String,System.String)">
            <summary>
            Разблокирует указанную сборку в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> разблокированы на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Разблокирует указанные элементы пакета в системе контроля версий.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
            <param name="elementsType">Тип элементов пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.GetIsPackageElementHasForeignLock(System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Определяет, заблокирован ли элемент другим пользователем.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя элемента.</param>
            <param name="elementType">Тип элемента <paramref name = "elementName"/>.</param>
            <returns><c>true</c>, если элемент заблокирован другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.GetIsPackageHasForeignLock(System.String)">
            <summary>
            Определяет, заблокирован ли пакет другим пользователем.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет заблокирован другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockPackageElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные элементы пакета в системе контроля версий.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы один элемент пакета не был заблокирован; в
            противном случае — пустая строка.</param>
            <returns><c>true</c>, если все элементы пакета из списка <paramref name = "packageElementsInfo"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="E:Terrasoft.Core.Packages.ILockerManager.LockError">
            <summary>
            Событие при возникновении ошибки блокирования элемента в системе контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.BasePackageUriGenerator">
            <summary>
            Базовый класс генератора путей к хранилищу системы контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageUri(System.Uri,System.String,System.String)">
            <summary>
            Возвращает полный путь к пакету в хранилище системы контроля версий.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <param name="version">Версия пакета.</param>
            <returns>Полный путь к пакету в хранилище системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageRootUri(System.Uri,System.String)">
            <summary>
            Возвращает полный путь к корню пакета в хранилище системы контроля версий.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к корню пакета в хранилище системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageBranchesUri(System.Uri,System.String)">
            <summary>
            Возвращает полный путь к веткам пакета в хранилище системы контроля версий.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к веткам пакета в хранилище системы контроля версий.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISourceControlAuthManager">
            <summary>
            Интерфейс менеджера для работы с аутентификацией в хранилище.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            Возвращает авторизационные данные хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> для 
            хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом не найдено, тогда 
            генерируется исключение.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetIdByUri(System.Uri)">
            <summary>
            Возвращает идентификатор хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Идентификатор хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом 
            не найдено, тогда генерируется исключение.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            Возвращает адрес хранилища.
            </summary>
            <param name="descriptorId">Идентификатор хранилища.</param>
            <param name="packageName">Название пакета. Необязательный параметр, значение по умолчанию - <c>null</c>.
            </param>
            <returns>Адрес хранилища с идентификатором <paramref name = "descriptorId"/>. Если хранилище с таким 
            идентификатором не найдено, тогда генерируется исключение.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            Обновляет логин и пароль доступа к хранилищу.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            Сохраняет дескриптор хранилища.
            </summary>
            <param name="sourceControlDescriptor">Дескриптор хранилища.</param>
            <returns>Идентификатор хранилища, дескриптор которого сохранен.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.DeleteRepository(System.Guid)">
            <summary>
            Удаляет дескриптор хранилища.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            Определяет, существуют ли пакеты, которые ссылаются на заданное хранилище.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns><c>true</c>, если на хранилище ссылается хотя бы один пакет; в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            Возвращает дескриптор хранилища с заданным идентификатором.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> для 
            хранилища с идентификатором <paramref name = "repositoryId"/> либо <c>null</c>, если хранилище с таким 
            идентификатором не найдено.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlAuthDescriptors">
            <summary>
            Перечислитель авторизационных данных хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.Uris">
            <summary>
            Перечислитель путей хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlDescriptors">
            <summary>
            Перечислитель дескрипторов хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.UseSourceControlAuthentication">
            <summary>
            Признак, использовать ли кэш аутентификации системы контроля версий.
            </summary>
            <value>
            <c>true</c>, если используется кэш аутентификации системы контроля версий, иначе - <c>false</c>.
            </value>
            <remarks> Значение по умолчанию: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlAuthPath">
            <summary>
            Путь к папке, где хранятся аутентификационные данные хранилища системы контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISourceControlClient">
            <summary>
            Интерфейс клиента для контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ValidateAccessibility(System.Uri)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по указаному пути.
            </summary>
            <param name="sourceControlUri">Путь к папке или файлу системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ValidateAccessibility(System.String)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по пути к хранилищу для локальной 
            директории.
            </summary>
            <param name="workingCopyPath">Путь к локальной директории рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="sourceUri">Путь к корневой папке хранилища системы контроля версий.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetUriFromWorkingCopy(System.String)">
            <summary>
            По заданному пути к папке рабочей копии возвращает путь к корневой папке системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Путь к корневой папке системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsUnderSourceControl(System.String)">
            <summary>
            Проверяет, находится ли указанная папка рабочей копии под системой контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если папка, путь к которой указан в параметре <paramref name = "workingCopyPath"/>,
            находится под системой контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CheckOut(System.Uri,System.String,System.Int32)">
            <summary>
            Выполняет полную загрузку папок и файлов из системы контроля версий в локальную папку рабочей копии.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Номер загруженной ревизии.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Update(System.String,System.Int32)">
            <summary>
            Выполняет обновление папок и файлов из системы контроля версий в локальную папку рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Номер загруженной ревизии.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetRootDirectories(System.Uri)">
            <summary>
            Возвращает перечисление имен папок первого уровня относительно корневой папки системы контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Перечислитель имен папок.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Commit(System.String,System.String)">
            <summary>
            Фиксирует изменения из существующей локальной папки рабочей копии в систему контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Import(System.String,System.Uri,System.String)">
            <summary>
            Фиксирует в хранилище системы контроля версий дерево файлов и папок из заданной неверсионной папки.
            </summary>
            <param name="localPath">Путь к неверсионной папке.</param>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Снимает блокировки с удаленных файлов в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="revisionNumber">Номер ревизии, в которой были удалены файлы.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Lock(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Блокирует доступ к заданным файлам на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <param name="isForceLock">Признак, является ли блокировка принудительной. Необязательный параметр.
            Значение по умолчанию - <c>false</c>.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> заблокированы в системе
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Lock(System.String,System.Boolean)">
            <summary>
            Блокиует доступ к заданному файлу на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь файла.</param>
            <param name="isForceLock">Признак, является ли блокировка принудительной. Необязательный параметр.
            Значение по умолчанию - <c>false</c>.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован в системе контроля версий; 
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Unlock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировки с заданных файлов на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> разблокированы в системе 
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Unlock(System.String)">
            <summary>
            Снимает блокировку с заданного файла на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь файла.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> разблокирован в системе контроля версий;
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockContent(System.String)">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся в указанной 
            рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если файлы из рабочей копии <paramref name = "workingCopyPath"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся по указанным 
            путям.
            </summary>
            <param name="workingCopyPaths">Список локальных путей.</param>
            <returns><c>true</c>, если файлы по указанным путям <paramref name = "workingCopyPaths"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.SynchronizeUsersLocks(System.String)">
            <summary>
            Синхронизирует блокировки файлов на уровне рабочей копии в соответствии с блокировками файлов на уровне 
            системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Exists(System.Uri)">
            <summary>
            Определяет, существует ли заданный файл в хранилище системы контроля версий.
            </summary>
            <param name="sourceControlFileUri">Путь к файлу в хранилище системе контроля версий.</param>
            <returns><c>true</c>, если в хранилище существует файл <paramref name = "sourceControlFileUri"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Add(System.String)">
            <summary>
            Добавляет неверсионный файл в структуру рабочей копии системы контроля версий.
            </summary>
            <param name="workingCopyFilePath">Путь к файлу в рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLocked(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован на уровне системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLockedByCurrentUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован текущим пользователем 
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLockedByOtherUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий не текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован другим пользователем 
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые можно заблокировать на уровне системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="itemLocalPath">Локальный путь, по которому определяются файлы для блокирования.</param>
            <param name="itemName">Имя элемента.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "itemLocalPath"/> и которые
            могут быть заблокированы на уровне системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые заблокированы на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "workingCopyPath"/> и 
            которые заблокированы на уровне системы контроля версий текущим пользователем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsFilesHaveForeignLock(System.String)">
            <summary>
            Определяет, имеются ли по указанному пути элементы, заблокированные другим пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если присутствует элемент, заблокированый другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Возвращает номер последней ревизии для указанного пути в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Номер последней ревизии для пути <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Revert(System.String)">
            <summary>
            Отменяет изменения из указанной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если были отменеы изменения; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Возвращает перечисление адресов файлов, заблокированных на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Перечислитель путей файлов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ApplySourceControlChanges(System.String)">
            <summary>
            Актуализирует состояние файлов в системе контроля версий в соответствии с состоянием файлов в рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.SetPropertyMimeType(System.String)">
            <summary>
            Устанавливает для файлов, находящихся в локальном хранилище по пути <paramref name = "workingCopyPath"/>, 
            свойство MimeType со значением, указывающим на то, что файл не должен участвовать в процессе слияния 
            изменений системой контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            По указанному пути на сервере контроля версий создает директорию, если она не существует.
            </summary>
            <param name="directoryUri">Путь к директории.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            По указанным путям на сервере контроля версий создает директории, если они не существуют.
            </summary>
            <param name="directoryUries">Пути к директориям.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISourceControlManager">
            <summary>
            Интерфейс класса для работы с клиентом системы контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsUpdateNeed(System.String,System.Int32)">
            <summary>
            Сравнивает номер ревизии рабочей копии с номером рабочей ревизии системы контроля версий и определяет, 
            необходимо ли обновление рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <returns><c>true</c>, если номер ревизии рабочей копии меньше номера рабочей ревизии системы контроля 
            версий (необходимо обновление рабочей копии); иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Update(System.Uri,System.String,System.Int32)">
            <summary>
            Загружает папки и файлы из системы контроля версий в локальную папку рабочей копии.
            </summary> 
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="targetWorkingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены.
            Параметр <paramref name="revisionNumber"/> содержит значение по умолчанию 0.
            Параметр <paramref name="revisionNumber"/> может быть только положительным.</param>
            <result>Номер загруженной ревизии.</result>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetRootDirectories(System.Uri)">
            <summary>
            Возвращает перечисление имен папок первого уровня относительно корневой папки системы контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Перечислитель имен папок.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ValidateAccessibility(System.Uri)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по указаному пути.
            </summary>
            <param name="sourceUri">Путь к папке или файлу системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ValidateAccessibility(System.String)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по пути к хранилищу заданному для 
            локальной директории.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="sourceUri">Путь к корневой папке хранилища системы контроля версий.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Commit(System.String,System.Int32,System.String)">
            <summary>
            Фиксирует изменения из существующей локальной папки рабочей копии в систему контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Import(System.String,System.Uri,System.String)">
            <summary>
            Фиксирует в хранилище системы контроля версий дерево файлов и папок из заданной неверсионной папки.
            </summary>
            <param name="localPath">Путь к неверсионной папке.</param>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Снимает блокировки с удаленных файлов в системе контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="revisionNumber">Номер ревизии, в которой были удалены файлы.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsUnderSourceControl(System.String)">
            <summary>
            Проверяет, поддерживается ли контроль версионности для заданной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если для папки <paramref name = "workingCopyPath"/> поддерживается контроль
            версионности; иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockContent(System.String)">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся в указанной 
            рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если файлы из рабочей копии <paramref name = "workingCopyPath"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся по указанным 
            путям.
            </summary>
            <param name="workingCopyPaths">Список локальных путей.</param>
            <returns><c>true</c>, если файлы по указанным путям <paramref name = "workingCopyPaths"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Unlock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировки с заданных файлов на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> разблокированы в системе 
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Revert(System.String)">
            <summary>
            Отменяет изменения из указанной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если были отменеы изменения; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Lock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Устанавливает блокировку на уровне системы контроля версий всех файлов, которые находятся по указанным 
            путям в рабочей копии.
            </summary>
            <param name="localFilePaths">Пути к файлам в рабочей копии.</param>
            <returns><c>true</c>, если файлы <paramref name = "localFilePaths"/> из рабочей копии заблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые можно заблокировать на уровне системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="itemLocalPath">Локальный путь. Указывает директорию из которой берутся файлы для блокирования.
            </param>
            <param name="itemName">Имя элемента.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "itemLocalPath"/> и которые
            могут быть заблокированы на уровне системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые заблокированы на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "workingCopyPath"/> и 
            которые заблокированы на уровне системы контроля версий текущим пользователем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Возвращает перечисление адресов файлов, заблокированных на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Перечислитель путей файлов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsPackageElementHasForeignLock(System.String)">
            <summary>
            Определяет, имеются ли по указанному пути элементы, заблокированные другим пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если присутствует элемент, заблокированый другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.SynchronizeUsersLocks(System.String)">
            <summary>
            Синхронизирует блокировки файлов на уровне рабочей копии в соответствии с блокировками файлов на уровне 
            системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Exists(System.Uri)">
            <summary>
            Определяет, существует ли заданный файл в хранилище системы контроля версий.
            </summary>
            <param name="sourceControlFileUri">Путь к файлу в хранилище системе контроля версий.</param>
            <returns><c>true</c>, если в хранилище существует файл <paramref name = "sourceControlFileUri"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsLockedByOtherUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий не текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован другим пользователем
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ApplySourceControlChanges(System.String)">
            <summary>
            Актуализирует состояние файлов в системе контроля версий в соответствии с состоянием файлов в рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Возвращает номер последней ревизии для указанного пути в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Номер последней ревизии для пути <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            По указанному пути на сервере контроля версий создает директорию, если она не существует.
            </summary>
            <param name="directoryUri">Путь к директории.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            По указанным путям на сервере контроля версий создает директории, если они не существуют.
            </summary>
            <param name="directoryUries">Пути к директориям.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.LockerManager">
            <summary>
            Менеджер блокирования элементов системы в системе контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.#ctor(Terrasoft.Core.Packages.ISourceControlManager,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.LockerManager"/>.
            </summary>
            <param name="sourceControlManager">Менеджер системы контроля версий.</param>
            <param name="packageCopyPath">Путь к папкам рабочих копий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockPackage(System.String,System.String@)">
            <summary>
            Блокирует указанный пакет в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="message">Cодержит сообщение об ошибке, если пакет <paramref name = "packageName"/> не 
            заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> заблокирован в системе контроля версий; 
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.ExistsPackage(System.String)">
            <summary>
            Определяет, существует ли пакет <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> существует в хранилище системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockPackage(System.String)">
            <summary>
            Разблокирует указанный пакет в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет <paramref name = "packageName"/> разблокирован на уровне системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchema(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанную схему в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <param name="message">Cодержит сообщение об ошибке, если схема <paramref name = "schemaName"/> из пакета 
            <paramref name = "packageName"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            заблокирована в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные схемы в системе контроля версий.
            </summary>
            <param name="packageSchemaNames">Список схем для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одна из схем
            <paramref name = "packageSchemaNames"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все схемы из списка схем <paramref name = "packageSchemaNames"/> заблокированы
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.ExistsSchema(System.String,System.String)">
            <summary>
            Определяет, существует ли схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/> в
            хранилище системы контроля версий. Метод является заглушкой для старой логики.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            существует в хранилище системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSchema(System.String,System.String)">
            <summary>
            Разблокирует указанную схему в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <returns><c>true</c>, если схема <paramref name = "schemaName"/> из пакета <paramref name = "packageName"/>
            разблокирована на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSqlScript(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанный SQL-сценарий в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <param name="message">Cодержит сообщение об ошибке, если SQL-сценарий <paramref name = "sqlScriptName"/> из
            пакета <paramref name = "packageName"/> не заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> заблокирован в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSqlScripts(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные SQL-сценарии в системе контроля версий.
            </summary>
            <param name="packageSqlScriptNames">Список SQL-сценариев для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы один из SQL-сценариев
            <paramref name = "packageSqlScriptNames"/> не заблокирован; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все SQL-сценарии из списка SQL-сценариев
            <paramref name = "packageSqlScriptNames"/> заблокированы в системе контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.SqlScriptExists(System.String,System.String)">
            <summary>
            Определяет, существует ли SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSqlScript(System.String,System.String)">
            <summary>
            Разблокирует указанный SQL-сценарий в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/> разблокирован на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemaData(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанныe данные схемы в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <param name="message">Cодержит сообщение об ошибке, если данные схемы <paramref name = "schemaDataName"/> из
            пакета <paramref name = "packageName"/> не заблокированы; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> заблокированы в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemaDatas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные данные схем в системе контроля версий.
            </summary>
            <param name="packageSchemaDataNames">Список данных схем для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одни из данных схем
            <paramref name = "packageSchemaDataNames"/> не заблокированы; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все данные схем из списка данных схем <paramref name = "packageSchemaDataNames"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.SchemaDataExists(System.String,System.String)">
            <summary>
            Определяет, существуют ли данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSchemaData(System.String,System.String)">
            <summary>
            Разблокирует указанные данные схемы в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/> разблокирована на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockAssembly(System.String,System.String,System.String@)">
            <summary>
            Блокирует указанную сборку в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <param name="message">Cодержит сообщение об ошибке, если сборка <paramref name = "assemblyName"/> из
            пакета <paramref name = "packageName"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> заблокирована в системе контроля версий; в противном случае — значение
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockAssemblies(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные сборки в системе контроля версий.
            </summary>
            <param name="packageAssemblyNames">Список сборок для блокировки.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы одна из сборок
            <paramref name = "packageAssemblyNames"/> не заблокирована; в противном случае — пустая строка.</param>
            <returns><c>true</c>, если все сборки из списка сборок <paramref name = "packageAssemblyNames"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.AssemblyExists(System.String,System.String)">
            <summary>
            Определяет, существует ли сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> в хранилище системы контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <returns><c>true</c>, если сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> существует в хранилище системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockAssembly(System.String,System.String)">
            <summary>
            Разблокирует указанную сборку в системе контроля версий.
            </summary>
            <param name="packageName">Имя сборки.</param>
            <param name="assemblyName">Имя сборки.</param>
            <returns><c>true</c>, если сборка <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/> разблокирована на уровне системы контроля версий; в противном случае —
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Разблокирует указанные элементы пакета в системе контроля версий.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
            <param name="elementsType">Тип элементов пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.GetIsPackageElementHasForeignLock(System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Определяет, заблокирован ли элемент другим пользователем.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя элемента.</param>
            <param name="elementType">Тип элемента <paramref name = "elementName"/>.</param>
            <returns><c>true</c>, если элемент заблокирован другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.GetIsPackageHasForeignLock(System.String)">
            <summary>
            Определяет, заблокирован ли пакет другим пользователем.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <returns><c>true</c>, если пакет заблокирован другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockPackageElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            Блокирует указанные элементы пакета в системе контроля версий.
            </summary>
            <param name="packageElementsInfo">Список характеристик элементов пакета.</param>
            <param name="message">Cодержит сообщение об ошибке, если хотя бы один элемент пакета не был заблокирован; в
            противном случае — пустая строка.</param>
            <returns><c>true</c>, если все элементы пакета из списка <paramref name = "packageElementsInfo"/>
            заблокированы в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="E:Terrasoft.Core.Packages.LockerManager.LockError">
            <summary>
            Событие при возникновении ошибки блокирования элемента в системе контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.VirtualSourceControlAuthManager">
            <summary>
            Менеджер авторизации для работы с виртуальным хранилищем пакетов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            Возвращает авторизационные данные хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Всегда <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.GetIdByUri(System.Uri)">
            <summary>
            Возвращает идентификатор хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Всегда пустой идентификатор.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            Возвращает адрес хранилища.
            </summary>
            <param name="descriptorId">Идентификатор хранилища.</param>
            <param name="packageName">Название пакета. Необязательный параметр, значение по умолчанию - <c>null</c>.
            </param>
            <returns>Всегда <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            Обновляет логин и пароль доступа к хранилищу.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            Сохраняет дескриптор хранилища.
            </summary>
            <param name="sourceControlDescriptor">Дескриптор хранилища.</param>
            <returns>Всегда пустой идентификатор.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.DeleteRepository(System.Guid)">
            <summary>
            Удаляет дескриптор хранилища.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            Определяет, существуют ли пакеты, которые ссылаются на заданное хранилище.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Всегда <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            Возвращает дескриптор хранилища с заданным идентификатором.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Всегда <c>null</c>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.SourceControlAuthDescriptors">
            <summary>
            Перечислитель авторизационных данных хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.Uris">
            <summary>
            Перечислитель путей хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.SourceControlDescriptors">
            <summary>
            Перечислитель дескрипторов хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.UseSourceControlAuthentication">
            <summary>
            Признак, использовать ли кэш аутентификации системы контроля версий.
            </summary>
            <value>
            <c>true</c>, если используется кэш аутентификации системы контроля версий, иначе - <c>false</c>.
            </value>
            <remarks> Значение по умолчанию: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.VirtualSourceControlAuthManager.SourceControlAuthPath">
            <summary>
            Путь к папке, где хранятся аутентификационные данные хранилища системы контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.VirtualSourceControlManager">
            <summary>
            Менеджер для работы с виртуальным хранилищем пакетов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetIsUpdateNeed(System.String,System.Int32)">
            <summary>
            Сравнивает номер ревизии рабочей копии с номером рабочей ревизии системы контроля версий и определяет, 
            необходимо ли обновление рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <returns>Всегда <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Update(System.Uri,System.String,System.Int32)">
            <summary>
            Загружает папки и файлы из системы контроля версий в локальную папку рабочей копии.
            </summary> 
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="targetWorkingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>. Параметр <paramref name="revisionNumber"/> может быть только 
            положительным.</param>
            <result>Всегда 0.</result>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Revert(System.String)">
            <summary>
            Отменяет изменения из указанной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetRootDirectories(System.Uri)">
            <summary>
            Возвращает перечисление имен папок первого уровня относительно корневой папки системы контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Пустой список.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.ValidateAccessibility(System.Uri)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по указаному пути.
            </summary>
            <param name="sourceUri">Путь к папке или файлу системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.ValidateAccessibility(System.String)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по пути к хранилищу заданному для 
            локальной директории.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="sourceUri">Путь к корневой папке хранилища системы контроля версий.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Commit(System.String,System.Int32,System.String)">
            <summary>
            Фиксирует изменения из существующей локальной папки рабочей копии в систему контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Всегда 0.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Import(System.String,System.Uri,System.String)">
            <summary>
            Фиксирует в хранилище системы контроля версий дерево файлов и папок из заданной неверсионной папки.
            </summary>
            <param name="localPath">Путь к неверсионной папке.</param>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Всегда 0.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Снимает блокировки с удаленных файлов в системе контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="revisionNumber">Номер ревизии, в которой были удалены файлы.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetIsUnderSourceControl(System.String)">
            <summary>
            Проверяет, поддерживается ли контроль версионности для заданной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.UnlockContent(System.String)">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся в указанной 
            рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся по указанным 
            путям.
            </summary>
            <param name="workingCopyPaths">Список локальных путей.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Unlock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировки с заданных файлов на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Lock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Устанавливает блокировку на уровне системы контроля версий всех файлов, которые находятся по указанным 
            путям в рабочей копии.
            </summary>
            <param name="localFilePaths">Пути к файлам в рабочей копии.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые можно заблокировать на уровне системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="itemLocalPath">Локальный путь. Указывает директорию из которой берутся файлы для блокирования.
            </param>
            <param name="itemName">Имя элемента.</param>
            <returns>Всегда пустой список.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые заблокированы на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда пустой список.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Возвращает перечисление адресов файлов, заблокированных на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда пустой список.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetIsPackageElementHasForeignLock(System.String)">
            <summary>
            Определяет, имеются ли по указанному пути элементы, заблокированные другим пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Всегда <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.SynchronizeUsersLocks(System.String)">
            <summary>
            Синхронизирует блокировки файлов на уровне рабочей копии в соответствии с блокировками файлов на уровне 
            системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.Exists(System.Uri)">
            <summary>
            Определяет, существует ли заданный файл в хранилище системы контроля версий.
            </summary>
            <param name="sourceControlFileUri">Путь к файлу в хранилище системе контроля версий.</param>
            <returns>Всегда <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetIsLockedByOtherUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий не текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns>Всегда <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.ApplySourceControlChanges(System.String)">
            <summary>
            Актуализирует состояние файлов в системе контроля версий в соответствии с состоянием файлов в рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Возвращает номер последней ревизии для указанного пути в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Всегда 0.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            По указанному пути на сервере контроля версий создает директорию, если она не существует.
            </summary>
            <param name="directoryUri">Путь к директории.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.VirtualSourceControlManager.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            По указанным путям на сервере контроля версий создает директории, если они не существуют.
            </summary>
            <param name="directoryUries">Пути к директориям.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddPackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Добавляет пакеты в хранилище пакетов из переданного списка пакетов.
            </summary>
            <param name="packages">Пакеты.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку пакетов.
            </summary>
            <param name="select">Запрос на выборку пакетов из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesSchemasExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку схем пакетов.
            </summary>
            <param name="select">Запрос на выборку схем пакетов из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку зависимостей пакетов.
            </summary>
            <param name="select">Запрос на выборку зависимостей пакетов из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesSqlScriptExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку SQL-сценариев пакетов.
            </summary>
            <param name="select">Запрос на выборку SQL-сценариев из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadSqlScriptDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку зависимостей SQL-сценариев.
            </summary>
            <param name="select">Запрос на выборку зависимостей SQL-сценариев из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesDataExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку данных пакетов.
            </summary>
            <param name="select">Запрос на выборку данных пакетов из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesAssembliesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку сборок пакетов.
            </summary>
            <param name="select">Запрос на выборку сборок пакетов из базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageElementLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Разблокирует указанный элемент пакета в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя элемента пакета.</param>
            <param name="elementId">Идентификатор элемента пакета.</param>
            <returns><c>true</c>, если элемент пакета <paramref name = "elementName"/> с идентификатором
            <paramref name = "elementId"/> из пакета <paramref name = "packageName"/> разблокирован на уровне системы
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Разблокирует указанную схему в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя схемы.</param>
            <param name="elementId">Идентификатор схемы.</param>
            <returns><c>true</c>, если схема <paramref name = "elementName"/> с идентификатором
            <paramref name = "elementId"/> из пакета <paramref name = "packageName"/> разблокирована на уровне системы
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.AssemblyLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Разблокирует указанную сборку в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя сборки.</param>
            <param name="elementId">Идентификатор сборки.</param>
            <returns><c>true</c>, если сборка <paramref name = "elementName"/> с идентификатором
            <paramref name = "elementId"/> из пакета <paramref name = "packageName"/> разблокирована на уровне системы
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SqlScriptLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Разблокирует указанный SQL-сценарий в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя SQL-сценария.</param>
            <param name="elementId">Идентификатор SQL-сценария.</param>
            <returns><c>true</c>, если SQL-сценарий <paramref name = "elementName"/> с идентификатором
            <paramref name = "elementId"/> из пакета <paramref name = "packageName"/> разблокирован на уровне системы
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaDataLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Разблокирует указанные данные схемы в системе контроля версий.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя данных схемы.</param>
            <param name="elementId">Идентификатор данных схемы.</param>
            <returns><c>true</c>, если данные схемы <paramref name = "elementName"/> с идентификатором
            <paramref name = "elementId"/> из пакета <paramref name = "packageName"/> разблокированы на уровне системы
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageFlatUriGenerator">
            <summary>
            Предоставляет методы для генерации путей в хранилище системы контроля версий с учетом версии пакета.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageUri(System.Uri,System.String,System.String)">
            <summary>
            Возвращает полный путь к пакету в хранилище системы контроля версий с учетом версии пакета.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <param name="version">Версия пакета.</param>
            <returns>Полный путь к пакету в хранилище системы контроля версий с учетом версии пакета.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageRootUri(System.Uri,System.String)">
            <summary>
            Возвращает полный путь к корню пакета в хранилище системы контроля версий.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к корню пакета в хранилище системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageBranchesUri(System.Uri,System.String)">
            <summary>
            Возвращает полный путь к веткам пакета в хранилище системы контроля версий.
            </summary>
            <param name="repositoryUri">Корневой путь к пакету в хранилище системы контроля версий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к веткам пакета в хранилище системы контроля версий.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageHierarchyDBStorage">
            <summary>
            Предоставляет методы для работы с хранилищем пакетов в базе данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку пакетов.
            </summary>
            <param name="select">Запрос на выборку пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки полной иерархии пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesSchemasExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку схем пакетов.
            </summary>
            <param name="select">Запрос на выборку схем пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки полной иерархии схем пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку зависимостей пакетов.
            </summary>
            <param name="select">Запрос на выборку зависимостей пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки зависимостей пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesSqlScriptExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку SQL-сценариев пакетов.
            </summary>
            <param name="select">Запрос на выборку SQL-сценариев из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки SQL-сценариев пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadSqlScriptDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку зависимостей SQL-сценариев.
            </summary>
            <param name="select">Запрос на выборку зависимостей SQL-сценариев из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки зависимостей SQL-сценариев пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesDataExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку данных пакетов.
            </summary>
            <param name="select">Запрос на выборку данных пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки данных пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.AddLoadPackagesAssembliesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку сборок пакетов.
            </summary>
            <param name="select">Запрос на выборку сборок пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки сборок пакетов, от которых зависит обновляемый пакет.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyDBStorage.Save(Terrasoft.Core.Packages.IPackageContentProvider)">
            <summary>
            Сохраняет пакеты в базу данных.
            </summary>
            <param name="packageContentProvider">Провайдер содержимого пакета.</param>
            <returns>
            <c>true</c>, если пакеты сохранены успешно; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageInstallOptions">
            <summary>
            Класс настройки класса <see cref="T:Terrasoft.Core.Packages.PackageInstallUtilities"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageInstallOptions.ExecuteValidateActions">
            <summary>
            Признак необходимости выполнять проверяющие действия при обновлении структуры базы данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.UpdatePackageHierarchy(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Выполняет обновление иерархии пакетов.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <param name="workspaceId">Уникальный идентификатор рабочего пространства.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.ClearPackageHierarchy(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Выполняет очистку иерархии пакетов.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="workspaceId">Уникальный идентификатор рабочего пространства. Необязательный параметр, значение
            по умолчанию - <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.InstallPackage(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid,Terrasoft.Common.ResultMessageCollection@)">
            <summary>
            Выполняет установку пакета <paramref name = "rootPackageName"/> и его зависимостей в базу данных из
            хранилища системы контроля версий.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="rootPackageName">Имя загружаемого пакета, от которого строится иерархия зависимостей.</param>
            <param name="packageVersion">Версия загружаемого пакета, от которого строится иерархия зависимостей.</param>
            <param name="packageStorageId">Идентификатор хранилища пакета.</param>
            <param name="resultMessages">
            Коллекция сообщений, содержащая информацию о процессе и результате выполнения установки.
            </param>
            <returns>Коллекция, содержащая информацию об установленных пакетах.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.UpdatePackage(Terrasoft.Core.UserConnection,System.String,Terrasoft.Common.ResultMessageCollection@)">
            <summary>
            Выполняет загрузку пакета <paramref name = "rootPackageName"/> и его зависимостей в базу данных из
            хранилища системы контроля версий.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="rootPackageName">Имя обновляемого пакета, от которого строится иерархия зависимостей.</param>
            <param name="resultMessages">
            Коллекция сообщений, содержащая информацию о процессе и результате выполнения обновления.
            </param>
            <returns>Коллекция, содержащая информацию об обновленных пакетах.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageSourceControlStorage">
            <summary>
            Предоставляет методы для работы с хранилищем пакетов в системе контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageFileStorage">
            <summary>
            Предоставляет методы для работы с хранилищем пакетов в файловой системе.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFileStorage.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Packages.PackageFileStorage"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.#ctor(Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Packages.PackageSourceControlStorage"/>.
            </summary>
            <param name="sourceControlManager">Экземпляр менеджера системы контроля версий.</param>
            <param name="authManager">Менеджер авторизации в системе контроля версий.</param>
            <param name="workingCopyPath">Путь к рабочей копии пакетов.</param>
            <param name="packages">Перечислитель пакетов, установленных в системе.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.#ctor(System.String,System.String,System.Guid,Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Packages.PackageSourceControlStorage"/> для заданных параметров.
            </summary>
            <param name="rootPackageName">Имя пакета, от которого строится иерархия.</param>
            <param name="rootPackageVersion">Версия пакета, от которого строится иерархия.</param>
            <param name="packageStorageId">Идентификатор хранилища пакета.</param>
            <param name="sourceControlManager">Экземпляр менеджера системы контроля версий.</param>
            <param name="authManager">Менеджер авторизации в системе контроля версий.</param>
            <param name="workingCopyPath">Путь к рабочей копии пакетов.</param>
            <param name="packages">Перечислитель пакетов, установленных в системе.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.LoadInternal">
            <summary>
            Загружает пакеты с их зависимостями.
            </summary>
            <remarks>
            Структура пакетов загружается из системы контроля версий в файловую систему и коллекцию 
            <see cref="P:Terrasoft.Core.Packages.PackageStorage.Packages"/>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.Load(System.String,System.String,System.Guid)">
            <summary>
            Догружает недостающие пакеты в хранилище, начиная с указанного.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="packageVersion">Версия пакета.</param>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Возвращает <c>true</c> если указанный пакет был найден, иначе <c>false</c>.</returns>
            <remarks>
            Структура пакетов загружается из системы контроля версий в файловую систему и коллекцию 
            <see cref="P:Terrasoft.Core.Packages.PackageStorage.Packages"/>.
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageUriGeneratorFactory">
            <summary>
            Фабрика классов для генерации путей в хранилище системы контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageUriGeneratorFactory.CreateInstance">
            <summary>
            Возвращает экземпляр интерфейса <see cref="T:Terrasoft.Core.Packages.BasePackageUriGenerator"/>.
            </summary>
            <returns>Экземпляр интерфейса <see cref="T:Terrasoft.Core.Packages.BasePackageUriGenerator"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlAuthDescriptor">
            <summary>
            Авторизационные данные хранилища.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlAuthDescriptor.#ctor(Terrasoft.Core.Packages.SourceControlDescriptor,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/>,
            используя заданные значения его свойств.
            </summary>
            <param name="sourceControlDescriptor">Дескриптор хранилища.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.SourceControlDescriptor">
            <summary>
            Дескриптор хранилища.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.Login">
            <summary>
            Логин к хранилищу.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.Password">
            <summary>
            Пароль к хранилищу.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlDescriptor">
            <summary>
            Дескриптор хранилища.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlDescriptor.#ctor(System.Guid,System.String,System.Uri,System.Boolean)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SourceControlDescriptor"/>, 
            используя заданные значения его свойств.
            </summary>
            <param name="id">Идентификатор хранилища.</param>
            <param name="name">Название хранилища.</param>
            <param name="address">Адрес хранилища.</param>
            <param name="isActive">Признак, является ли адрес хранилища активным.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Id">
            <summary>
            Идентификатор хранилища.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Name">
            <summary>
            Название хранилища.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Address">
            <summary>
            Адрес хранилища.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.IsActive">
            <summary>
            Признак, является ли адрес хранилища активным.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlManager">
            <summary>
            Менеджер для работы с системой контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.#ctor(Terrasoft.Core.Packages.ISourceControlClient)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SourceControlManager"/>, 
            используя заданный <see cref="T:Terrasoft.Core.Packages.ISourceControlClient"/>.
            </summary>
            <param name="sourceControlClient">Клиент системы контроля версий.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Исключение генерируется, если параметр 
            <paramref name="sourceControlClient"/> не задан.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsUpdateNeed(System.String,System.Int32)">
            <summary>
            Сравнивает номер ревизии рабочей копии с номером рабочей ревизии системы контроля версий и определяет, 
            необходимо ли обновление рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <returns><c>true</c>, если номер ревизии рабочей копии меньше номера рабочей ревизии системы контроля 
            версий (необходимо обновление рабочей копии); иначе - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Исключение генерируется, если параметры 
            <paramref name="workingCopyPath"/> или <paramref name="workingRevisionNumber"/> содержат недопустимые 
            значения.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Update(System.Uri,System.String,System.Int32)">
            <summary>
            Загружает папки и файлы из системы контроля версий в локальную папку рабочей копии.
            </summary> 
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="targetWorkingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>. Параметр <paramref name="revisionNumber"/> может быть только 
            положительным.</param>
            <result>Номер загруженной ревизии.</result>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Исключение генерируется, если не задан 
            любой из параметров <paramref name="sourceUri"/> или <paramref name="targetWorkingCopyPath"/>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Исключение генерируется, если параметры 
            <paramref name="targetWorkingCopyPath"/> или <paramref name="revisionNumber"/> содержат недопустимые 
            значения.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Revert(System.String)">
            <summary>
            Отменяет изменения из указанной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если были отменеы изменения; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetRootDirectories(System.Uri)">
            <summary>
            Возвращает перечисление имен папок первого уровня относительно корневой папки системы контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Перечислитель имен папок.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ValidateAccessibility(System.Uri)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по указаному пути.
            </summary>
            <param name="sourceUri">Путь к папке или файлу системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ValidateAccessibility(System.String)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по пути к хранилищу заданному для 
            локальной директории.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="sourceUri">Путь к корневой папке хранилища системы контроля версий.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Commit(System.String,System.Int32,System.String)">
            <summary>
            Фиксирует изменения из существующей локальной папки рабочей копии в систему контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="workingRevisionNumber">Номер рабочей ревизии системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOutOfDateException">Исключение генерируется, если 
            номер ревизии рабочей копии <paramref name = "workingCopyPath"/> меньше, чем 
            <paramref name = "workingRevisionNumber"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Import(System.String,System.Uri,System.String)">
            <summary>
            Фиксирует в хранилище системы контроля версий дерево файлов и папок из заданной неверсионной папки.
            </summary>
            <param name="localPath">Путь к неверсионной папке.</param>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Исключение генерируется, если параметр 
            <paramref name="localPath"/> содержит недопустимые значения.</exception>
            <exception cref="T:Terrasoft.Common.SourceControlOperationIllegalUrlException">Исключение генерируется, 
            если в хранилище системы контроля версий уже существует папка по пути <paramref name = "sourceUri"/>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Снимает блокировки с удаленных файлов в системе контроля версий.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="revisionNumber">Номер ревизии, в которой были удалены файлы.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsUnderSourceControl(System.String)">
            <summary>
            Проверяет, поддерживается ли контроль версионности для заданной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если для папки <paramref name = "workingCopyPath"/> поддерживается контроль
            версионности; иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockContent(System.String)">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся в указанной 
            рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если файлы из рабочей копии <paramref name = "workingCopyPath"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся по указанным 
            путям.
            </summary>
            <param name="workingCopyPaths">Список локальных путей.</param>
            <returns><c>true</c>, если файлы по указанным путям <paramref name = "workingCopyPaths"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Unlock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировки с заданных файлов на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> разблокированы в системе 
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Lock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Устанавливает блокировку на уровне системы контроля версий всех файлов, которые находятся по указанным 
            путям в рабочей копии.
            </summary>
            <param name="localFilePaths">Пути к файлам в рабочей копии.</param>
            <returns><c>true</c>, если файлы <paramref name = "localFilePaths"/> из рабочей копии заблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые можно заблокировать на уровне системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="itemLocalPath">Локальный путь. Указывает директорию из которой берутся файлы для блокирования.
            </param>
            <param name="itemName">Имя элемента.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "itemLocalPath"/> и которые
            могут быть заблокированы на уровне системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые заблокированы на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "workingCopyPath"/> и 
            которые заблокированы на уровне системы контроля версий текущим пользователем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Возвращает перечисление адресов файлов, заблокированных на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Перечислитель путей файлов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsPackageElementHasForeignLock(System.String)">
            <summary>
            Определяет, имеются ли по указанному пути элементы, заблокированные другим пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если присутствует элемент, заблокированый другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.SynchronizeUsersLocks(System.String)">
            <summary>
            Синхронизирует блокировки файлов на уровне рабочей копии в соответствии с блокировками файлов на уровне 
            системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Exists(System.Uri)">
            <summary>
            Определяет, существует ли заданный файл в хранилище системы контроля версий.
            </summary>
            <param name="sourceControlFileUri">Путь к файлу в хранилище системе контроля версий.</param>
            <returns><c>true</c>, если в хранилище существует файл <paramref name = "sourceControlFileUri"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsLockedByOtherUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий не текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован другим пользователем
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ApplySourceControlChanges(System.String)">
            <summary>
            Актуализирует состояние файлов в системе контроля версий в соответствии с состоянием файлов в рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Возвращает номер последней ревизии для указанного пути в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Номер последней ревизии для пути <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            По указанному пути на сервере контроля версий создает директорию, если она не существует.
            </summary>
            <param name="directoryUri">Путь к директории.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            По указанным путям на сервере контроля версий создает директории, если они не существуют.
            </summary>
            <param name="directoryUries">Пути к директориям.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesSchemasExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку схем пакетов.
            </summary>
            <param name="select">Запрос на выборку схем пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки схем только текущего пакета.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesDataExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку данных пакетов.
            </summary>
            <param name="select">Запрос на выборку данных пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки данных текущего пакета.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesAssembliesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет дополнительные фильтры к запросу на выборку сборок пакетов.
            </summary>
            <param name="select">Запрос на выборку сборок пакетов из базы данных.</param>
            <remarks>
            Добавляет фильтр для выборки сборок текущего пакета.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddPackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Добавляет текущий пакет в хранилище пакетов из переданного списка пакетов.
            </summary>
            <param name="packages">Пакеты.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSchemaVirtualPath(System.String,System.String)">
            <summary>
            Возвращает виртуальный путь для схемы <paramref name = "schemaName"/> из пакета
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaName">Имя схемы.</param>
            <returns>Виртуальный путь для схемы <paramref name = "schemaName"/> из пакета
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSqlScriptVirtualPath(System.String,System.String)">
            <summary>
            Возвращает виртуальный путь для SQL-сценария <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="sqlScriptName">Имя SQL-сценария.</param>
            <returns>Виртуальный путь для SQL-сценария <paramref name = "sqlScriptName"/> из пакета
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSchemaDataVirtualPath(System.String,System.String)">
            <summary>
            Возвращает виртуальный путь для данных схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="schemaDataName">Имя данных схемы.</param>
            <returns>Виртуальный путь для данных схемы <paramref name = "schemaDataName"/> из пакета
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetAssemblyVirtualPath(System.String,System.String)">
            <summary>
            Возвращает виртуальный путь для сборки <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">Имя пакета.</param>
            <param name="assemblyName">Имя сборки.</param>
            <returns>Виртуальный путь для сборки <paramref name = "assemblyName"/> из пакета
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageElementPath(System.String,System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Возвращает полный путь к элементу пакета.
            </summary>
            <param name="packageCopyPath">Путь к папкам рабочих копий.</param>
            <param name="packageName">Имя пакета.</param>
            <param name="elementName">Имя элемента.</param>
            <param name="elementType">Тип элемента <paramref name = "elementName"/>.</param>
            <returns>Полный путь к элементу пакета.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageWorkingCopyPath(System.String,System.String)">
            <summary>
            Возвращает полный путь к пакету.
            </summary>
            <param name="packageCopyPath">Путь к папкам рабочих копий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к пакету.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageDescriptorPath(System.String,System.String)">
            <summary>
            Возвращает полный путь к файлу дескриптора пакета.
            </summary>
            <param name="packageCopyPath">Путь к папкам рабочих копий.</param>
            <param name="packageName">Имя пакета.</param>
            <returns>Полный путь к файлу дескриптора пакета.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlUtilities">
            <summary>
            Класс для вспомогательных методов работы с системой контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateSourceControlAuthManager(Terrasoft.Core.UserConnection)">
            <summary>
            Создает новый экземпляр менеджера для работы с аутентификацией в хранилище.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <returns>Новый экземпляр менеджера для работы с аутентификацией в хранилище.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateSourceControlManager(Terrasoft.Core.UserConnection)">
            <summary>
            Создает новый экземпляр менеджера для работы с клиентом системы контроля версий.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <returns>Новый экземпляр менеджера для работы с клиентом системы контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateLockerManager(Terrasoft.Core.UserConnection)">
            <summary>
            Создает новый экземпляр менеджера для работы с блокировками пакетов и их элементов в хранилище системы
            контроля версий.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <returns>Новый экземпляр менеджера для работы с блокировками пакетов и их элементов в хранилище системы
            контроля версий.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateDescriptorComparer">
            <summary>
            Создает новый экземпляр менеджера, выполняющего сравнение дескрипторов элементов системы.
            </summary>
            <returns>Новый экземпляр менеджера, выполняющего сравнение дескрипторов элементов системы.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnAuthManager">
            <summary>
            Менеджер для работы с аутентификацией в хранилище для пакетов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SvnAuthManager"/> 
            с заданными параметрами.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            Возвращает авторизационные данные хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> для 
            хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом не найдено, тогда 
            генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с 
            адресом <paramref name = "sourceUri"/> не найдено.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetIdByUri(System.Uri)">
            <summary>
            Возвращает идентификатор хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Идентификатор хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом 
            не найдено, тогда генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с 
            адресом <paramref name = "sourceUri"/> не найдено.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            Возвращает адрес хранилища.
            </summary>
            <param name="descriptorId">Идентификатор хранилища.</param>
            <param name="packageName">Название пакета. Необязательный параметр, значение по умолчанию - <c>null</c>.
            </param>
            <returns>Адрес хранилища с идентификатором <paramref name = "descriptorId"/>. Если хранилище с таким 
            идентификатором не найдено, тогда генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с 
            идентификатором <paramref name = "descriptorId"/> не найдено.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
            <exception cref="T:System.Security.SecurityException">Если у пользователя недостаточно прав для модификации объекта.
            </exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с
            идентификатором <paramref name="repositoryId"/> не активно.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            Сохраняет дескриптор хранилища.
            </summary>
            <param name="sourceControlDescriptor">Дескриптор хранилища.</param>
            <returns>Идентификатор хранилища, дескриптор которого сохранен.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.DeleteRepository(System.Guid)">
            <summary>
            Удаляет дескриптор хранилища.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            Определяет, существуют ли пакеты, которые ссылаются на заданное хранилище.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns><c>true</c>, если на хранилище ссылается хотя бы один пакет; в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            Возвращает дескриптор хранилища с заданным идентификатором.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> для 
            хранилища с идентификатором <paramref name = "repositoryId"/> либо <c>null</c>, если хранилище с таким 
            идентификатором не найдено.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlAuthDescriptors">
            <summary>
            Перечислитель авторизационных данных хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.Uris">
            <summary>
            Перечислитель путей хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlDescriptors">
            <summary>
            Перечислитель дескрипторов хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.UseSourceControlAuthentication">
            <summary>
            Признак, использовать ли кэш аутентификации системы контроля версий.
            </summary>
            <value>
            <c>true</c>, если используется кэш аутентификации системы контроля версий, иначе - <c>false</c>.
            </value>
            <remarks> Значение по умолчанию: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlAuthPath">
            <summary>
            Путь к папке, где хранятся аутентификационные данные хранилища системы контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnClientWrapper">
            <summary>
            Обертка клиента системы контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.#ctor(Terrasoft.Core.Packages.ISvnClient)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SvnClientWrapper"/> 
            для заданного клиента контроля версий.
            </summary>
            <param name="instance">Клиент контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SvnClientWrapper"/> .
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.Authenticate(System.String,System.String)">
            <summary>
            Выполняет настройку аутентификаци клиента контроля версий.
            </summary>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.CheckOut(System.Uri,System.String,System.Int32)">
            <summary>
            Выполняет полную загрузку папок и файлов заданной ревизии из системы контроля версий в локальную папку 
            рабочей копии.
            </summary>
            <param name="sourceUri">Путь к корневой папке системы контроля версий.</param>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="revision">Номер ревизии, изменения которой должны быть загружены.</param>
            <returns><c>true</c>, если загрузка данных из системы контроля версий неуспешна; 
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager">
            <summary>
            Менеджер для работы с аутентификацией в хранилище для конфигурации.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager"/> 
            с заданными параметрами.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.SourceControlDescriptor})">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager"/> 
            с заданными параметрами.
            </summary>
            <param name="login">Логин пользователя.</param>
            <param name="password">Пароль пользователя.</param>
            <param name="sourceControlDescriptors">Перечислитель дескрипторов хранилищ системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            Возвращает авторизационные данные хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> для 
            хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом не найдено, тогда 
            генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с 
            адресом <paramref name = "sourceUri"/> не найдено.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetIdByUri(System.Uri)">
            <summary>
            Возвращает идентификатор хранилища.
            </summary>
            <param name="sourceUri">Адрес хранилища.</param>
            <returns>Идентификатор хранилища с адресом <paramref name = "sourceUri"/>. Если хранилище с таким адресом 
            не найдено, тогда генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Исключение генерируется, если хранилище с 
            адресом <paramref name = "sourceUri"/> не найдено.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            Возвращает адрес хранилища.
            </summary>
            <param name="descriptorId">Идентификатор хранилища.</param>
            <param name="packageName">Название пакета. Необязательный параметр, значение по умолчанию - <c>null</c>.
            </param>
            <returns>Адрес хранилища с идентификатором <paramref name = "descriptorId"/>. Если хранилище с таким 
            идентификатором не найдено, тогда генерируется исключение.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            Обновляет логин и пароль доступа к хранилищу.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            Сохраняет дескриптор хранилища.
            </summary>
            <param name="sourceControlDescriptor">Дескриптор хранилища.</param>
            <returns>Идентификатор хранилища, дескриптор которого сохранен.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.DeleteRepository(System.Guid)">
            <summary>
            Удаляет дескриптор хранилища.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            Определяет, существуют ли пакеты, которые ссылаются на заданное хранилище.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns><c>true</c>, если на хранилище ссылается хотя бы один пакет; в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            Возвращает дескриптор хранилища с заданным идентификатором.
            </summary>
            <param name="repositoryId">Идентификатор хранилища.</param>
            <returns>Возвращает экземпляр <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> для 
            хранилища с идентификатором <paramref name = "repositoryId"/> либо <c>null</c>, если хранилище с таким 
            идентификатором не найдено.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlAuthDescriptors">
            <summary>
            Перечислитель авторизационных данных хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.Uris">
            <summary>
            Перечислитель путей хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlDescriptors">
            <summary>
            Перечислитель дескрипторов хранилищ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.UseSourceControlAuthentication">
            <summary>
            Признак, использовать ли кэш аутентификации системы контроля версий.
            </summary>
            <value>
            <c>true</c>, если используется кэш аутентификации системы контроля версий, иначе - <c>false</c>.
            </value>
            <remarks> Значение по умолчанию: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlAuthPath">
            <summary>
            Путь к папке, где хранятся аутентификационные данные хранилища системы контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnSourceControlClient">
            <summary>
            Клиент для системы контроля версий SVN.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.#ctor(Terrasoft.Core.Packages.ISourceControlAuthManager,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SvnSourceControlClient"/> 
            с заданными менеджером авторизации и путем к файлу настроек.
            </summary>
            <param name="authManager">Менеджер авторизации в системе контроля версий.</param>
            <param name="svnConfigPath">Путь к настройкам SVN.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.#ctor(Terrasoft.Core.Packages.ISourceControlAuthManager,System.Int32,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Packages.SvnSourceControlClient"/> 
            с заданными параметрами.
            </summary>
            <param name="authManager">Менеджер авторизации в системе контроля версий.</param>
            <param name="workspaceNumber">Номер конфигурации.</param>
            <param name="workspaceName">Название конфигурации.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Исключение генерируется, если не задан 
            параметр <paramref name="workspaceName"/>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Исключение генерируется, если параметр 
            <paramref name="workspaceNumber"/> содержит недопустимое значение.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Сохраняет логин и пароль доступа к хранилищу.
            </summary>
            <param name="sourceUri">Путь к корневой папке хранилища системы контроля версий.</param>
            <param name="login">Логин к хранилищу.</param>
            <param name="password">Пароль к хранилищу.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ValidateAccessibility(System.Uri)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по указаному пути.
            </summary>
            <param name="sourceControlUri">Путь к папке или файлу системы контроля версий.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ValidateAccessibility(System.String)">
            <summary>
            Проверяет возможность доступа пользователя к системе контроля версий по пути к хранилищу для локальной 
            директории.
            </summary>
            <param name="workingCopyPath">Путь к локальной директории рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetUriFromWorkingCopy(System.String)">
            <summary>
            По заданному пути к папке рабочей копии возвращает путь к корневой папке системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Путь к корневой папке системы контроля версий.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">Исключение генерируется, если папка, 
            путь к которой указан в параметре <paramref name = "workingCopyPath"/>, не находится под системой контроля 
            версий.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsUnderSourceControl(System.String)">
            <summary>
            Проверяет, находится ли указанная папка рабочей копии под системой контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если папка, путь к которой указан в параметре <paramref name = "workingCopyPath"/>,
            находится под системой контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CheckOut(System.Uri,System.String,System.Int32)">
            <summary>
            Выполняет полную загрузку папок и файлов из системы контроля версий в локальную папку рабочей копии.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Номер загруженной ревизии.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">Исключение генерируется, если загрузка 
            данных из системы контроля версий неуспешна.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Update(System.String,System.Int32)">
            <summary>
            Выполняет обновление папок и файлов из системы контроля версий в локальную папку рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="revisionNumber">Номер ревизии, изменения которой должны быть загружены. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Номер загруженной ревизии.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">Исключение генерируется, если загрузка 
            данных из системы контроля версий неуспешна.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Revert(System.String)">
            <summary>
            Отменяет изменения из указанной папки.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если были отменеы изменения; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Возвращает перечисление адресов файлов, заблокированных на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Перечислитель путей файлов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsFilesHaveForeignLock(System.String)">
            <summary>
            Определяет, имеются ли по указанному пути элементы, заблокированные другим пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если присутствует элемент, заблокированый другим пользователем, в противном случае — 
            значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetRootDirectories(System.Uri)">
            <summary>
            Возвращает перечисление имен папок первого уровня относительно корневой папки системы контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Перечислитель имен папок.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Commit(System.String,System.String)">
            <summary>
            Фиксирует изменения из локальной папки рабочей копии в систему контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">Исключение генерируется, если фиксация
            данных в систему контроля версий неуспешна.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Import(System.String,System.Uri,System.String)">
            <summary>
            Фиксирует в хранилище системы контроля версий дерево файлов и папок из заданной неверсионной папки.
            </summary>
            <param name="localPath">Путь к неверсионной папке.</param>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
            <returns>Номер ревизии загруженных изменений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Снимает блокировки с удаленных файлов в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <param name="revisionNumber">Номер ревизии, в которой были удалены файлы.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Lock(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Блокирует доступ к заданным файлам на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <param name="isForceLock">Признак, является ли блокировка принудительной. Необязательный параметр.
            Значение по умолчанию - <c>false</c>.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> заблокированы в системе
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Lock(System.String,System.Boolean)">
            <summary>
            Блокиует доступ к заданному файлу на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь файла.</param>
            <param name="isForceLock">Признак, является ли блокировка принудительной. Необязательный параметр.
            Значение по умолчанию - <c>false</c>.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован в системе контроля версий; 
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Unlock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировки с заданных файлов на уровне системы контроля версий.
            </summary>
            <param name="localFilePaths">Список локальных путей к файлам.</param>
            <returns><c>true</c>, если файлы из списка <paramref name = "localFilePaths"/> разблокированы в системе 
            контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Unlock(System.String)">
            <summary>
            Снимает блокировку с заданного файла на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь файла.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> разблокирован в системе контроля версий;
            в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockContent(System.String)">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся в указанной 
            рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns><c>true</c>, если файлы из рабочей копии <paramref name = "workingCopyPath"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Снимает блокировку на уровне системы контроля версий со всех файлов, которые находятся по указанным 
            путям.
            </summary>
            <param name="workingCopyPaths">Список локальных путей.</param>
            <returns><c>true</c>, если файлы по указанным путям <paramref name = "workingCopyPaths"/> разблокированы 
            в системе контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.SynchronizeUsersLocks(System.String)">
            <summary>
            Синхронизирует блокировки файлов на уровне рабочей копии в соответствии с блокировками файлов на уровне 
            системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Exists(System.Uri)">
            <summary>
            Определяет, существует ли заданный файл в хранилище системы контроля версий.
            </summary>
            <param name="sourceControlFileUri">Путь к файлу в системе контроля версий.</param>
            <returns><c>true</c>, если в хранилище существует файл <paramref name = "sourceControlFileUri"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Add(System.String)">
            <summary>
            Добавляет неверсионный файл в структуру рабочей копии системы контроля версий.
            </summary>
            <param name="workingCopyFilePath">Путь к файлу в рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLocked(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован на уровне системы контроля 
            версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLockedByCurrentUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован текущим пользователем 
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLockedByOtherUser(System.String)">
            <summary>
            Проверяет, заблокирован ли файл на уровне системы контроля версий не текущим пользователем.
            </summary>
            <param name="localFilePath">Локальный путь к файлу.</param>
            <returns><c>true</c>, если файл <paramref name = "localFilePath"/> заблокирован другим пользователем 
            на уровне системы контроля версий; в противном случае — значение <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые можно заблокировать на уровне системы контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <param name="itemLocalPath">Локальный путь. Указывает директорию из которой берутся файлы для блокирования.
            </param>
            <param name="itemName">Имя элемента.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "itemLocalPath"/> и которые
            могут быть заблокированы на уровне системы контроля версий.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlLockException">Исключение генерируется, если путь
            полученый из <paramref name = "itemLocalPath"/> указывает на несуществующую папку в системе контроля 
            версий, или если хотя бы один файл из директории <paramref name = "itemLocalPath"/> заблокирован другим 
            пользователем, или если хотя бы один файл из директории <paramref name = "itemLocalPath"/> устарел.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Возвращает список локальных путей к файлам, которые заблокированы на уровне системы контроля версий текущим
            пользователем.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
            <returns>Список локальных путей к файлам, которые находятся в <paramref name = "workingCopyPath"/> и 
            которые заблокированы на уровне системы контроля версий текущим пользователем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Возвращает номер последней ревизии для указанного пути в системе контроля версий.
            </summary>
            <param name="sourceControlUri">Путь к корневой папке системы контроля версий.</param>
            <returns>Номер последней ревизии для пути <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ApplySourceControlChanges(System.String)">
            <summary>
            Актуализирует состояние файлов в системе контроля версий в соответствии с состоянием файлов в рабочей копии.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.SetPropertyMimeType(System.String)">
            <summary>
            Устанавливает для файлов, находящихся в локальном хранилище по пути <paramref name = "workingCopyPath"/>, 
            свойство MimeType со значением, указывающим на то, что файл не должен участвовать в процессе слияния 
            изменений системой контроля версий.
            </summary>
            <param name="workingCopyPath">Путь к рабочей копии.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            По указанному пути на сервере контроля версий создает директорию, если она не существует.
            </summary>
            <param name="directoryUri">Путь к директории.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            По указанным путям на сервере контроля версий создает директории, если они не существуют.
            </summary>
            <param name="directoryUries">Пути к директориям.</param>
            <param name="logMessage">Строка комментариев фиксации. Необязательный параметр.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnSourceControlClient.Realm">
            <summary>
            Область видимости для идентификации пользователя при авторизации в системе контроля версий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ItemValidationMessage">
            <summary>
            Содержит информацию о результатах проверки элемента конфигурации.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ItemValidationMessage.#ctor(Terrasoft.Core.Packages.Descriptor,Terrasoft.Common.ResultMessage)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Packages.ItemValidationMessage"/> для заданного элемента конфигурации.
            </summary>
            <param name="item">Элемент конфигурации.</param>
            <param name="message">Сообщение <see cref="T:Terrasoft.Common.ResultMessage"/> с информацией о результатах проверки.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemValidationMessage.Item">
            <summary>
            Элемент конфигурации.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemValidationMessage.Message">
            <summary>
            Сообщение с информацией о результатах проверки.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageValidator.Validate(Terrasoft.Core.Packages.PackageStorage,Terrasoft.Core.Packages.PackageStorage,Terrasoft.Core.Packages.PackageValidationOptions)">
            <summary>
            Проверяет возможность установки пакетов из <paramref name="sourceStorage"/> в
            <paramref name="targetStorage"/>.
            </summary>
            <param name="sourceStorage">Хранилище с пакетами для установки.</param>
            <param name="targetStorage">Хранилище, куда должны быть установлены пакеты.</param>
            <param name="options">Параметры проверки.</param>
            <returns><c>true</c>, если проверка прошла успешно; в противном случае - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметров <paramref name="sourceStorage"/>
            или <paramref name="targetStorage"/> или <paramref name="options"/> передается <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.BpmnElementVocabulary.GetShouldProcessByTaskService(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Определяет, что элемент бизнес-процесса требует выполнения сервисом <see cref="T:Terrasoft.Core.Process.TaskService"/>.
            </summary>
            <returns><c>true</c>, если элемент бизнес-процесса требует выполнения сервисом <see cref="T:Terrasoft.Core.Process.TaskService"/>;
            иначе — <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ConditionalSequenceFlow">
            <summary>
            Представляет соединение элементов бизнес-процесса с условием.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.SequenceFlow">
            <summary>
            Представляет соединение элементов бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет запись свойств.
            </summary>
            <param name="dataWriter">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется запись свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет чтение свойств.
            </summary>
            <param name="dataReader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется вычитка свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> и заданный экземпляр 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/>, который сравнивается с текущим экземпляром 
            <see cref="T:Terrasoft.Core.Process.SequenceFlow"/>.</param>
            <returns><c>true</c>, если сравниваемые объекты идентичны; иначе — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.GetHashCode">
            <summary>
            Возвращает хэш-код объекта.
            </summary>
            <returns>Хэш-код объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.CheckCondition(System.Guid)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.TargetFlowElementUId">
            <summary>
            Идентификатор элемента, в который приходит соединение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.SourceFlowElementUId">
            <summary>
            Идентификатор элемента, из которого исходит соединение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.ExpressionText">
            <summary>
            Текст выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/>,
            используя схему процесса <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет запись свойств.
            </summary>
            <param name="dataWriter">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется запись свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет чтение свойств.
            </summary>
            <param name="dataReader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется вычитка свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.CheckCondition(System.Guid)">
            <summary>
            Выполняет проверку условия перехода к следующему элементу бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор экземпляра процесса, для которого необходимо проверять условие.
            </param>
            <returns><c>true</c>, если выполняется условие перехода к следующему элементу бизнес-процесса;
            иначе — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/> и заданный экземпляр 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/>, который сравнивается с текущим экземпляром 
            <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/>.</param>
            <returns><c>true</c>, если сравниваемые объекты идентичны; иначе — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.GetHashCode">
            <summary>
            Возвращает хэш-код объекта.
            </summary>
            <returns>Хэш-код объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.ActivityResults">
            <summary>
            Результаты активности бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.PressedButtonsCode">
            <summary>
            Коды нажатых кнопок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.ResultParameterName">
            <summary>
            Имя результирующего параметра элемента бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowConditionalGateway">
            <summary>
            Базовый класс для элементов BPMN, содержащих условные потоки.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.#ctor(Terrasoft.Core.Process.FlowSchema,System.String,Terrasoft.Core.Process.ConditionEvalStrategy)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowConditionalGateway"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <param name="bpmnElementName">Имя типа элемента процесса.</param>
            <param name="conditionEvalStrategy">Стратегия вычисления набора условных потоков.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.#ctor(Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.ConditionEvalStrategy)">
            <summary>
            Создает копию экземпляра <see cref="T:Terrasoft.Core.Process.FlowConditionalGateway"/>.
            </summary>
            <param name="flowElement">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</param>
            <param name="conditionEvalStrategy">Стратегия вычисления набора условных потоков.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.SubscribeOnVisited(System.Func{Terrasoft.Core.Process.FlowElement,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement}})">
            <summary>
            Подписывает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> на событие "посещен".
            </summary>
            <param name="defaultHandler">Метод по умолчанию для вызова события "посещен".</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Обрабатывает элемент бизнес-процесса.
            </summary>
            <param name="visitor">Экземпляр класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, который отвечает за переход между
            элементами процесса.</param>
            <param name="previousFlowElement">Предыдущий элемент процесса.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.ResultSequenceFlows">
            <summary>
            Набор результирующих исходящих потоков.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.UseClonedInstance">
            <summary>
            Определяет, нужно ли схеме при инстанцировании элемента клонировать его.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.ConditionEvalStrategy">
            <summary>
            Набор результирующих исходящих потоков.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowEngineStateService">
            <summary>
            Управляет данными процессов, ранее запущенных в системе.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.FindProcessComponentSet(System.Guid)">
            <summary>
            Осуществляет поиск набора компонентов процесса по заданному идентификатору.
            </summary>
            <param name="processComponentSetUId">Идентификатор набора компонентов процесса.</param>
            <returns>Набор компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.GetProcessComponentSet(System.Guid)">
            <summary>
            Возвращает набор компонентов процесса по заданному идентификатору. Если набор компонентов не найден, 
            генерируется исключение.
            </summary>
            <param name="processComponentSetUId">Идентификатор набора компонентов процесса.</param>
            <returns>Набор компонентов процесса.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если набор компонентов процесса с идентификатором
            <paramref name="processComponentSetUId"/> не найден в хранилище.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.SaveProcessComponentSet(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Сохраняет в хранилище набор компонентов процесса.
            </summary>
            <param name="processComponentSet">Набор компонентов запущенного процесса, помещаемый в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.FindFlowSchema(System.Guid)">
            <summary>
            Осуществляет поиск данных схемы процесса по заданному идентификатору.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Данные схемы процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.GetFlowSchema(System.Guid)">
            <summary>
            Возвращает данные схемы процесса по заданному идентификатору. Если схема процесса не найдена, 
            генерируется исключение.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Данные схемы процесса.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если схема процесса с идентификатором
            <paramref name="schemaId"/> не найдена в хранилище.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Сохраняет в хранилище данные схемы процесса.
            </summary>
            <param name="flowSchema">Данные схемы процесса, помещаемые в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            Удаляет данные схемы процесса из хранилища.
            </summary>
            <param name="processUId">Идентификатор экземпляра процесса, для которого был создан FlowVisitor.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.RemoveProcessComponentSet(System.Guid)">
            <summary>
            Удаляет набор компонентов процесса из хранилища.
            </summary>
            <param name="processComponentSetUId">Идентификатор удаляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.FindFlowSchema(System.Guid)">
            <summary>
            Осуществляет поиск данных схемы процесса по заданному идентификатору.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Данные схемы процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.GetFlowSchema(System.Guid)">
            <summary>
            Возвращает данные схемы процесса по заданному идентификатору. Если схема процесса не найдена, 
            генерируется исключение.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Данные схемы процесса.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если схема процесса с идентификатором
            <paramref name="schemaId"/> не найдена в хранилище.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.FindFlowVisitor(System.Guid,Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> по заданному идентификатору процесса.
            </summary>
            <param name="processUId">Идентификатор экземпляра процесса.</param>
            <param name="flowSchema">Данные схемы процесса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Сохраняет в хранилище данные схемы процесса.
            </summary>
            <param name="flowSchema">Данные схемы процесса, помещаемые в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.SaveFlowVisitor(Terrasoft.Core.Process.FlowVisitor)">
            <summary>
            Сохраняет в хранилище посетитель элементов процесса.
            </summary>
            <param name="flowVisitor">Данные схемы процесса, помещаемые в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.RemoveFlowSchema(System.Guid)">
            <summary>
            Удаляет данные схемы процесса из хранилища.
            </summary>
            <param name="flowSchemaId">Идентификатор удаляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            Удаляет данные схемы процесса из хранилища.
            </summary>
            <param name="processUId">Идентификатор экземпляра процесса, для которого был создан FlowVisitor.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowEngineStateService"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.#ctor(Terrasoft.Core.PersistentStore)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowEngineStateService"/> с заданным алгоритмом восстановления набора
            компонентов бизнес-процесса.
            </summary>
            <param name="store">Постоянное хранилище данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.#ctor(System.Func{System.String,System.String,Terrasoft.Core.Process.ProcessComponentSet},Terrasoft.Core.PersistentStore)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowEngineStateService"/> с заданным алгоритмом восстановления набора
            компонентов бизнес-процесса.
            </summary>
            <param name="processComponentSetRestoreMethod">Алгоритм восстановления набора компонентов бизнес-процесса.
            </param>
            <param name="store">Постоянное хранилище данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindProcessComponentSet(System.Guid)">
            <summary>
            Осуществляет поиск набора компонентов процесса по заданному идентификатору.
            </summary>
            <param name="processComponentSetUId">Идентификатор набора компонентов процесса.</param>
            <returns>Набор компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetProcessComponentSet(System.Guid)">
            <summary>
            Возвращает набор компонентов процесса по заданному идентификатору. Если набор компонентов не найден, 
            генерируется исключение.
            </summary>
            <param name="processComponentSetUId">Идентификатор набора компонентов процесса.</param>
            <returns>Набор компонентов процесса.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если набор компонентов процесса с идентификатором
            <paramref name="processComponentSetUId"/> не найден в хранилище.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveProcessComponentSet(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Сохраняет в хранилище набор компонентов процесса.
            </summary>
            <param name="processComponentSet">Набор компонентов запущенного процесса, помещаемый в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveProcessComponentSet(System.Guid)">
            <summary>
            Удаляет набор компонентов процесса из хранилища.
            </summary>
            <param name="processComponentSetUId">Идентификатор удаляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindFlowSchema(System.Guid)">
            <summary>
            Осуществляет поиск схемы процесса по заданному идентификатору.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Данные схемы процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetFlowSchema(System.Guid)">
            <summary>
            Возвращает схему процесса по заданному идентификатору. Если схема процесса не найдена, 
            генерируется исключение.
            </summary>
            <param name="schemaId">Идентификатор схемы процесса.</param>
            <returns>Cхема процесса.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если схема процесса с идентификатором
            <paramref name="schemaId"/> не найдена в хранилище.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindFlowVisitor(System.Guid,Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Осуществляет поиск посетителя процесса по заданному идентификатору экземпляра процесса.
            </summary>
            <param name="processUId">Идентификатор экзепляра процесса.</param>
            <param name="flowSchema">Схема процесса, для которой возвращается посетитель.</param>
            <returns>Экземпляр посетителя.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Сохраняет в хранилище схему процесса.
            </summary>
            <param name="flowSchema">Схема процесса, помещаемая в хранилище.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveFlowVisitor(Terrasoft.Core.Process.FlowVisitor)">
            <summary>
            Сохраняет в хранилище посетитель экземпляра процесса.
            </summary>
            <param name="flowVisitor">Экземпляр посетителя.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveFlowSchema(System.Guid)">
            <summary>
            Удаляет данные схемы процесса из хранилища.
            </summary>
            <param name="flowSchemaUId">Идентификатор удаляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            Удаляет данные посетителя процесса из хранилища.
            </summary>
            <param name="processUId">Идентификатор экзямпляра процесса, для которого был создан посетитель.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParameterInfoPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь данные параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к данным параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindParameterInfo(System.Guid,System.String)">
            <summary>
            Осуществляет поиск данных параметра процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> или <c>null</c>, если данные не найдены.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParameterInfo(System.Guid,System.String)">
            <summary>
            Возвращает данные параметра процесса. Если данные не найдены, генерируется исключение.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <returns>
            Экземпляр типа <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если данные параметра процесса не найдены.</exception>&gt;.
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Сохраняет данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="pathParametersInfo">Список пар ключ/значение, где ключ - путь к параметру,
            а значение - данные параметра процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <summary>
            Сохраняет данные параметра заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к данным параметра процесса.</param>
            <param name="parameterInfo">Данные параметра бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveParametersInfo(System.Guid)">
            <summary>
            Удаляет все данные параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetProcessParameterPathes(System.Guid)">
            <summary>
            Возвращает набор путей, по которым можно извлечь значения параметров бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <returns>
            Хэш-таблица, содержащая набор путей к значениям параметров процесса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Int32)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Int32"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Guid)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Guid"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Decimal"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.String)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.String"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Enum)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Enum"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.DateTime"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Boolean"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/> по сформированному
            ключу. Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="localizableString">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Double)">
            <summary>
            Устанавливает значение параметра типа <see cref="T:System.Double"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра процесса.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.String"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Guid"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Int32"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Decimal"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Double"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Enum"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.DateTime"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:System.Boolean"/> по сформированному ключу.
            Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <summary>
            Пытается извлечь значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>
            по сформированному ключу. Ключ формируется по значению идентификатора <paramref name="processUId"/> и
            значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <returns>
            <c>true</c>, если хранилище содержит значение параметра по сформированному ключу; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindParameterValue(System.Guid,System.String)">
            <summary>
            Извлекает значение параметра произвольного типа по сформированному ключу. Ключ формируется по значению 
            идентификатора <paramref name="processUId"/> и значению параметра <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterPath">Путь к значению параметра, которое необходимо получить.</param>
            <returns>
            Значение параметра или <c>null</c> в случае, если параметр не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveParameterValues(System.Guid)">
            <summary>
            Удаляет все значения параметров заданного бизнес-процесса.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowEngineStateService.ConcurrentStore`2">
            <summary>
            Хранилище элементов с улучшенным конкурентным доступом.
            </summary>
            <typeparam name="TKey">Тип ключа элемента/>.</typeparam>
            <typeparam name="TItem">Тип элемента/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.ConcurrentStore`2.TryGetValue(`0,`1@)">
            <summary>
            Осуществляет поиск элемента в хранилище по заданному идентификатору.
            </summary>
            <param name="uId">Идентификатор элемента.</param>
            <param name="value">Экземпляр элемента.</param>
            <returns>Возвращает <c>true</c> если элемент найден, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.ConcurrentStore`2.AddOrUpdate(`0,`1)">
            <summary>
            Добавляет экземляр элемента в хранилище, если он не найден по указанному идентификатору,
            иначе - обновляет элемент.
            </summary>
            <param name="uId">Идентификатор элемента.</param>
            <param name="value">Экземпляр элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.ConcurrentStore`2.Remove(`0)">
            <summary>
            Удаляет элемент из хранилищ всех уровней.
            </summary>
            <param name="uId">Идентификатор удаляемого элемента.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowExclusiveGateway">
            <summary>
            Представляет элемент "Исключающее ИЛИ" бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowExclusiveGateway"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.#ctor(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Создает копию экземпляра <see cref="T:Terrasoft.Core.Process.FlowExclusiveGateway"/>.
            </summary>
            <param name="flowElement">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowInclusiveGateway">
            <summary>
            Представляет элемент "Включающее ИЛИ" бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowInclusiveGateway"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.#ctor(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Создает копию экземпляра <see cref="T:Terrasoft.Core.Process.FlowInclusiveGateway"/>.
            </summary>
            <param name="flowElement">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateCatchMessage">
            <summary>
            Представляет элемент "Промежуточное обрабатывающее сообщение" бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowIntermediateCatchMessage"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchema"/> схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Обрабатывает элемент бизнес-процесса.
            </summary>
            <param name="visitor">Экземпляр класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, который отвечает за переход между
            элементами процесса.</param>
            <param name="previousFlowElement">Предыдущий элемент процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage">
            <summary>
            Представляет элемент "Промежуточное генерирующее сообщение" бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.#ctor(Terrasoft.Core.Process.FlowIntermediateThrowMessage)">
            <summary>
            Создает копию экземпляра <see cref="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage"/>.
            </summary>
            <param name="flowElement">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"Экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchema"/> схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Обрабатывает элемент бизнес-процесса.
            </summary>
            <param name="visitor">Экземпляр класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, который отвечает за переход между
            элементами процесса.</param>
            <param name="previousFlowElement">Предыдущий элемент процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowParallelGateway">
            <summary>
            Представляет элемент "И" бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowParallelGateway"/>, используя схему процесса
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema"></param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Записывает свойства элемента бизнес-процесса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="dataWriter">Экземпляр класса для записи свойств.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Читает свойства элемента бизнес-процесса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="dataReader">Экземпляр класса для чтения свойств.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Обрабатывает элемент бизнес-процесса.
            </summary>
            <param name="visitor">Экземпляр класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, который отвечает за переход между
            элементами процесса.</param>
            <param name="previousFlowElement">Предыдущий элемент процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.Clone">
            <summary>
            Создает копию экземпляра элемента бизнес-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchema">
            <summary>
            Схема бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.#ctor(System.Guid,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchema"/>, используя принимаемые параметры.
            </summary>
            <param name="schemaUId">Идентификатор схемы бизнес-процесса.</param>
            <param name="schemaName">Наименование схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Deserialize(System.String)">
            <summary>
            Производит десериализацию экземпляра <see cref="T:Terrasoft.Core.Process.FlowSchema"/> из заданного параметра.
            </summary>
            <param name="serializedValue">Строковое представление класса <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</param>
            <returns>Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет чтение свойств.
            </summary>
            <param name="dataReader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется вычитка свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет запись свойств.
            </summary>
            <param name="dataWriter">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется запись свойств.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Выполняет запуск обработки элементов бизнес-процесса.
            </summary>
            <param name="visitor">
            Экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, осуществляющий переход между элементами процесса.
            </param>
            <param name="previousFlowElement">Не используется.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindFlowElement(System.String)">
            <summary>
            Осуществляет поиск элемента бизнес-процесса по наименованию.
            </summary>
            <param name="name">Наименование элемента.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса, если элемент найден, 
            если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindFlowElement(System.Guid)">
            <summary>
            Осуществляет поиск элемента бизнес-процесса по идентификатору.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса, если элемент найден, 
            если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElement(System.String)">
            <summary>
            Осуществляет поиск элемента бизнес-процесса по наименованию.
            </summary>
            <param name="name">Наименование элемента.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса, если элемент найден, 
            если нет - генерирует исключение.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Генерируется, если элемент с именем <paramref name="name"/> не найден.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElement(System.Guid)">
            <summary>
            Осуществляет поиск элемента бизнес-процесса по идентификатору.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса, если элемент найден, 
            если нет - генерирует исключение.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Генерируется, если элемент с идентификатором <paramref name="uid"/> не найден.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Add(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Добавляет в схему элемент бизнес-процесса.
            </summary>
            <param name="flowElement">Элемент бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Add(Terrasoft.Core.Process.SequenceFlow)">
            <summary>
            Добавляет в схему соединения между элементами.
            </summary>
            <param name="sequenceFlow">Экземпляр соединения элементов.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElementInstance(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Создает экземпляр элемента бизнес-процесса на основе элемента схемы.
            </summary>
            <param name="flowElement">Экземпляра элемента бизнес-процесса.</param>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateFlowElement(System.String)">
            <summary>
            Создает элемент бизнес-процесса.
            </summary>
            <param name="bpmnElementName">BPMN наименование элемента.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateFlowElement(System.Guid,System.String,System.String)">
            <summary>
            Создает элемент бизнес-процесса.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <param name="name">Наименование элемента.</param>
            <param name="bpmnElementName">BPMN наименование элемента.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateSequenceFlow(System.Guid,System.String)">
            <summary>
            Создает экземпляр соединения между элементами.
            </summary>
            <param name="uid">Идентификатор соединения.</param>
            <param name="name">Наименование соединения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateConditionalSequenceFlow(System.Guid,System.String)">
            <summary>
            Создает экземпляр соединения между элементами c условием.
            </summary>
            <param name="uid">Идентификатор соединения.</param>
            <param name="name">Наименование соединения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/> соединения между элементами бизнес-процесса
            c условием.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlow(System.String)">
            <summary>
            Осуществляет поиск соединения между элементами бизнес-процесса по наименованию соединения.
            </summary>
            <param name="name">Наименование соединения.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса,
            если элемент найден, если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlow(System.Guid)">
            <summary>
            Осуществляет поиск соединения между элементами бизнес-процесса по идентификатору.
            </summary>
            <param name="uid">Идентификатор соединения.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса,
            если элемент найден, если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetSequenceFlow(System.Guid)">
            <summary>
            Осуществляет поиск соединения между элементами бизнес-процесса по идентификатору.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса,
            если элемент найден, если нет - возвращает <c>null</c>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Генерируется, если элемент с идентификатором <paramref name="uid"/> не найден.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlowsByTargetUId(System.Guid)">
            <summary>
            Осуществляет поиск соединения между элементами бизнес-процесса по идентификатору элемента, в который
            приходит соединение.
            </summary>
            <param name="targetFlowElementUId">Идентификатор элемента, в который приходит соединение.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса,
            если элемент найден, если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlowsBySourceUId(System.Guid)">
            <summary>
            Осуществляет поиск соединения между элементами бизнес-процесса по идентификатору элемента, из которого
            выходит соединение.
            </summary>
            <param name="sourceFlowElementUId">Идентификатор элемента, из которого выходит соединение.</param>
            <returns>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса,
            если элемент найден, если нет - возвращает <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Serialize">
            <summary>
            Сериализирует экземпляр данного класса.
            </summary>
            <returns>Возвращает строковое представление класса <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.SchemaId">
            <summary>
            Возвращает идентификатор схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.SequenceFlows">
            <summary>
            Возвращает набор соединений между элементами процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.FlowElements">
            <summary>
            Возвращает набор элементов процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.ParametersMapInfo">
            <summary>
            Таблица связей параметров процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchemaGenerator">
            <summary>
            Представляет генератор схемы процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowSchemaGenerator"/> с заданной схемой бизнес-процесса.
            </summary>
            <param name="processSchema">Схема бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.CreateProcessParameterMapInfo(System.String)">
            <summary>
            Создает экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>, представляющий информацию о привязки значения
            параметра к параметру бизнес-процесса.
            </summary>
            <param name="parameterMapPath">Строка фактического пути к параметру элемента или схемы бизнес-процесса.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetParameterMapData(System.String)">
            <summary>
            Формирует данные о привязках значения параметра к параметрам бизнес-процесса.
            </summary>
            <param name="schemaParameterValue">Значение параметра элемента или схемы бизнес-процесса.
            </param>
            <returns>Данные о привязках значения параметра к параметрам бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetIsProcessParameterBinding(System.Collections.Generic.LinkedList{Terrasoft.Core.Process.ProcessParameterMapInfo},System.String)">
            <summary>
            Определяет, что значение параметра устанавливается из другого параметра бизнес-процесса.
            </summary>
            <param name="parameterMapData">Данные о привязках значения параметра к параметрам бизнес-процесса.</param>
            <param name="parameterValue">Значение параметра бизнес-процесса.</param>
            <returns><c>true</c>, если значение параметра устанавливается из другого параметра бизнес-процесса;
            иначе — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.ConvertExpressionTextToCode(Terrasoft.Core.UserConnection,System.String,System.Collections.Generic.List{System.Action{Terrasoft.Core.UserConnection,System.Text.StringBuilder}})">
            <summary>
            Формирует строку кода на основе текста выражения.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="expressionText">Текст выражения.</param>
            <param name="expressionConvertors">Список функций, которые преобразуют текст выражений в исполняемый код.
            </param>
            <returns>Строка кода.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetCodeConvertionTemplateSysSettings(System.String,System.String)">
            <summary>
            Формирует строку кода вычисления значения системной настройки.
            </summary>
            <param name="valueTypeName">Имя типа значения системной настройки.</param>
            <param name="sysSettingsCode">Код системной настройки.</param>
            <returns>Строка кода.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.CreateProcessParameterInfo(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Создает экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> с данными параметра бизнес-процесса.
            </summary>
            <param name="schemaParameter">Параметр схемы бизнес-процесса.</param>
            <returns>Данные параметра бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.TryGetParameterMapPath(System.String,Terrasoft.Core.Process.ProcessParameterMapInfo@)">
            <summary>
            Парсит метапуть параметра и создает экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>, представляющий 
            информацию о привязке значения параметра к параметру бизнес-процесса.
            </summary>
            <param name="parameterMetaPath">Строка мета пути параметра в схеме бизнес-процесса.</param>
            <param name="mapPathInfo">Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>.</param>
            <returns>Возвращает <c>true</c> если мета путь успешно преобразован, иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetParametrizedSchemaElements">
            <summary>
            Возвращает элементы схемы бизнес-процесса, содержащие параметры.
            </summary>
            <returns>Список элементов схемы бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GenerateProcessParameterMappings">
            <summary>
            Создает таблицу связей параметров процесса.
            </summary>
            <returns>Таблица связей параметров процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.Generate">
            <summary>
            Создает схему процесса.
            </summary>
            <returns>Схема процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetProcessParameterPath(System.String,System.String)">
            <summary>
            Формирует строку фактического пути к параметру действия бизнес-процесса, который строится по заданному
            идентификатору параметра и идентификатору элемента бизнес-процесса.
            </summary>
            <param name="parameterUId">Идентификатор параметра схемы бизнес-процесса.</param>
            <param name="rootParameterPath">Путь к корневому параметру.</param>
            <returns>Строка пути к параметру самого параметра бизнес-процесса или к параметру его элемента.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetProcessParameterPath(System.Guid,System.Guid)">
            <summary>
            Формирует строку фактического пути к параметру действия бизнес-процесса, который строится по заданному
            идентификатору параметра и идентификатору элемента бизнес-процесса.
            </summary>
            <param name="parameterUId">Идентификатор параметра схемы бизнес-процесса.</param>
            <param name="schemaElementUId">Идентификатор элемента бизнес-процесса.</param>
            <returns>Строка пути к параметру элемента бизнес-процесса.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если идентификатор параметра <paramref name="parameterUId"/>
            или идентификатор элемента бизнес-процесса является пустым.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetProcessParameterPath(System.Guid)">
            <summary>
            Формирует строку фактического пути к параметру схемы бизнес-процесса, который строится по заданному
            идентификатору параметра.
            </summary>
            <param name="parameterUId">Идентификатор параметра схемы бизнес-процесса.</param>
            <returns>Строка пути к параметру схемы бизнес-процесса.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если идентификатор параметра <paramref name="parameterUId"/>
            является пустым.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.ConvertExpressionTextToCode(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Формирует строку кода на основе текста выражения.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="expressionText">Текст выражения.</param>
            <returns>Строка кода.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetClassNameProcessMethodsWrapper(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Возвращает имя класса, который является контейнером для методов схемы процесса.
            </summary>
            <param name="processSchema">Схема бизнес-процесса.</param>
            <returns>Имя класса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetScriptTaskMethodName(System.String)">
            <summary>
            Возвращает имя метода элемента бизнес-процесса "Задание сценарий".
            </summary>
            <param name="schemaElementName">Имя элемента бизнес-процесса "Задание сценарий".</param>
            <returns>Имя метода.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetProcessSchemaParameter(System.String)">
            <summary>
            Возвращает параметр схемы бизнес-процесса.
            </summary>
            <param name="parameterMapPath">Строка пути к параметру схемы бизнес-процесса.</param>
            <returns>Параметр схемы бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Возвращает параметр схемы бизнес-процесса.
            </summary>
            <param name="parameterMapInfo">Информация о привязке значения параметра к параметру бизнес-процесса.</param>
            <returns>Параметр схемы бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.GetParametrizedProcessSchemaElement(System.Guid)">
            <summary>
            Возвращает параметризованный элемент схемы бизнес-процесса.
            </summary>
            <param name="schemaElementUId">Идентификатор элемента схемы бизнес-процесса.</param>
            <returns>"Экземпляр элемента схемы бизнес-процесса, реализующий интерфейс
            <see cref="T:Terrasoft.Core.Process.IParametrizedProcessSchemaElement"/>. </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowService">
            <summary>
            Обработчик BPMN-диаграммы и исполнитель элементов бизнес-процессов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.#ctor(Terrasoft.Core.Process.IMessageQueueManagerItem,Terrasoft.Core.Process.IFlowSchemaStateService)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowService"/> с заданным элементом менеджера очередей сообщений.
            </summary>
            <param name="flowQueue">Элемент менеджера очередей сообщений.</param>
            <param name="flowSchemaStateService">Элемент управления данными процессов.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.SendCheckGatewayConditionsMessage(Terrasoft.Core.Process.FlowElement,System.Collections.Generic.LinkedList{Terrasoft.Core.Process.SequenceFlow},Terrasoft.Core.Process.ConditionEvalStrategy,System.Guid)">
            <summary>
            Помещает в очередь сообщение на вычисление выражений условных потоков.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.SendErrorMessage(System.Guid,Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.FlowElement,System.String)">
            <summary>
            Помещает в очередь сообщение о возникновении ошибки.
            </summary>
            <param name="processUId">Идентификатор процесса.</param>
            <param name="flowElement">Элемент процесса, на котором произошла ошибка.</param>
            <param name="previousFlowElement">Предыдущий элемент процесса.</param>
            <param name="errorMessage">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.Dispose">
            <summary>
            Освобождает ресурсы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowVisitorQueueItem">
            <summary>
            Представляет переходы между элементами бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitorQueueItem.FlowElement">
            <summary>
            Элемент бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitorQueueItem.PreviousFlowElement">
            <summary>
            Предыдущий элемент бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowVisitor">
            <summary>
            Отвечает за переход между элементами процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor(Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> с заданным хранилищем параметров бизнес-процесса.
            </summary>
            <param name="parameterStore">Хранилище параметров бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor(Terrasoft.Core.Process.IProcessParameterStore,Terrasoft.Core.Process.FlowService,System.Guid)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> с заданным хранилищем параметров бизнес-процесса
            и службой обмена сообщений.
            </summary>
            <param name="parameterStore">Хранилище параметров бизнес-процесса.</param>
            <param name="flowService">Служба обмена сообщений.</param>
            <param name="processUId">Идентификатор экземпляра процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Deserialize(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            Производит десериализацию экземпляра <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> из заданного сериализованного значения.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <param name="serializedValue">Строковое представление класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</param>
            <returns>Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Visit(Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Посещает элемент, указанный в параметре.
            </summary>
            <param name="flowElement">Экземпляр элемента бизнес-процесса.</param>
            <param name="previousFlowElement">Предыдущий экземпляр элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Visit(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement},Terrasoft.Core.Process.FlowElement)">
            <summary>
            Посещает элементы, указанные в параметрах.
            </summary>
            <param name="flowElements">Коллекция элементов бизнес-процесса.</param>
            <param name="previousFlowElement">Предыдущий экземпляр элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Serialize">
            <summary>
            Сериализирует экземпляр данного класса.
            </summary>
            <returns>Возвращает строковое представление класса <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitor.ProcessUId">
            <summary>
            Идентификатор экземпляра процесса, для которого используется данный посетитель.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.FlowVisitor.Visited">
            <summary>
            Событие генерируется, когда элемент посещен.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessValidationRule">
            <summary>
            Определяет сигнатуру методов валидации схемы бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.InterpretationValidator">
            <summary>
            Анализирует возможность выполнения процесса с помощью механизма интерпретации.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.InterpretationValidator.#cctor">
            <summary>
            Инициализирует набор валидаторов по умолчанию для класса <see cref="T:Terrasoft.Core.Process.InterpretationValidator"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.InterpretationValidator.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует пользовательские настройки.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.InterpretationValidator.Validate(Terrasoft.Core.Process.ProcessSchema,System.Collections.Generic.LinkedList{Terrasoft.Core.Process.ProcessValidationRule},System.Boolean)">
            <summary>
            Валидирует схему процесса на предмет возможности интерпретации и заполняет коллекцию ValidatorInfo 
            сообщениями об элементах, которые требуют компиляции, - если таковые были найдены.
            </summary>
            <param name="processSchema">Схема бизнес процесса.</param>
            <param name="validationRules">Цепочка функций валидации схем процесса на предмет интерпретации. Каждая 
            функция должна возвращать <c>true</c> в случае обнаружения неинтерпретируемого элемента.</param>
            <param name="checkAllRules">Признак, указывающий на необходимость проверить все правила валидации. Если
            равен <c>false</c> - прекращает валидацию на первом правиле, которое обнаружило неинтерпретируемый элемент.
            </param>
            <returns><c>true</c> - если все правила валидации успешно пройдены и </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.InterpretationValidator.SetupValidationRules(System.Collections.Generic.LinkedList{Terrasoft.Core.Process.ProcessValidationRule},System.Boolean)">
            <summary>
            Устанавливает коллекцию правил для валидации схем процессов.
            </summary>
            <param name="validationRules">Цепочка функций валидации схем процесса на предмет интерпретации. Каждая 
            функция должна возвращать <c>true</c> в случае обнаружения неинтерпретируемого элемента.</param>
            <param name="clearDefRules">Признак, указывающий на необходимость очистить стандартные правила валидации.
            Если равен <c>false</c> - то функции из параметра validatorsChain добавляются к стандартным правилам.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.InterpretationValidator.Validate(Terrasoft.Core.Process.ProcessSchema,System.Boolean)">
            <summary>
            Валидирует схему процесса на предмет возможности интерпретации и заполняет коллекцию ValidatorInfo 
            сообщениями об элементах, которые требуют компиляции, - если таковые были найдены.
            </summary>
            <param name="processSchema">Схема бизнес процесса.</param>
            <param name="checkAllRules">Признак, указывающий на необходимость проверить все правила валидации. Если
            равен <c>false</c> - прекращает валидацию на первом правиле, которое обнаружило неинтерпретируемый элемент.
            </param>
            <returns><c>true</c> - если все правила валидации успешно пройдены и </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IScriptSession">
            <summary>
            Интерфейс класса скрипта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Eval``1(System.String)">
            <summary>
            Выполняет выражение, возвращающее результат указанного типа данных.
            </summary>
            <typeparam name="T">Тип данных, который должно вернуть выражение.</typeparam>
            <param name="expression">Текст выражения.</param>
            <returns>Результат выполнения выражения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Eval(System.String)">
            <summary>
            Выполняет выражение, возвращающее результат типа <see cref="T:System.Object"/>.
            </summary>
            <param name="expression">Текст выражения.</param>
            <returns>Выполняет выражение, возвращающее результат типа <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.SetVariable(System.String,System.Object)">
            <summary>
            Устанавливает переменной с указанным именем переданное значение.
            </summary>
            <param name="name">Имя переменной.</param>
            <param name="value">Значение переменной.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.SetVariable(System.String,System.Object,System.Type)">
            <summary>
            Устанавливает переменной с указанным именем и типом переданное значение.
            </summary>
            <param name="name">Имя переменной.</param>
            <param name="value">Значение переменной.</param>
            <param name="type">Тип значения переменной.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.AddReference(System.Type)">
            <summary>
            Добавляет ссылку на тип, используемый в выражении.
            </summary>
            <param name="type">Тип.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Validate(System.String,System.Type,System.String@)">
            <summary>
            Проверяет корректность выражения и возвращает сообщение об ошибке.
            </summary>
            <param name="expression">Текст выражения.</param>
            <param name="resultType">Ожидаемый тип результата вычисления.</param>
            <param name="result">
            Строка с результатами проверки корректности выражения. Если выражение корректно, возвращается пустая строка.
            </param>
            <returns><с>true</с>, если выражение корректно; иначе - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterInfo">
            <summary>
            Представляет данные параметра бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.GetHashCode">
            <summary>
            Хэш-код для текущего экземпляра класса.
            </summary>
            <returns>Возвращает целочисленное значение хэш-кода для текущего экземпляра класса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.Equals(System.Object)">
            <summary>
            Сравнение текущего экземпляра класса с указанным.
            </summary>
            <param name="other">Экземпляр класса для сравнения <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/>.</param>
            <returns>
            Возвращает <c>true</c>, если экземпляры идентичны; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.Clone">
            <summary>
            Создает копию данных параметра бизнесс-процесса.
            </summary>
            <returns>Копия экземпляра <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> параметра бизнес-процесса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Value">
            <summary>
            Значение параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.DataValueTypeUId">
            <summary>
            Идентификатор типа значения параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Name">
            <summary>
            Имя параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Source">
            <summary>
            Тип источника значения параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialValue">
            <summary>
            Значение параметра на этапе инициализации схемы процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialSource">
            <summary>
            Тип источника значения параметра на этапе инициализации схемы процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.MustReadFromParameterStore">
            <summary>
            Флаг, указывающий на принудительное чтение текущего значения из хранилища данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.SubParameterMetaPathSet">
            <summary>
            Набор метапутей к компонентам основного параметра (например, идентификаторы колонок для параметра типа 
            <see cref="T:Terrasoft.Core.Entities.Entity"/>).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.ProcessParameterInfoPathes">
            <summary>
            Список пар ключ/значение, где ключ - путь к параметру, а значение - макрос параметра процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterMapInfo">
            <summary>
            Представляет информацию привязки значения параметра к параметру бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMapInfo.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> с заданным идентификатором параметра схемы
            бизнес-процесса.
            </summary>
            <param name="parameterUId">Идентификатор параметра схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMapInfo.#ctor(System.String,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> с заданным идентификатором параметра и
            элемента схемы бизнес-процесса.
            </summary>
            <param name="schemaElementUId">Идентификатор элемента схемы бизнес-процесса.</param>
            <param name="parameterUId">Идентификатор параметра схемы бизнес-процесса.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.ParameterUId">
            <summary>
            Идентификатор параметра схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.SchemaElementUId">
            <summary>
            Идентификатор элемента схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.MapPath">
            <summary>
            Строка пути к параметру элемента или схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.SubParameterMetaPath">
            <summary>
            Строка мета пути к параметру элемента или схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.ParameterMacros">
            <summary>
            Макрос параметра элемента или схемы бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParametersDataReader">
            <summary>
            Предоставляет методы для чтения значений параметров.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.#ctor(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataReader"/> с заданным списком
            параметров.
            </summary>
            <param name="schemaElementParameters"><see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterCollection"/>, из которого следует
            считывать значения параметров.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.#ctor(Terrasoft.Core.Process.ProcessSchemaParameterCollection,Terrasoft.Core.Process.ProcessParameterValueProvider)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataReader"/>.
            </summary>
            <param name="schemaElementParameters"><see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterCollection"/>, из которого следует
            считывать значения параметров.
            </param>
            <param name="valueProvider">
            Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/> - набора методов для получения значений
            параметров процесса.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.#ctor(System.Guid,Terrasoft.Core.Process.ProcessSchemaParameterCollection,Terrasoft.Core.Process.ProcessParameterValueProvider,System.Boolean)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataReader"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="schemaParameters"><see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterCollection"/>, из которого следует
            считывать значения параметров.</param>
            <param name="valueProvider">Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/> - набора методов для
            получения значений параметров процесса.</param>
            <param name="isReexecution">Флаг, указывающий на повторное выполнение элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.#ctor(System.Guid,System.Guid,Terrasoft.Core.Process.ProcessSchemaParameterCollection,Terrasoft.Core.Process.ProcessParameterValueProvider,System.Boolean)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataReader"/>.
            </summary>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="schemaElementUId">Идентификатор элемента схемы бизнес-процесса.</param>
            <param name="schemaParameters"><see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterCollection"/>, из которого следует
            считывать значения параметров.
            </param>
            <param name="valueProvider"> Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/> - набора методов для 
            получения значений параметров процесса.</param>
            <param name="isReexecution">Флаг, указывающий на повторное выполнение элемента.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessParametersDataReader._parameterStore">
            <summary>
            Хранилище параметров процесса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessParametersDataReader._currentName">
            <summary>
            Возвращает имя параметра.
            </summary>
            <value>
            Имя параметра.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.Read(System.String)">
            <summary>
            Перемещает текущую позицию в наборе данных к параметру с указанным именем.
            </summary>
            <returns>
            Имя текущего параметра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.Read(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Перемещает текущую позицию в наборе данных к указанному параметру.
            </summary>
            <returns>
            Имя текущего параметра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.Read">
            <summary>
            Перемещает текущую позицию в наборе данных к следующему параметру.
            </summary>
            <returns>
            Строка с именем параметра в позиции набора данных после выполнения метода либо 
            пустая строка, если достигнут конец набора данных.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.ReadInto">
            <summary>
            Возвращает имя типа набора данных.
            </summary>
            <returns>
            Строка с именем типа <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterCollection"/> набора данных.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.ReadOut">
            <summary>
            Возвращает пустую строку.
            </summary>
            <returns>
            Пустая строка. Чтобы получить имя следующего параметра, необходимо вызывать
            <see cref="M:Terrasoft.Common.DataReader.Read"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetStringValue">
            <summary>
            Возвращает строковое представление значения параметра, которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetGuidValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Guid"/>, соответствующий значению параметра, который находится
            в текущей позиции набора данных.
            </summary>
            <returns>
            Текущее значение параметра типа <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetIntValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Int32"/>, соответствующий значению параметра, который находится
            в текущей позиции набора данных.
            </summary>
            <returns>
            Текущее значение параметра типа <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetDoubleValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Double"/>, соответствующий значению параметра, который находится
            в текущей позиции набора данных.
            </summary>
            <returns>
            Текущее значение свойства/атрибута типа <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetDateTimeValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.DateTime"/>, соответствующий значению параметра, который находится
            в текущей позиции набора данных.
            </summary>
            <returns>
            Текущее значение параметра типа <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetBoolValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Boolean"/>, соответствующий значению параметра, который находится
            в текущей позиции набора данных.
            </summary>
            <returns>
            Текущее значение параметра типа <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetValue(System.Type)">
            <summary>
            Возвращает значение параметра в текущей позиции набора данных, преобразованное к заданному типу.
            </summary>
            <param name="valueType">Тип.</param>
            <returns>
            Текущее значение параметра, преобразованное к типу <paramref name="valueType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetValue``1">
            <summary>
            Возвращает значение конкретного типа параметра в текущей позиции набора данных, преобразовывая его
            к конкретному типу.
            </summary>
            <typeparam name="TValue">Значение любого типа.</typeparam>
            <returns>
            Преобразованное значение параметра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetLocalizableStringValue">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.Close">
            <summary>
            Освобождает ресурсы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.ReadNextCollectionItem">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetStreamValue">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetStreamValue(System.IO.Stream)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetEnumValue``1">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetValue(Terrasoft.Common.DataConverter)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetSerialazebleObjectValue(System.Type)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetSerializableObjectValue">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataReader.GetSerializableObjectValue``1">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParametersDataReader.CurrentValue">
            <summary>
            Возвращает текущее значение параметра.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessComponentSetStrategy">
            <summary>
            Представляет семейство алгоритмов, которые переопределяют поведение экземпляра.
            <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.CompleteProcess">
            <summary>
            Алгоритм завершения бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.ForceGetFlowElementInstance">
            <summary>
            Алгоритм получения экземпляра элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.ProcessComponentSetCreator">
            <summary>
            Алгоритм создания набора компонентов бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.GetAssembly">
            <summary>
            Алгоритм получения сборки, которая является модулем с возможностью многократного использования, поддержкой
            версий и встроенным механизмом описания общеязыковой исполняющей среды.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.GetNamespaceName">
            <summary>
            Алгоритм получения названия пространства имен, в котором определен тип реализующий интерфейс
            <see cref="T:Terrasoft.Core.Process.IProcessModel"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParametersDataWriterSettings">
            <summary>
            Предоставляет настройки для класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParametersDataWriter">
            <summary>
            Представляет методы для последовательной записи значений параметров бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,Terrasoft.Core.Process.ProcessSchemaParameterCollection,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/>.
            </summary>
            <param name="settings">Настройки для нового экземпляра <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriterSettings"/>.
            </param>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="schemaElementParameters">Список параметров элемента бизнес-процесса.</param>
            <param name="processParameterStore">Хранилище параметров процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Guid,Terrasoft.Core.Process.ProcessSchemaParameterCollection,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/>.
            </summary>
            <param name="settings">Настройки для нового экземпляра <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriterSettings"/>.
            </param>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="schemaElementUId">Идентификатор элемента бизнес-процесса.</param>
            <param name="schemaElementParameters">Список параметров элемента бизнес-процесса.</param>
            <param name="processParameterStore">Хранилище параметров процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteTypedValue(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения параметра с заданными именем, типом и значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="type">Тип значения параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Object"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(Terrasoft.Core.Process.ProcessSchemaParameter,Terrasoft.Core.Process.ProcessParametersDataReader)">
            <summary>
            Осуществляет запись значения для заданного параметра.
            </summary>
            <param name="schemaParameter">Параметр процесса.</param>
            <param name="dataReader">Объект для чтения данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.Close">
            <summary>
            Освобождает ресурсы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.String,System.String)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.String"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.String"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Guid"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Guid"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Int32"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Int32"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Decimal"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Decimal"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Double,System.Double)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Double"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Double"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Enum"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Enum"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.DateTime"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.DateTime"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Boolean"/> для параметра с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:System.Boolean"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Осуществляет запись значения типа <see cref="T:Terrasoft.Common.LocalizableString"/> для параметра с
            заданными именем и значением по умолчанию.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <param name="defValue">Значение по умолчанию для параметра.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения заданного типа для свойства с заданными именем и значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="valueType">Тип значения.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <exception cref="T:System.ArgumentNullException">При передаче в качестве параметров <paramref name="name"/> и 
            <paramref name="value"/> пустого значения либо <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">При попытке преобразовать значение
            свойства <paramref name="name"/> в недопустимый тип данных <paramref name="valueType"/>.</exception>
            <remarks>Метод записывает в поток вывода значения тех типов, для которых поддерживает маппинг параметров
            бихнесс процесса; все остальные типы - игнорируются.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.Object[])">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartObject">
            <summary>
            Метод не используется.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartObject(System.String)">
            <summary>
            Начинает запись составного параметра с заданным именем в поток вывода.
            </summary>
            <param name="name">Имя параметра.</param>
            <remarks>Метод записывает в поток вывода имя составного объекта, относительно которого все последующие 
            параметры будут записаны в хранилище значений с путем, составленным из идентификатора основного объекта и 
            уникального идентификатора параметра - вплоть до следующего вызова метода WriteFinishObject.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteFinishObject">
            <summary>
            Завершает запись составного параметра.
            </summary>
            <remarks>
            Метод прекращает запись текущего составного параметра; если по уровню вложенности имеется составной
            параметр, являющийся "родительским" для текущего - он становится вновь основным для последующих записываемых
            в хранилище параметров, иначе - будет продолжаться запись в хранилище в обычном режиме (без вложенности).
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartCollection(System.String)">
            <summary>
            Метод не используется.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteFinishCollection">
            <summary>
            Метод не используется.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterValueProvider">
            <summary>
            Представляет семейство алгоритмов, которые переопределяют поведение экземпляра
            <see cref="T:Terrasoft.Core.Process.ProcessParametersDataReader"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/> с заданным пользовательским
            соединением.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.Process.IProcessParameterStore,Terrasoft.Core.Process.FlowSchemaGenerator)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processUId">Идентификатор бизнес-процесса.</param>
            <param name="parameterStore">Хранилище параметров процесса.</param>
            <param name="flowSchemaGenerator">Генератор схемы бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.ValidateExpression(System.String,System.Type)">
            <summary>
            Проверяет корректность выражения.
            </summary>
            <param name="expressionText">Текст выражения.</param>
            <param name="resultType">Ожидаемый тип результата вычисления.</param>
            <returns><c>true</c>, если выражение корректное; в противном случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetNoneEmptySysSettingsValue(System.String,System.Type)">
            <summary>
            Получает значение существующей системной настройки и контролирует, что значение заполнено.
            </summary>
            <param name="code">Код системной настройки.</param>
            <param name="type">Тип системной настройки.</param>
            <returns>Значение системной настройки.</returns>
            <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
            Генерируется, если системная настройка с кодом <paramref name="code"/> не заполнена.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.EvalExpression``1(System.String)">
            <summary>
            Вычисляет выражение и возвращает значение c указанным типом.
            </summary>
            <param name="expressionText">Текст выражения.</param>
            <returns>Результат выполнения выражения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.EvalExpression(System.String)">
            <summary>
            Вычисляет выражение и возвращает значение c типом <see cref="T:System.Object"/>.
            </summary>
            <param name="expressionText">Текст выражения.</param>
            <returns>Результат выполнения выражения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetParameterValue(Terrasoft.Core.Process.ProcessParameterMapInfo,System.Boolean)">
            <summary>
            Возвращает значение параметра процесса.
            </summary>
            <param name="parameterMapInfo">Информация о привязке значения параметра к параметру бизнес-процесса.</param>
            <param name="isReexecution">Флаг, указывающий на повторное выполнение элемента.</param>
            <returns>Значение параметра процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter,System.Guid,System.Boolean)">
            <summary>
            Возвращает значение параметра процесса.
            </summary>
            <param name="schemaParameter">Параметр схемы бизнес-процесса.</param>
            <param name="schemaElementUId">Идентификатор элемента схемы бизнес-процесса.</param>
            <param name="isReexecution">Флаг, указывающий на повторное выполнение элемента.</param>
            <returns>Значение параметра процесса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ProcessParameterStore">
            <summary>
            Хранилище параметров процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.GetSysSettingsValue">
            <summary>
            Функция получения системных настроек.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.GetSysVariableValue">
            <summary>
            Функция получения системных переменных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.CreateEntity">
            <summary>
            Функция получения объекта справочника, на который ссылается параметр процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ConvertExpressionTextToCode">
            <summary>
            Функция преобразование текста выражения в строку кода.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ScriptSession">
            <summary>
            Сервис, осуществляющий выполнение выражения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessModel">
            <summary>
            Представляет доступ к значениям параметров экземпляра процесса и методов элементов бизнес-процесса
            "Задание сценарий".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessModel.GetScriptTaskMethod(System.String)">
            <summary>
            Возвращает ссылку на экземпляр метода элемента бизнес-процесса "Задание сценарий" по его имени.
            </summary>
            <param name="methodName">Имя метода.</param>
            <returns>Делегат c определенной сигнатурой метода.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessServiceProvider">
            <summary>
            Представляет класс, ответственный за инициализацию всех компонентов системы исполнения бизнесс-процессов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.Subscribe(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Подписывается на событие выполнения элемента бизнес-процесса для отправки результата в очередь сообщений.
            </summary>
            <param name="processComponentSet">Набор компонентов бизнес-процессв.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.GetInstance">
            <summary>
            Инициализирует единый для приложения экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.StartServices(System.Func{System.String,Terrasoft.Core.UserConnection})">
            <summary>
            Запускает все необходимые службы для выполнения процессов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.StopServices">
            <summary>
            Останавливает запущенные службы и освобождает ресурсы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.CreateProcessComponentSet(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Создает набор компонентов на основе схемы процесса и подготавливает его к работе с очередью сообщений.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schema">Cхема процесса.</param>
            <returns>Набор компонентов процесса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessServiceProvider.FlowEngineStateService">
            <summary>
            Сервис состояния.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessServiceProvider.TaskQueueManager">
            <summary>
            Экземпляр очереди для сервиса выполнения элементов процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.QueueEmulator">
            <summary>
            Представляет класс, который имитирует работу очереди.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulator.Dispose">
            <summary>
            Освобождает ресурсы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.FlowEngineInstance">
            <summary>
            Инициализирует и возвращает экземпляр <see cref="T:Terrasoft.Core.Process.QueueEmulatorItem"/>
            для общения с очередью на стороне исполнения схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.TaskExecutorInstance">
            <summary>
            Инициализирует и возвращает экземпляр <see cref="T:Terrasoft.Core.Process.QueueEmulatorItem"/>
            для общения с очередью на стороне исполнения задач бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.IsExternalQueue">
            <summary>
            Признак того, что очередь служит для встроенного режима обработки бизнес-процессов.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowEngine">
            <summary>
            Представляет класс, который инициирует запуск бизнес-процесса и инициализирует все необходимые
            компоненты для его выполнения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessComponentSetStrategy)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowEngine"/> с заданным пользовательским соединением и настройками.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processComponentSetStrategy">Перечень алгоритмов, которые переопределяют поведение экземпляра
            <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.FlowEngine"/> с заданным пользовательским соединением.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.GenerateAndSaveFlowSchema(Terrasoft.Core.Process.ProcessSchema)">
            <summary> 
            Создает, инициализирует и сохраняет в хранилище схему процесса на основе класса.
            <see cref="T:Terrasoft.Core.Process.ProcessSchema"/>.
            </summary>
            <param name="processSchema">Экземпляр класса <see cref="T:Terrasoft.Core.Process.ProcessSchema"/></param>
            <returns>Схема бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.EnqueueProcess(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Помещает в очередь сообщение на запуск бизнес-процесса.
            </summary>
            <param name="processComponentSet">Экземпляра схемы бизнес-процесса.</param>
            <returns>Набор компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.InitializeProcess(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Выполняет инициализацию данных процесса перед его запуском.
            </summary>
            <param name="processComponentSet">Набор компонентов процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunSubProcess(Terrasoft.Core.Process.Process)">
            <summary>
            Осуществляет запуск под-процесса.
            </summary>
            <param name="process">Экземпляр под-процесса.</param>
            <returns>Дескриптор процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.CreateProcessComponentSet(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> с заданной схемой процесса.
            </summary>
            <param name="processSchema">Схема процесса.</param>
            <returns>Набор компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.ProcessSchema,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Осуществляет запуск бизнес-процесса.
            </summary>
            <param name="schema">Схема бизнес-процесса.</param>
            <param name="nameValueMap">Значения параметров, полученных из адресной строки.</param>
            <returns>Дескриптор процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.ProcessSchema,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Осуществляет запуск бизнес-процесса.
            </summary>
            <param name="schema">Схема бизнес-процесса.</param>
            <param name="nameValueMap">Значения параметров.</param>
            <returns>Дескриптор процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.ProcessComponentSet,System.Guid,System.Guid)">
            <summary>
            Осуществляет запуск бизнес-процесса.
            </summary>
            <param name="processComponentSet">Набор компонентов процесса.</param>
            <param name="startSignalUId">Идентификатор стартового сигнала.</param>
            <param name="entityId">Идентификатор сущности.</param>
            <returns>Дескриптор процесса.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessComponentSet">
            <summary>
            Представляет набор компонентов процесса, которые необходимы для его выполнения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WriteErrorToProcessLog(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Переводит состояние элемента и его процесса в ошибку.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="errorMessage">Сообщение об ошибке.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsRegisteredElementInLog">
            <summary>
            Определяет, выполнялась ли регистрация элемента в журнале.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessActivity._processParametersDataWriterSettings">
            <summary>
            Представляет настройки для класса <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ConvertToProcessDataSourceFilters(System.Guid,System.String)">
            <summary>
            Конвертирует набор фильтров в формат процесса.
            </summary>
            <param name="entitySchemaUId">Идентификатор схемы объекта.</param>
            <param name="dataSourceFilters">Набор фильтров.</param>
            <returns>Набор фильтров в формате процесса.</returns>
        </member>
        <member name="F:Terrasoft.Core.Process.Process._processSchema">
            <summary>
            Схема бизнес-процесса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.Process._parameterValueProvider">
            <summary>
            Семейство алгоритмов, которые используются для получения значений параметров бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ForceGetProcessFlowElement(System.String)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.RemoveCurrentActiveProcess">
            <summary>
            Removes current active entity process from RequestData store.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InitializeFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Метод не реализован. Перегружается в наследниках.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Execute(Terrasoft.Core.Process.ProcessFlowElement,System.Object[])">
            <summary>
            Повторное выполнение элемента бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValueByMetaPath(System.String)">
            <summary>
            Возвращает значение параметра процесса по метапути.
            </summary>
            <param name="metaPath">Метапуть параметра процесса.</param>
            <returns>Текущее значение параметра.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FindFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента по заданному идентификатору схемы.
            </summary>
            <param name="schemaElementUId">Идентификатор схемы элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Возвращает элемент с заданными идентификатором в схеме процесса.
            Если такой элемент не найден, генерируется исключение.
            </summary>
            <param name="schemaElementUId">Идентификатор схемы элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetFlowElementsByShemaElementUId(System.Guid)">
            <summary>
            Возвращает перечислитель элементов с заданными идентификатором схемы.
            </summary>
            <param name="schemaElementUId">Идентификатор схемы элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.Process.ProcessComponentSetStrategy,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> с заданным пользовательским соединением,
            схемой процесса и поведением.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processSchema">Схема процесса.</param>
            <param name="processComponentSetStrategy">Перечень алгоритмов, которые переопределяют поведение экземпляра
            <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.</param>
            <param name="processParameterStore">Хранилище параметров процесса</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> с заданным пользовательским соединением и
            схемой процесса.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processSchema">Схема процесса.</param>
            <param name="processParameterStore">Хранилище параметров процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ForceGetProcessFlowElement(System.String)">
            <summary>
            Возвращает экземпляр элемента процесса. Если элемент не проинициализирован, то предварительно выполняет его
            инициализацию.
            </summary>
            <param name="schemaFlowElementName">Имя элемента схемы бизнес-процесса.</param>
            <returns>Экземпляр элемента бизнес-процесса <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Register">
            <summary>
            Осуществляет регистрацию набора компонентов процесса в БД.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(System.String,System.Guid)">
            <summary>
            Выполняет элемент бизнес-процесса.
            </summary>
            <param name="flowElementName">Имя элемента бизнес-процесса.</param>
            <param name="entityId">Идентификатор сущности.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeProcessComponentSetParameters(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Инициализирует пользовательский набор параметров и устанавливает значения.
            </summary>
            <param name="parameterNameValueMap">Набор параметров и их значений.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeProcessComponentSetParameters(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Выполняет инициализизацию значений параметров набора компонентов процесса.
            </summary>
            <param name="parameterNameValueMap">Набор параметров и их значений.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeProcessComponentSetParameters(Terrasoft.Core.Process.Process)">
            <summary>
            Выполняет инициализизацию значений параметров под-процесса.
            </summary>
            <param name="process">Экземпляр под-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Копирует свойства из processFlowElemnt в текущий экземпляр класса
            </summary>
            <param name="processFlowElement"></param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Restore(System.String,Terrasoft.Core.UserConnection)">
            <summary>
            Осуществляет восстановление набора компонентов процесса на основе сериализированных значений свойств.
            </summary>
            <param name="serializedPropertiesData">Сериализированный набор компонентов процесса.</param>
            <param name="userConnection">Пользовательское соединение для доступа к данным в БД.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> - набора компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(Terrasoft.Core.Process.ProcessFlowElement,System.Object[])">
            <summary>
            Повторное выполнение элемента бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Осуществляет запись свойств текущего набора компонентов процесса с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            свойства.</param>
            <param name="shouldWriteFlowElements">Признак, указывающий на необходимость записать свойства элементов
            бизнес-процесса.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CloneShallow">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>, являющийся клоном текущего набора компонентов
            процесса.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> - клон текущего набора компонентов процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Выполняет чтение свойств элемента бизнес-процесса из хранилища параметров.
            </summary>
            <param name="flowElement">Экземпляр элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.GetParameterValueByMetaPath(System.String)">
            <summary>
            Возвращает значение параметра процесса по метапути.
            </summary>
            <param name="metaPath">Метапуть параметра процесса.</param>
            <returns>Текущее значение параметра.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(System.String)">
            <summary>
            Выполняет элемент бизнес-процесса.
            </summary>
            <param name="flowElementName">Имя элемента бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Equals(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Выполняет сравнение двух экземпляров <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.
            </summary>
            <param name="other">Экземпляр <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> с которым будим сравнивать.</param>
            <returns>Возвращает true если содержимое экземпляров идентично и false в обратном случае. </returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSet.FlowSchemaUId">
            <summary>
            Идентификатор схемы процесса, в соответсвие с которой работает данный набор компонентов процесса.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.ProcessComponentSet.ProcessFlowElementExecuted">
            <summary>
            Событие, возникающее после успешного выполнения элемента бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.MessageQueueManager">
            <summary>
            Класс очереди, реализующей интерфейс <see cref="T:Terrasoft.Core.Process.IMessageQueueManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.MessageQueueManager.Create">
            <summary>
            Возвращает экземпляр очереди, тип которой задан параметром <c>MsgQueueTypeName</c> конфигурационного файла.
            </summary>
            <returns>Экземпляр класса очереди, который реализует интерфейс <see cref="T:Terrasoft.Core.Process.IMessageQueueManager"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGeneratorNew.WriteProcessMethodsWrapper(Terrasoft.Core.CodeGeneration.GeneratorContext,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Осуществляет генерацию исходного кода для методов и элементов бизнес-процесса "Задание сценарий".
            </summary>
            <param name="context">Контекст генератора исходного кода.</param>
            <param name="processSchema">Схема бизнес-процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Создает экземпляр элемента бизнес-процесса.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.FlowElement"/> элемента бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaBaseElement.BpmnElementName">
            <summary>
            Возвращает BPMN наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaBaseElement.IsSequenceFlow">
            <summary>
            Признак, который определяет, что элемент схемы бизнес-процесса является соединением.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IParametrizedProcessSchemaElement.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.IParametrizedProcessSchemaElement.BpmnElementName">
            <summary>
            Возвращает BPMN наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.QueueEmulatorItem">
            <summary>
            Представляет класс, который реализует возможность общения с имитируемой очередью.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.#ctor(System.Action{Terrasoft.Core.Process.TaskServiceQueueItem})">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/> с заданным алгоритмом отправки сообщений.
            </summary>
            <param name="sendMessageDel">Алгоритм, реализующий отправку сообщения.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.InvokeMessage(Terrasoft.Core.Process.TaskServiceQueueItem)">
            <summary>
            Имитирует приходящее сообщение из очереди.
            </summary>
            <param name="message">Сообщение <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/></param>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.Dispose">
            <summary>
            Освобождает ресурсы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.Send(Terrasoft.Core.Process.TaskServiceQueueItem,System.Byte)">
            <summary>
            Выполняет отправку сообщения.
            </summary>
            <param name="message">Сообщение <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/>.</param>
            <param name="priority">
            Приоритет отправки сообщения. Значение по умолчанию - 0 (приоритет не используется).
            </param>
        </member>
        <member name="E:Terrasoft.Core.Process.QueueEmulatorItem.Error">
            <summary>
            Событие генерируется в результате возникновения ошибки при отправке или получении сообщения.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.QueueEmulatorItem.ReceiveMessage">
            <summary>
            Событие, возникающее при получении нового сообщения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterInfoComposer">
            <summary>
            Представляет интерфейс, ответственный за коррекцию таблицы связей процесса в случае, когда его схема была
            изменена после запуска.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfoComposer.#ctor(Terrasoft.Core.Process.IProcessComponentSetStateService)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/>.
            <param name="processComponentStateService">Сервис состояния параметров процесса.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfoComposer.GetComposedParameterMappings(System.Guid,System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Выполняет слияние таблицы связей запущенного процесса с указанным шаблонным набором связей параметров.
            </summary>
            <param name="processUId">Идентификатор процесса.</param>
            <param name="parameterMappings">Таблица связей параметров схемы процесса.</param>
            <returns>Объединенную таблицу связей с дополнениями из шаблона и изменениями, внесенными в ходе исполнения
            процесса. </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ScriptEngine">
            <summary>
            Класс, реализующий создание сессии для выполнения выражений.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ScriptEngine.CreateSession">
            <summary>
            Возвращает экземпляр сессии для выполнения выражений.
            </summary>
            <returns>Экземпляр сессии для выполнения выражений.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Если <see cref="T:Terrasoft.Core.Factories.ClassFactory"/> не смог получить
            экземпляр класса по интерфейсу <see cref="T:Terrasoft.Core.Process.IScriptSession"/>.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Process.ScriptEngine.ReplaceCreateSessionDelegate">
            <summary>
            Алгоритм замещающий создание сессии выполнения формул.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskService">
            <summary>
            Представляет сервис для выполнения компонентов процесса, которые требуют доступа к данным и взаимодействия с
            пользователем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskService.#ctor(Terrasoft.Core.Process.IMessageQueueManagerItem,Terrasoft.Core.Process.TaskServiceSettings)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Process.TaskService"/> с заданным элементом менеджера очередей сообщений и
            настройками.
            </summary>
            <param name="messageQueueManagerItem">Элемент менеджера очередей сообщений.</param>
            <param name="taskServiceSettings">Настройки сервиса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskService.Subscribe(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Подписывается на событие выполнения элемента бизнес-процесса для отправки результата в очередь сообщений.
            </summary>
            <param name="processComponentSet">
            Набор компонентов запущенного процесса, элемент которого будет выполнен.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Process.ConditionEvalStrategy">
            <summary>
            Стратегия вычисления набора условных потоков для Gateway элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ConditionEvalStrategy.Exclusive">
            <summary>Группу формул в наборе условных потокох вычислять до первого положительного результата.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ConditionEvalStrategy.Inclusive">
            <summary>Вычислять все формулы в наборе условных потоков.</summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceQueueItemType">
            <summary>
            Тип сообщений для служб выполнения бизнес-процессов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Start">
            <summary>Стартовый элемент.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Terminate">
            <summary>Завершающий элемент.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Execute">
            <summary>Исполняемый элемент.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Completed">
            <summary>Элемент выполнен.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Failed">
            <summary>Элемент выполнился с ошибкой.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.CheckGatewayConditions">
            <summary>Вычисление выражений условных потоков.</summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceQueueItem">
            <summary>
            Представляет элемент очереди для общения с сервисом выполнения задач бизнес-процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskServiceQueueItem.Serialize(Terrasoft.Core.Process.TaskServiceQueueItem)">
            <summary>
            Сериализация элемента очереди в JSON формат.
            </summary>
            <param name="taskServiceQueueItem">Экземпляр элемента очереди.</param>
            <returns>Возвращает экземпляр элемента очереди в формате JSON.</returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">
            Если передаваемый параметр <paramref name="taskServiceQueueItem"/> равен <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskServiceQueueItem.Deserialize(System.String)">
            <summary>
            Десериализация элемента очереди из JSON формата.
            </summary>
            <param name="taskServiceQueueItemString">Экземпляр элемента очереди в формате JSON.</param>
            <returns>Возвращает экземпляр элемента очереди <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/>.</returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">
            Если передаваемый параметр <paramref name="taskServiceQueueItemString"/> пустой или <c>null</c>.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            Если передаваемый параметр <paramref name="taskServiceQueueItemString"/> содержит некорректный JSON формат.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskServiceQueueItem.GetHashCode">
            <summary>
            Хэш-код для текущего экземпляра элемента очереди.
            </summary>
            <returns>Возвращает целочисленное значение хэш-кода для текущего экземпляра элемента очереди.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskServiceQueueItem.Equals(System.Object)">
            <summary>
            Сравнение текущего элемента очереди с указанным в параметре.
            </summary>
            <param name="obj">Экземпляр элемента очереди <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/>.</param>
            <returns>
            Возвращает <c>true</c>, если экземпляры идентичны; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Result">
            <summary>
            Результат выполнения задачи.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.UId">
            <summary>
            Идентификатор бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.SchemaId">
            <summary>
            Идентификатор схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowElementUId">
            <summary>
            Идентификатор элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.PreviousFlowElementUId">
            <summary>
            Идентификатор предыдущего элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowElementName">
            <summary>
            Наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.GatewayConditions">
            <summary>
            Данные выражений условных потоков.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Type">
            <summary>
            Тип пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Body">
            <summary>
            Переменная, содержащая десериализованные данные схемы бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.ErrorMessage">
            <summary>
            Описание ошибки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowSchema">
            <summary>
            Схема бизнес-процесса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceSettings">
            <summary>
            Представляет настройки, которые необходимы для создания экземпляра <see cref="T:Terrasoft.Core.Process.TaskService"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceSettings.FlowEngineStateService">
            <summary>
            Сервис состояний.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysExtServiceOperationRightSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysExtServiceOperationRight">
            <summary>
            Администрирование по операциям для внешних сервисов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.SysAdminUnitId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.SysAdminUnitName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanRead">
            <summary>
            Чтение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanAppend">
            <summary>
            Добавление.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanEdit">
            <summary>
            Изменение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanDelete">
            <summary>
            Удаление.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.Position">
            <summary>
            Позиция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysLookup">
            <summary>
            Справочник.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.IsSystem">
            <summary>
            Системный.
            </summary>
            <remarks>
            Важный системный справочник, участвующий в бизнес-процессах. Изменение запрещено.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.IsSimple">
            <summary>
            Простой.
            </summary>
            <remarks>
            Простой справочник с небольшим количеством записей. Кешируется.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysEditPageSchemaUId">
            <summary>
            Уникальный идентификатор страницы редактирования.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysGridPageSchemaUId">
            <summary>
            Уникальный идентификатор страницы реестра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysEntitySchemaUId">
            <summary>
            Уникальный идентификатор объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackage.IsContentChanged">
            <summary>
            Признак, определяющий, было ли изменено содержимое пакета.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageDependency.DependOnPackageVersion">
            <summary>
            Версия пакета, от которого зависит текущий.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementLogSchema">
            <summary>
            Схема объекта "Журнал элементов процессов".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementLog">
            <summary>
            Журнал элементов процессов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._sysProcess">
            <summary>
            Процесс.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._status">
            <summary>
            Состояние.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._owner">
            <summary>
            Ответственный.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.SchemaElementUId">
            <summary>
            Элемент схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.StartDate">
            <summary>
            Дата начала.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.CompleteDate">
            <summary>
            Дата завершения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInMinutes">
            <summary>
            Длительность, минут.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInHours">
            <summary>
            Длительность, часов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInDays">
            <summary>
            Длительность, дней.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.Type">
            <summary>
            Тип.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.Caption">
            <summary>
            Подпись.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.ErrorDescription">
            <summary>
            Описание ошибки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessLogSchema">
            <summary>
            Схема объекта "Журнал процессов".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessLog">
            <summary>
            Журнал процессов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessLog._parent">
            <summary>
            Родитель.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessLog._status">
            <summary>
            Состояние процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Name">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.StartDate">
            <summary>
            Дата начала.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.CompleteDate">
            <summary>
            Дата завершения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Owner">
            <summary>
            Ответственный.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspaceId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspaceName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspace">
            <summary>
            Рабочее пространство.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInMinutes">
            <summary>
            Длительность, минут.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInHours">
            <summary>
            Длительность, часов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInDays">
            <summary>
            Длительность, дней.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSyncMetaDataSchema">
            <summary>
            Схема объекта "SysSyncMetaData".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.SyncSchemaName">
            <summary>
            Имя EntitySchema-ы в которой хранится связаный элемент </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteItemName">
            <summary>
            Имя типа элемента синхронизации из внешнего хранилища </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteId">
            <summary>
            Идентификатор элемента во внешнем хранилище </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.LocalId">
            <summary>
            Идентификатор элемента BPMonline </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteStoreId">
            <summary>
            идентификатор внешнего хранилища с которым был синхронизирован элемент </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.IsLocalDeleted">
            <summary>
            Указывает, удален ли элемент из локального хранилища с времени последней синхронизации.
            Устарел, использовать LocalState</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.IsRemoteDeleted">
            <summary>
            Указывает, удален ли элемент из внешнего хранилища с времени последней синхронизации 
            Устарел, использовать RemoteState</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.ModifiedInStoreId">
            <summary>
            Идентификатор хранилища в котором выполнено последнее изменение </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.Version">
            <summary>
            Версия последнего выполненного изменения элемента (дата модификации) </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.CreatedInStoreId">
            <summary>
            Идентификатор хранилища в котором создан элемент синхронизации </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.ExtraParameters">
            <summary> 
            Дополнительные данные в метаданных определеные пользователем </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.SchemaOrder">
            <summary>
            Порядковый номер применения изменений в BPMonline </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.LocalState">
            <summary>
            LocalState.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteState">
            <summary>
            RemoteState.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.VwSysPackageDependencies._package">
            <summary>
            Пакет.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.VwSysPackageDependencies._dependOnPackage">
            <summary>
            Зависит от пакета.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.None">
            <summary>
            Табличное указание не задано/не определено.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.ForceSeek">
            <summary>
            Табличное указание "Использовать поиск в индексе".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.NoLock">
            <summary>
            Табличное указание "Чтение недействительных результатов".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.Index">
            <summary>
            Табличное указание "Использовать индекс".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.RowLock">
            <summary>
            Табличное указание "Блокировка по записям".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.BaseHint">
            <summary>
            Базовый класс табличного указания.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.BaseHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса табличного указания.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.BaseHint.Clone">
            <summary>
            Создает клон текущего экземпляра.
            </summary>
            <returns>Новый экземпляр, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.BaseHint.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.ForceSeekHint">
            <summary>
            Класс табличного указания "Использовать поиск в индексе".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ForceSeekHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса табличного указания.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ForceSeekHint.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.ForceSeekHint"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.ForceSeekHint"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.ForceSeekHint.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.NoLockHint">
            <summary>
            Класс табличного указания "Чтение недействительных результатов".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.NoLockHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса табличного указания.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.NoLockHint.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.NoLockHint"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.NoLockHint"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.NoLockHint.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.RowLockHint">
            <summary>
            Класс табличного указания "Блокировка по записям".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.RowLockHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса табличного указания.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.RowLockHint.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.RowLockHint"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.RowLockHint"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.RowLockHint.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IndexHint">
            <summary>
            Класс табличного указания "Использовать индекс".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor(Terrasoft.Core.DB.IndexHint)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.BaseHint"/>, являющийся клоном переданного табличного указания.
            </summary>
            <param name="hint">Экземпляр класса <see cref="T:Terrasoft.Core.DB.BaseHint"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
            <param name="name">Название индекса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса табличного указания.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.IndexHint"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.HintType">
            <summary>
            Тип табличного указания.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.SourceAlias">
            <summary>
            Псевдоним источика.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.IndexName">
            <summary>
            Название индекса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.WithHints(Terrasoft.Core.DB.Delete,Terrasoft.Core.DB.BaseHint[])">
            <summary>
            Добавляет табличные указания в текущий запрос удаления данных.
            </summary>
            <param name="source">Запрос на удаление данных.</param>
            <param name="hints">Перечисление табличных указаний.</param>
            <returns>Текущий запрос удаления.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.WithHints(Terrasoft.Core.DB.Update,Terrasoft.Core.DB.BaseHint[])">
            <summary>
            Добавляет табличные указания в текущий запрос обновления данных.
            </summary>
            <param name="source">Запрос обновления данных.</param>
            <param name="hints">Перечисление табличных указаний.</param>
            <returns>Запрос обновления данных.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.SpecifyNoLockHints(Terrasoft.Core.DB.Select,System.Boolean)">
            <summary>
            Добавляет табличное указание <see cref="F:Terrasoft.Core.DB.HintType.NoLock"/> в текущий запрос.
            </summary>
            <param name="source">Запрос на выборку.</param>
            <param name="useHint">Признак, определяющий, применять ли табличное указание при выполнении запроса.
            Необязательный параметр, по умолчанию - <c>true</c>.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.Hints">
            <summary>
            Класс табличных указаний.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Hints.Index(System.String)">
            <summary>
            Создает объект табличного указания "Использовать индекс".
            </summary>
            <param name="name">Имя индекса.</param>
            <returns>Табличное указание "Использовать индекс".</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.ForceSeek">
            <summary>
            Табличное указание "Использовать поиск в индексе".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.NoLock">
            <summary>
            Табличное указание "Чтение недействительных результатов".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.RowLock">
            <summary>
            Табличное указание "Блокировка по записям".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IParametrizedQuery">
            <summary>
            Предоставляет методы и свойства параметризированного запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.GetUsingParameters">
            <summary>
            Возвращает коллекцию параметров запроса.
            </summary>
            <returns>Коллекция параметров данного запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.ResetParameters">
            <summary>
            Очищает коллекцию параметров запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.InitializeParameters">
            <summary>
            Выполняет инициализацию параметров запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.Parameters">
            <summary>
            Коллекция параметров запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.HasParameters">
            <summary>
            Признак, имеет ли запрос параметры.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.BuildParametersAsValue">
            <summary>
            Определяет, добавлять ли параметры запроса в текст запроса как значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IDBReadableCommand">
            <summary>
            Представляет собой оператор SQL, предназначенный для чтения данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteReader(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Используя переданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, выполняет оператор	SQL и возвращает 
            <see cref="T:System.Data.IDataReader"/> с результирующим набором строк.
            </summary>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <returns>Экземпляр <see cref="T:System.Data.IDataReader"/> с результирующим набором строк.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Используя переданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, выполняет оператор SQL и возвращает типизированный 
            первый столбец первой строки результирующего набора, возвращаемого запросом.
            </summary>
            <typeparam name="TResult">Тип возвращаемого значения столбца.</typeparam>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <returns>Первый столбец первой строки в результирующем наборе типа <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteScalar``1">
            <summary>
            Выполняет оператор SQL и возвращает типизированный первый столбец первой строки результирующего набора, 
            возвращаемого запросом.
            </summary>
            <typeparam name="TResult">Тип возвращаемого значения столбца.</typeparam>
            <returns>Первый столбец первой строки в результирующем наборе типа <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityQueryBaseBlockBuilder.BuildBlock(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Обработать вызов метода текущим посетителем
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntityQueryProvider.CanReadUncommitedDataProperty">
            <summary>
            Название свойства web.config, отвечающего за режим "грязного" чтения таблиц для запросов 
            <see cref="T:Terrasoft.Core.Entities.EntityQueryProvider"/> по умолчанию.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityQueryProvider.ResetProvider">
            <summary>
            Один провайдер может использоваться для построения и выполнения нескольких,
            несвязаных между собой, запросов на основе одной Entity.
            Например при использовании inline count</summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityQueryProvider.ContinuationToken">
            <summary>
            Указывает количество строк, которые необходимо пропустить при постраничности.
            Эквивалентно SkipCount для постраничности</summary>
            <remarks>
            Вынесен в отдельный параметр так как SkipCount
            может быть перезаписан значением $skip из запроса</remarks>
        </member>
        <member name="T:Terrasoft.Core.Factories.ConstructorArgument">
            <summary>
            Аргумент конструктора класса, создаваемого с помощью фабрики замещающих классов.
            </summary>
            <remarks>Данный класс предназначен для инициализации аргументов параметризированных конструкторов классов, 
            которые создаются с помощью фабрики.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Factories.ConstructorArgument.#ctor(System.String,System.Object)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Factories.ConstructorArgument"/> с заданными именем и значением агрумента. 
            </summary>
            <param name="name">Имя аргумента.</param>
            <param name="value">Значение аргумента.</param>
        </member>
        <member name="P:Terrasoft.Core.Factories.ConstructorArgument.Name">
            <summary>
            Имя аргумента.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Factories.ConstructorArgument.Value">
            <summary>
            Значение аргумента.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Factories.ClassFactory">
            <summary>
            Фабрика замещающих классов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Get``1(Terrasoft.Core.Factories.ConstructorArgument[])">
            <summary>
            Возвращает экземпляр замещающего типа для заданного замещаемного типа.
            </summary>
            <typeparam name="T">Замещаемый тип.</typeparam>
            <param name="constructorArguments">Массив аргументов конструктора замещающего типа.</param>
            <returns>Экземпляр типа, который замещает тип <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Factories.ClassFactory.InitializeModule">
            <summary>
            Модуль для привязки типов к замещающим их типам.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.InitializeModule.Load">
            <summary>
            Инициализация модуля привязки типов конфигурационной сборки к замещающим их типам.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Factories.OverrideAttribute">
            <summary>
            Указывает, что класс замещает своего родителя в иерархии. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Возвращает метаданные схемы в бинарном представлении.
            </summary>
            <param name="package">Пакет.</param>
            <param name="schema">Дескриптор схемы.</param>
            <returns>Словарь c бинарным представлением метаданных и дескриптора схемы.</returns>
            <remarks>Метаданные и дескриптор получаются из базы данных.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Возвращает метаданные схемы в бинарном представлении.
            </summary>
            <param name="package">Пакет.</param>
            <param name="schema">Дескриптор схемы.</param>
            <returns>Словарь c бинарным представлением метаданных схемы.</returns>
            <remarks>Метаданные получаются из файла, выгруженного из хранилища.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Возвращает метаданные схемы в бинарном представлении.
            </summary>
            <param name="package">Пакет.</param>
            <param name="schema">Дескриптор схемы.</param>
            <returns>Словарь c бинарным представлением метаданных схемы.</returns>
            <remarks>Метаданные получаются из архива пакета.</remarks>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs">
            <summary>
            Аргументы ошибки блокирования элемента в системе контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса
            <see cref="T:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs"/>, используя заданные параметры.
            </summary>
            <param name="itemName">Имя элемента, вызвавшего ошибку.</param>
            <param name="errorMessage">Текст ошибки.</param>
            <param name="lockedByName">Имя пользователя, заблокировавшего элемент. Необязательный параметр.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.ItemName">
            <summary>
            Имя элемента, вызвавшего ошибку.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.LockedByName">
            <summary>
            Имя пользователя, заблокировавшего элемент.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.ErrorMessage">
            <summary>
            Текст ошибки.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Add(System.String,System.Byte[])">
            <summary>Добавляет блок данных в хранилище с указанным ключом</summary>
            <param name="key">Ключ</param>
            <param name="data">Данные</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Add(System.String,System.String)">
            <summary>Добавляет указанный файл в хранилище с указанным ключом</summary>
            <param name="key">Ключ</param>
            <param name="filePath">Путь к файлу для добавления</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Get">
            <summary>Поиск модулей для текущей конфигурации.</summary>
            <returns>Словарь, содержащий в качестве ключа имя модуля, в качестве значения - массив байт модуля.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.CreateQueryCaseIsPackagesElementsChanged(Terrasoft.Core.UserConnection)">
            <summary>
            Формирует экземпляр выражения <c>CASE</c> для проверки наличия изменения в содержимом пакета.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр выражения <c>CASE</c>.</returns>
            <remarks>Возращаемое значение используется как параметр для метода 
            <see cref="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryCase)"/> класса <see cref="T:Terrasoft.Core.DB.Select"/>. 
            Проверка осуществляется по колонке <c>IsChanged</c> для следующих схем:
            <list type="bullet">
            <item><term>Схема</term><description><c>SysSchema</c></description></item>
            <item><term>SQL-сценарий</term><description><c>SysPackageSqlScript</c></description></item>
            <item><term>Сборки в пакете</term><description><c>SysPackageReferenceAssembly</c></description></item>
            <item><term>Данные схемы пакета</term><description><c>SysPackageSchemaData</c></description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.SetPackageInstallType(Terrasoft.Core.UserConnection,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package},Terrasoft.Common.SysPackageInstallType)">
            <summary>
            Устанавливает указанный признак установки пакета для указанных пакетов в указанной конфигурации.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="workspaceId">Идентификатор конфигурации.</param>
            <param name="packages">Список пакетов.</param>
            <param name="packageInstallType">Тип установки пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.FindSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Tries to find and return schema Id by schema UId.
            </summary>
            <param name="schemaUId">Schema UId as search parameter</param>
            <param name="userConnection">User connection.</param>
            <returns>If schema Id didn't found, <c>Guid.Empty</c> will be returned.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Returns schema Id by schema UId.
            </summary>
            <param name="schemaUId">Schema UId as search parameter.</param>
            <param name="userConnection">User connection.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">If schema Id didn't found, exception will be
            thrown.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetPackageHierarchyIds(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Возвращает перечислитель уникальных идентификаторов иерархии пакетов, начиная с базового пакета.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="basePackageUId">UId пакета, начиная с которого раскручивается иерархия.</param>
            <param name="workspaceId">Уникальный идентификатор рабочего пространства.</param>
            <returns>Перечислитель уникальных идентификаторов иерархии пакетов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetPackageHierarchyIdsById(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Возвращает перечислитель уникальных идентификаторов иерархии пакетов, начиная с базового пакета.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="basePackageId">Уникальный идентификатор пакета, начиная с которого раскручивается иерархия.
            </param>
            <param name="workspaceId">Уникальный идентификатор рабочего пространства.</param>
            <returns>Перечислитель уникальных идентификаторов иерархии пакетов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.ComposeAndSaveSvnStorage(Terrasoft.Core.Packages.PackageSvnStorage,Terrasoft.Core.Packages.PackageDBStorage,Terrasoft.Core.Packages.PackageStorageChangeCollection)">
            <summary>
            Cинхронизирует состояния элементов в хранилище системы контроля версий с состояниями элементов в хранилище
            базы данных и применяет изменения.
            </summary>
            <param name="svnStorage">Хранилище системы контроля версий.</param>
            <param name="dbStorage">Хранилище базы данных.</param>
            <param name="changes">Коллекция изменений элементов конфигурации.</param>
            <returns>Коллекция измененых элементов конфигурации.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.ComposeSourceControlPackages(Terrasoft.Core.Packages.PackageSvnStorage,Terrasoft.Core.Packages.PackageDBStorage,Terrasoft.Core.Packages.PackageStorageChangeCollection)">
            <summary>
            Cинхронизирует состояния элементов в хранилище системы контроля версий с состояниями элементов в хранилище
            базы данных.
            </summary>
            <param name="svnStorage">Хранилище системы контроля версий.</param>
            <param name="dbStorage">Хранилище базы данных.</param>
            <param name="changes">Коллекция изменений элементов конфигурации.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.CleanUpWorkspace(Terrasoft.Core.UserConnection)">
            <summary>
            Выполняет восстановление конфигурации из хранилища.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="P:Terrasoft.Core.SourceCodeSchema.BaseSchemaUId">
            <summary>
            Уникальный идентификатор базовой схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementDataSchema">
            <summary>
            Схема объекта "Данные элемента процесса".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementData._sysProcess">
            <summary>
            Процесс.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementData._owner">
            <summary>
            Ответственный.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementData.SchemaElementUId">
            <summary>
            Элемент схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessDataSchema">
            <summary>
            Схема объекта "Данные процесса".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._sysSchema">
            <summary>
            Схема процесса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._parent">
            <summary>
            Родитель.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._owner">
            <summary>
            Ответственный.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LDAP.LdapUtilities.WriteToLog(System.String)">
            <summary>
            Записывает в лог информационное сообщение.
            </summary>
            <param name="message">Текст сообщения.</param>
        </member>
        <member name="M:Terrasoft.Core.LDAP.LdapUtilities.LogInfo(System.String,System.Object[])">
            <summary>
            Записывает в лог информационное сообщение.
            </summary>
            <param name="format">Строка составного формата с информационным сообщением.</param>
            <param name="args">Параметры формата сообщения.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если значение объекта <paramref name="format"/> или <paramref name="args"/> равно <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.LDAP.LdapUtilities.LogError(System.String,System.Object[])">
            <summary>
            Записывает в лог сообщение об ошибке.
            </summary>
            <param name="format">Строка составного формата с сообщением об ошибке.</param>
            <param name="args">Параметры формата сообщения.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если значение объекта <paramref name="format"/> или <paramref name="args"/> равно <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.LDAP.LdapUtilities.LogDebug(System.String,System.Object[])">
            <summary>
            Записывает в лог отладочное сообщение.
            </summary>
            <param name="format">Строка составного формата с отладочным сообщением.</param>
            <param name="args">Параметры формата сообщения.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если значение объекта <paramref name="format"/> или <paramref name="args"/> равно <c>null</c>.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.LDAP.LdapUtilities.IsPhoneNeedUpdate">
            <summary>
            Признак необходимости изменения номера телефона пользователя при синхронизации с LDAP.
            </summary>
            <value>
            <c>true</c>, если номер телефона нужно изменять; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.LDAP.LdapUtilities.IsEmailNeedUpdate">
            <summary>
            Признак необходимости изменения email пользователя при синхронизации с LDAP.
            </summary>
            <value>
            <c>true</c>, если email нужно изменять; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.LDAP.LdapUtilities.IsJobTitleNeedUpdate">
            <summary>
            Признак необходимости изменения должности пользователя при синхронизации с LDAP.
            </summary>
            <value>
            <c>true</c>, если должность нужно изменять; иначе - <c>false</c>.
            </value>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsEntitySchemaRecordDeletingAllowed(Terrasoft.Core.Entities.EntitySchema,System.Guid)">
            <summary>
            Определяет наличие прав у текущего пользователя для удаления записи из указанного объекта.
            </summary>
            <param name="schema">Экземпляр схемы <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</param>
            <param name="recordId">Идентификатор записи.</param>
            <returns>Возвращает <c>true</c>, если у пользователя есть права на удаление записи.
            Иначе <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.SetCurrentUserCulture">
            <summary>
            Устанавливает формат даты, выбранный пользователем в настройках.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.RequestData">
            <summary>
            Хранилище данных уровня запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.SessionData">
            <summary>
            Хранилище данных уровня сессии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.ApplicationData">
            <summary>
            Хранилище данных уровня приложения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheStoreProvider">
            <summary>
            Провайдер кэша.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.BaseStoreProvider`2">
            <summary>
            Базовый класс провайдера хранилища.
            </summary>
            <typeparam name="TStore">Класс, определяющий тип хранилища.</typeparam>
            <typeparam name="TStoreLevel">Структура, значения которой определяют уровни доступа к данным хранилища.
            </typeparam>
        </member>
        <member name="P:Terrasoft.Core.Store.BaseStoreProvider`2.Item(`1)">
            <summary>
            Индексатор для доступа к хранилищу типа <typeparamref name="TStore"/> с заданным уровнем доступа к данным 
            хранилища.
            </summary>
            <param name="level">Уровень доступа к данным хранилища.</param>
            <returns>Экземпляр хранилища типа <typeparamref name="TStore"/> с уровнем доступа к данным 
            <paramref name="level"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если хранилище не сконфигурировано на уровене 
            <paramref name="level"/>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreProvider.#ctor">
            <summary>
            Иницализирует экземпляр <see cref="T:Terrasoft.Core.Store.CacheStoreProvider"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.CacheStoreProvider.Empty">
            <summary>
            Возвращает пустой кэш.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheStoreUtilities">
            <summary>
            Предоставляет служебные методы для работы с хранилищем данных и кэшем.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCaching(Terrasoft.Core.Store.ICacheStore,System.String)">
            <summary>Применяет локальное хранение данных при работе с кэшем.</summary>
            <param name="source">Кэш.</param>
            <param name="groupName">Имя группы элементов для контроля актуальности. Все элементы, которые 
            помещаются в данную группу будут терять актуальность при вызове метода <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>.</param>
            <returns>Кэш-обертка, осуществляющая локальное хранение данных и проверку признака актуальности данных в 
            первоначальном кэше. Признак актуальности проверяется при каждом обращении к объекту.</returns>
            <remarks>Рекомендуется использовать только в случае работы с кэшем с относительно "дорогим" доступом 
            (например, кэш с доступом по сети) и при значительных объемах кэшируемых элементов.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCaching(Terrasoft.Core.Store.ICacheStore)">
            <summary>Применяет локальное хранение данных при работе с кэшем. Каждый помещаемый в кеш элемент будет 
            иметь свой собственный признак актуальности.</summary>
            <param name="source">Кэш.</param>
            <returns>Кеш-обертка, осуществляющая локальное хранение данных и проверку признака актуальности данных в 
            первоначальном кеше. Признак актуальности проверяется при каждом обращении к объекту.</returns>
            <remarks>Рекомендуется использовать только в случае работы с кэшем с относительно "дорогим" доступом 
            (например, кэш с доступом по сети) и при значительных объемах кэшируемых элементов.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCachingOnly(Terrasoft.Core.Store.ICacheStore,System.String,System.Boolean)">
            <summary>Осуществляет локальное хранение данных с мониторингом актуальности данных с использованием 
            указанного (глобального) кэша.</summary>
            <param name="source">Кэш.</param>
            <param name="groupName">Имя группы элементов для контроля актуальности. Все элементы, которые 
            помещаются в данную группу, будут терять актуальность при вызове метода <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>.</param>
            <param name="ignoreUserIdentity">Признак участия имени текущего пользователя в формировании ключа
            доступа к кэшу.</param>
            <returns>Кэш-обертка, осуществляющая локальное хранение данных и проверку признака актуальности данных в 
            первоначальном кэше. Признак актуальности проверяется при каждом обращении к объекту.</returns>
            <remarks>Сами данные в кэш не передаются - в кэше проверяется только признак актуальности данных. 
            Элементы в локальном кэше теряют актуальность только при вызове метода <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>, но не 
            при записи нового объекта в кэш.</remarks>
            <exception cref="T:System.ArgumentException">Если в качестве параметра <paramref name="groupName"/> передана пустая 
            строка или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)">
            <summary>Устанавливает признак устаревания для заданной группы элементов кэша.</summary>
            <param name="source">Кэш.</param>
            <param name="groupName">Имя группы элементов.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.SetOrRemoveValue(Terrasoft.Core.Store.ICacheStore,System.String,System.Object)">
            <summary>Производит попытку записи значения <paramref name="value"/> в кэш по ключу <paramref name="key"/>.
            В случае, если <paramref name="value"/> == <c>null</c>, удаляет ключ из кэша.</summary>
            <param name="source">Кэш.</param>
            <param name="key">Ключ, по которому значение <paramref name="value"/> записывается в кэш.</param>
            <param name="value">Значение, которое записывается в кэш по ключу <paramref name="key"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValue``1(Terrasoft.Core.Store.IBaseStore,System.String)">
            <summary>Получает из хранилища данных или кэша значение по ключу <paramref name="key"/> и приводит 
            полученное значение к заданному типу. Если значение по ключу не найдено, метод возвращает <c>null</c>.
            </summary>
            <typeparam name="T">Тип, к которому приводится значение, получаемое из хранилища/кэша.</typeparam>
            <param name="source">Хранилище данных или кэш.</param>
            <param name="key">Ключ значения.</param>
            <returns>Значение по ключу <paramref name="key"/>, приведеное к типу <typeparamref name="T"/> либо 
            <c>null</c>, если значение не найдено.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValue``1(Terrasoft.Core.Store.IBaseStore,System.String,``0)">
            <summary>Получает из хранилища данных или кэша значение по ключу <paramref name="key"/> и приводит 
            полученное значение к заданному типу. Если значение по ключу не найдено, метод возвращает 
            заданное значение по умолчанию.</summary>
            <typeparam name="T">Тип, к которому приводится значение, получаемое из хранилища/кэша.</typeparam>
            <param name="source">Хранилище данных или кэш.</param>
            <param name="key">Ключ значения.</param>
            <param name="defaultValue">Значение по умолчанию, которое будет возвращено методом, если по данному ключу
            значение в хранилище/кэше не найдено.</param>
            <returns>Значение по ключу <paramref name="key"/>, приведенное к типу <typeparamref name="T"/> или 
            <paramref name="defaultValue"/>, если значение не найдено.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.Pop``1(Terrasoft.Core.Store.IDataStore,System.String)">
            <summary>Получает из хранилища данных значение по ключу <paramref name="key"/>, приводит 
            полученное значение к заданному типу и удаляет данный ключ из хранилища.</summary>
            <typeparam name="T">Тип, к которому приводится значение, получаемое из хранилища данных.</typeparam>
            <param name="source">Хранилище данных.</param>
            <param name="key">Ключ значения.</param>
            <returns>Значение по ключу <paramref name="key"/>, приведенное к типу <typeparamref name="T"/> или 
            <c>null</c>, если значение не найдено.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValues(Terrasoft.Core.Store.ICacheStore,System.String[])">
            <summary>Возвращает значения из кэша по заданному списку ключей.</summary>
            <param name="source">Кэш.</param>
            <param name="keys">Перечень ключей, для которых требуется получить значения.</param>
            <returns>Словарь, содержащий весь список ключей и соответствующие этим ключам значения. Если значение по
            определенному ключу не было найдено, то запись в словаре будет присутствовать, но ее значение будет 
            равно <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetRootStore(Terrasoft.Core.Store.ICacheStore)">
            <summary>
            Возвращает корневой кэш.
            </summary>
            <param name="source">Кэш.</param>
            <returns>Корневой кэш.</returns>
            <remarks>Метод продвигается по цепочке прокси-объектов, начиная от <paramref name="source"/>, пока не 
            достигнет самого первого (корневого) кэша.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetRootStore(Terrasoft.Core.Store.IDataStore)">
            <summary>
            Возвращает корневое хранилище данных.
            </summary>
            <param name="source">Хранилище данных.</param>
            <returns>Корневое хранилище данных.</returns>
            <remarks>Метод продвигается по цепочке прокси-объектов, начиная от <paramref name="source"/>, пока не 
            достигнет самого первого (корневого) хранилища данных.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.AdjustRawGetValuesResult(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Проверяет переданный словарь со значениями на присутствие в нем значений с заданными ключами.
            </summary>
            <param name="keys">Список ключей, наличие которых проверяется в словаре 
            <paramref name="rawGetValuesResult"/>.</param>
            <param name="rawGetValuesResult">Словарь, в котором проверяется наличие значений с ключами 
            <paramref name="keys"/>.</param>
            <returns>Словарь со значениями для ключей <paramref name="keys"/>. Если в переданном словаре 
            <paramref name="rawGetValuesResult"/> изначально отсутствовало значение с каким-либо ключом из 
            <paramref name="keys"/>, то в возвращаемый словарь добавляется запись с этим ключом и значением 
            <c>null</c>. Если в качестве словаря <paramref name="rawGetValuesResult"/> передано значение <c>null</c>, 
            то будет возвращен словарь, в котором для каждого ключа из <paramref name="keys"/> добавлено значение 
            <c>null</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Store.IDataStore">
            <summary>Хранилище данных.</summary>
            <remarks>Данные, размещенные в хранилище, будут храниться в нем до явного удаления.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.IDataStore.Keys">
            <summary>
            Возвращает список всех ключей хранилища.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.ICacheStore">
            <summary>Кэш.</summary>
            <remarks>
            Данные, размещенные в кэше, могут быть удалены автоматически без всякого предупреждения.
            Поэтому логика приложения не должна быть жестко завязана на обязательное наличие в кэше ранее записанного 
            туда значения (если требуется такое поведение, нужно использовать <see cref="T:Terrasoft.Core.Store.IDataStore"> хранилище</see>).
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.ICacheStore.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Получение значений по списку ключей.</summary>
            <param name="keys">Множество ключей, для которых требуется получить значения из кэша.</param>
            <returns>Словарь, содержащий весь список ключей и соответствующие этим ключам значения. Если значение по
            определенному ключу не было найдено, то в словарь будет добавлена запись с этим ключом со значением 
            <c>null</c>.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheStore.IsLocalCache">
            <summary>
            Признак, определяющий, что данные хранятся в локальной памяти.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.IsLocalCache">
            <summary>
            Признак, определяющий, что данные хранятся в локальной памяти.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.DataStoreKeyTransformerProxy">
            <summary>
            Прокси-класс, преобразующий ключи хранилища данных путем добавления к ключу префикса.
            </summary>
            <remarks>Данный класс предоставляет простой и эффективный механизм организации выделенного пространства ключей 
            в хранилище. Этот механизм может использоваться для разделения находящихся в хранилище данных различных 
            пользователей.</remarks>
        </member>
        <member name="T:Terrasoft.Core.Store.IDataStoreProxy">
            <summary>
            Интерфейс для прокси-классов хранилища данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.IDataStoreProxy.DataStore">
            <summary>
            Хранилище данных, с которым работает прокси-класс.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр прокси-класса <see cref="T:Terrasoft.Core.Store.DataStoreKeyTransformerProxy"/> с заданным префиксом, 
            который добавляется к ключам элементов хранилища.
            </summary>
            <param name="keyPrefix">Префикс, который добавляется к ключам.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="keyPrefix"/> 
            передана пустая строка или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Remove(System.String)">
            <summary>
            Удалает элемент хранилища данных по заданому ключу.
            </summary>
            <param name="key">Ключ удаляемого элемента.</param>
            <remarks>Переданный ключ <paramref name="key"/> предварительно преобразуется следующим образом: к нему 
            добавляется префикс, определенный свойством <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/>. После этого из хранилища данных 
            удаляется элемент с полученным трансформированным ключом.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициалзирует свойства прокси-класса переданными параметрами.
            </summary>
            <param name="parameters">Параметры для инициализации.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Item(System.String)">
            <summary>
            Возвращает или устанавливает элемент хранилища данных по заданному ключу.
            </summary>
            <param name="key">Ключ элемента.</param>
            <returns>Значение элемента для ключа <paramref name="key"/> или <c>null</c>, если элемент не найден. 
            </returns>
            <remarks>Переданный ключ <paramref name="key"/> предварительно преобразуется следующим образом: к нему 
            добавляется префикс, определенный свойством <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/>. После этого возвращается или 
            устанавливается элемент хранилища данных с полученным трансформированным ключом.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.DataStore">
            <summary>
            Хранилище данных, с которым работает прокси-класс.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix">
            <summary>
            Префикс ключа элемента хранилища.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Keys">
            <summary>
            Список нетрансформированных ключей хранилища.
            </summary>
            <remarks>Метод из всей коллекции ключей глобального хранилища определяет те, которые начинаются префиксом 
            <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/> и возвращает их в нетрансформированном виде (то есть без этого префикса).
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.Store.DataStoreProvider">
            <summary>
            Провайдер хранилища данных.
            </summary>
            <remarks>Реализация провайдера хранилища данных совпадает с реализацией базового провайдера хранилища 
            <see cref="T:Terrasoft.Core.Store.BaseStoreProvider`2"/>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.EmptyCacheStoreAdapter.IsLocalCache">
            <summary>
            Признак, определяющий, что данные хранятся в локальной памяти.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.KeyTransformerProxy">
            <summary>
            Базовый класс для прокси-классов, преобразующих ключи кэша.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.ICacheStoreProxy">
            <summary>
            Интерфейс для прокси-класов кэша.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheStoreProxy.CacheStore">
            <summary>
            Кэш, с которым работает прокси-класс.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает словарь значений из кэша для заданного списка ключей. 
            </summary>
            <param name="keys">Список ключей.</param>
            <returns>Словарь значений из кэша для ключей <paramref name="keys"/>.</returns>
            <remarks>Каждый ключ из списка предварительно преобразуется в соответствии с правилами трансформации 
            ключей прокси-класса, после чего в результирующий словарь значений добавляется значение, полученное из 
            кэша по трансформированному ключу. Ключ значения в результирующем словаре при этом остается неизменным.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.Remove(System.String)">
            <summary>
            Удаляет элемент из кэша по заданному ключу.
            </summary>
            <param name="key">Ключ удаляемого элемента.</param>
            <remarks>Переданный ключ <paramref name="key"/> предварительно преобразуется в соответствии с правилами 
            трансформации ключей прокси-класса, после чего из кэша удаляется элемент по трансформированному ключу.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициализирует свойства прокси-класса переданными параметрами.
            </summary>
            <param name="parameters">Параметры для инициализации.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.IsLocalCache">
            <summary>
            Признак, определяющий, что данные хранятся в локальной памяти.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.Item(System.String)">
            <summary>
            Возвращает или устанавливает элемент кэша по заданному ключу. 
            </summary>
            <param name="key">Ключ элемента.</param>
            <returns>Значение элемента для ключа <paramref name="key"/> или <c>null</c>, если элемент не найден.
            </returns>
            <remarks>Переданный ключ <paramref name="key"/> предварительно преобразуется в соответствии с правилами 
            трансформации ключей прокси-класса, после чего возвращается или устанавливается элемент кэша по 
            трансформированному ключу.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.CacheStore">
            <summary>
            Кэш, с которым работет прокси-класс.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.LocalCachingProxyBase.IsLocalCache">
            <summary>
            Признак, определяющий, что данные хранятся в локальной памяти.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.MemoryCacheStore">
            <summary>
            Кеш.
            </summary>
            <remarks>
            Данные кешируются в локальной памяти.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Store.MemoryCacheStore"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.#ctor(System.String,System.TimeSpan)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Store.MemoryCacheStore"/>.
            </summary>
            <param name="name">Имя кеша.</param>
            <param name="slidingExpiration">Время устаревания значения.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Получение значений по списку ключей.</summary>
            <param name="keys">Множество ключей, для которых требуется получить значения из кеша.</param>
            <returns>
            Словарь, содержащий весь список ключей и соответствующие этим ключам значения. Если значение по
            определенному ключу не было найдено, то в словарь будет добавлена запись с этим ключом со значением 
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.Remove(System.String)">
            <summary>Удаляет элемент с заданным ключом из кеша.</summary>
            <param name="key">Ключ элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Инициализирует кеша заданными конфигурационными параметрами.</summary>
            <param name="parameters">Параметры для конфигурирования кеша.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.MemoryCacheStore.Item(System.String)">
            <summary>
            Устанавливает или возвращает значение по ключу.
            </summary>
            <param name="key">Ключ элемента.</param>
            <returns>Значение элемента.</returns>
        </member>
        <member name="P:Terrasoft.Core.Store.MemoryCacheStore.IsLocalCache">
            <summary>
            Признак, определяющий, что элементы хранятся в локальной памяти.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy">
            <summary>
            Прокси-класс, преобразующий ключи кэша путем добавления к ключу префикса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.#ctor(System.String,Terrasoft.Core.Store.ICacheStore)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy"/> с заданными кэшем и префиксом, 
            который добавляется к ключам.
            </summary>
            <param name="prefix">Префикс, который добавляется к ключам.</param>
            <param name="store">Кэш, с которым работает прокси-класс.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Инициализирует свойства прокси-класса переданными параметрами.
            </summary>
            <param name="parameters">Параметры для инициализации.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.DataLevel">
            <summary>Уровень размещения данных в хранилище.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Request">
            <summary>Уровень запроса. Данные, размещенные на этом уровне, доступны только в течении обработки
            текущего запроса.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Session">
            <summary>Уровень сессии. Данные, размещенные на этом уровне, доступны только в сессии текущего 
            пользователя.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Application">
            <summary>Уровень приложения. Данные, размещенные на этом уровне, доступны для всего приложения.</summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheLevel">
            <summary>Уровень размещения данных в кэше.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Session">
            <summary>Уровень сессии. Данные, размещенные на этом уровне, доступны только в сессии текущего 
            пользователя.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Workspace">
            <summary>Глобальный уровень приложения. Данные, размещенные на этом уровне, будут доступны всем узлам 
            веб-фермы. Данные разных рабочих пространств не пересекаются между собой.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Application">
            <summary>Глобальный уровень приложения. Данные, размещенные на этом уровне, будут доступны всем узлам 
            веб-фермы без учета рабочего пространства.</summary>.
            <remarks>Использовать этот уровень следует только в случае крайней необходимости и с четким 
            понимаем особенностей работы приложения в веб-ферме.</remarks> 
        </member>
        <member name="T:Terrasoft.Core.Store.ISessionStore">
            <summary>
            Интерфейс хранилища сессиионных данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ISessionStore.Clear">
            <summary>
            Удаляет все элементы сессии из хранилища. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheItem">
            <summary>
            Элемент кэша.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.CacheItem.Value">
            <summary>
            Значение элемента кэша.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.Store">
            <summary>
            Предоставляет доступ к хранилищам данных и кэшу различных уровней.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.Store.Data">
            <summary>
            Провайдер хранилища данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.Store.Cache">
            <summary>
            Провайдер кэша.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleOperation">
            <summary>Операция правила системной настройки.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Min">
            <summary>Минимальное значение.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Max">
            <summary>Максимальное значение.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Const">
            <summary>Константа.</summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleType">
            <summary>
            Тип правила системной настройки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.Int">
            <summary>
            Целое число.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.String">
            <summary>
            Строка.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.Bool">
            <summary>
            Логическое.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRule">
            <summary>
            Правило системной настройки.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRule.#ctor(System.String,System.String,Terrasoft.Core.SysSettingRuleType,Terrasoft.Core.SysSettingRuleOperation)">
            <summary>
            Создает экземпляр класса <see cref="T:Terrasoft.Core.SysSettingRule"/> для правила с заданным ключом, значением, типом и
            операцией.
            </summary>
            <param name="key">Ключ системной настройки.</param>
            <param name="value">Значение правила системной настройки.</param>
            <param name="valueType">Тип правила системной настройки.</param>
            <param name="operation">Операция правила системной настройки.</param>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._key">
            <summary>
            Код правила системной настройки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._value">
            <summary>
            Значение правила системной настройки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._valueType">
            <summary>
            Тип правила системной настройки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._operation">
            <summary>
            Операция правила системной настройки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleUtilities">
            <summary>Используется правилами системных настроек</summary>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRuleUtilities.CheckSysSettingRules(Terrasoft.Core.SysSettingRule,System.Object)">
            <summary>
            Выполняет проверку значения системной настройки на соответствие правилам.
            </summary>
            <param name="sysSettingRule">Правило системной настройки.</param>
            <param name="sysSettingValue">Значение системной настройки.</param>
        </member>
        <member name="M:Terrasoft.Core.SystemUserConnection.SetEntitySchemaManager_Old(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>Метод не использовать! Временное решение!</summary>
            <param name="entitySchemaManager">Менеджер схем</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryUtilities">
            <summary>
            Содержит служебные методы для работы с запросами к базе данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryUtilities.AddDBEngineCompatibleIsEqualCondition(Terrasoft.Core.DB.Query,System.String,Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,Terrasoft.Common.LogicalOperation)">
            <summary>
            К заданному запросу добавляет соответствующее типу данных условие проверки равенства значения заданной 
            колонки схемы и указанного значения.
            </summary>
            <param name="query">Запрос, к которому добавляется условие.</param>
            <param name="schemaName">Имя схемы, для которой добавляется условие.</param>
            <param name="conditionColumn">Колонка схемы <paramref name="schemaName"/>, для которой добавляется условие.
            </param>
            <param name="conditionValue">Значение для сравнения с <paramref name="conditionColumn"/>.</param>
            <param name="logicalOperation">Тип логической операции, с помощью которой условие добавляется к запросу.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDefSource">
            <summary>
            Источники значений по умолчанию.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.None">
            <summary>
            Нет источника.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.Const">
            <summary>
            Константа.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.Settings">
            <summary>
            Настройка.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.SystemValue">
            <summary>
            Системное значение.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource">
            <summary>
            Источники системных значений по умолчанию.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentTime">
            <summary>
            Текущее время.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentDate">
            <summary>
            Текущая дата.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentDateTime">
            <summary>
            Текущие дата и время.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUser">
            <summary>
            Текущий пользователь.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUserContact">
            <summary>
            Контакт текущего пользователя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUserAccount">
            <summary>
            Контрагент текущего пользователя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.GenerateUId">
            <summary>
            Уникальный идентификатор.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.GenerateSequentialUId">
            <summary>
            Последовательный идентификатор.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDef">
            <summary>
            Представляет значение по умолчанию для колонки схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.#ctor(Terrasoft.Core.Entities.EntitySchemaColumnDef)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>, который является клоном заданной 
            колонки.
            </summary>
            <param name="source">Колонка, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Инициализирует основные свойства колонки на основании метаданных.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetFilteredSettingsList(Terrasoft.Core.DataValueType,Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает отфильтрованный список настроек в зависимости от указанного типа данных колонки.
            </summary>
            <param name="dataValueType">Тип данных колонки.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Отфильтрованный список настроек для типа данных <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект <see cref="T:System.Object"/> текущему значению по умолчанию.
            </summary>
            <param name="obj">Объект, который требуется сравнить с текущим значением по умолчанию.</param>
            <returns>
            <c>true</c>, если <paramref name="obj"/> равен текущему значению по умолчанию; иначе - <c>false</c>.
            </returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetHashCode">
            <summary>
            Возвращает хэш-код экземпляра значения по умолчанию.
            </summary>
            <returns>Хэш-код колонки.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Equals(Terrasoft.Core.Entities.EntitySchemaColumnDef)">
            <summary>
            Определяет, равно ли заданное значение по умолчанию <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/> текущему значению 
            по умолчанию.
            </summary>
            <param name="comparedValue">Значение по умолчанию, которое требуется сравнить с текущим значением по 
            умолчанию.</param>
            <returns>
            <c>true</c>, если <paramref name="comparedValue"/> равна текущей колонке; иначе - <c>false</c>.
            </returns>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Осуществляет вычитку значения по умолчанию из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого вычитываются метаданные 
            значения по умолчанию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных значения по умолчанию с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются метаданные значения 
            по умолчанию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetDisplayValue">
            <summary>
            Возвращает отображаемое значение значения по умолчанию.
            </summary>
            <returns>
            Отображаемое значение значения по умолчанию.
            </returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если для колонки установлен не поддерживаемый источник значения 
            по умолчанию.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Clone">
            <summary>
            Возвращает значение по умолчанию, которое является клоном текущего значения по умолчанию.
            </summary>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>, который является клоном текущего значения по 
            умолчанию.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.Source">
            <summary>
            Источник для значения по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.Value">
            <summary>
            Значение по умолчанию.
            </summary>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если источник для значения по умолчанию не допустим для данной 
            колонки.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ValueSource">
            <summary>
            Источник получения значения по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsDateOrTimeDataValueType">
            <summary>
            Определяет, является ли значение по умолчанию значением даты или даты и времени.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsValueListDataValueType">
            <summary>
            Определяет, является ли значение по умолчанию значением из виртуального набора данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsConstantValue">
            <summary>
            Определяет, является ли значение по умолчанию константой.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsSystemValue">
            <summary>
            Определяет, является ли значение по умолчанию системным значением.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReferenceSchemaUId">
            <summary>
            Ссылка на схему, которая содержит колонку, которая содержит данное значение по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReferenceValueListSchemaUId">
            <summary>
            Уникальный идентификатор виртуального набора данных, на который ссылается текущее значение по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.SystemValue">
            <summary>
            Системное значение колонки.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            Если для значения по умолчанию установлен неверный идентификатор системного значения.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ParentColumn">
            <summary>
            Колонка, которая содержит данное значение по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.SystemUserConnection">
            <summary>
            Пользовательское подключение.
            </summary>
            TODO #138944
        </member>
        <member name="P:Terrasoft.Core.ImageListSchema.BaseSchemaUId">
            <summary>
            Уникальный идентификатор базовой схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.TextWriter)">
            <summary>
            Сериализует метаданные схемы <paramref name="schema"/>
            с помощью <paramref name="textWriter"/>.
            </summary>
            <param name="schema">Метаданные схемы.</param>
            <param name="textWriter">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого выполняется
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.Stream)">
            <summary>
            Сериализует метаданные схемы <paramref name = "schema"/> в поток <paramref name = "stream"/>.
            </summary>
            <param name="schema">Метаданные схемы.</param>
            <param name="stream">Поток.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.TextWriter)">
            <summary>
            Сериализует метаданные списка схем <paramref name="schemaList"/>
            с помощью <paramref name="textWriter"/>.
            </summary>
            <param name="schemaList">Список метаданных схем для сериализации.</param>
            <param name="textWriter">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого выполняется
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.Stream)">
            <summary>
            Сериализует метаданные списка схем <paramref name = "schemaList"/> в поток <paramref name = "stream"/>.
            </summary>
            <param name="schemaList">Список метаданных схем для сериализации.</param>
            <param name="stream">Поток.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Десериализует метаданные списка схем с помощью <paramref name="input"/>.
            </summary>
            <param name="input">Экземпляр <see cref="T:System.IO.TextReader"/>, с помощью которого выполняется
            десериализация.</param>
            <returns>Список десериализованных элеметов менеджера схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Десериализует метаданные списка схем из потока <paramref name = "input"/>.
            </summary>
            <param name="input">Поток.</param>
            <returns>Список десериализованных элеметов менеджера схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.RemoveParametersMappingInfo(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Осуществляет удаление данных о привязках значений параметров к другим параметрам бизнес-процесса.
            </summary>
            <param name="parameters">Параметры схемы бизнес-процесса.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.AssignParentSchema(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Для текущей схемы встроенного процесса устанавливает в качестве родителя заданную схему.
            </summary>
            <param name="parentSchema">Схема встроенного процесса, устанавливаемая в качестве родителя для текущей
            схемы.</param>
            <returns>
            <c>true</c>, если для текущей схемы встроенного процесса в качестве родительской установлена схема
            <paramref name = "parentSchema"/>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.BpmnElementName">
            <summary>
            Возвращает BPMN наименование элемента бизнес-процесса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.ChangedMethods">
            <summary>
            Коллекция изменённых методов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.UseForceCompile">
            <summary>
            Признак принудительной компиляции схемы процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Создает экземпляр соединения между элементами.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaConditionalFlow.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Создает экземпляр соединения между элементами c условием.
            </summary>
            <param name="flowSchema">Схема процесса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> соединения между элементами бизнес-процесса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchema.DenyExtending">
            <summary>
            Запретить замещение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchema.IncludeDependenciesSource">
            <summary>
            Включить коды зависимых клиентских схем
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.ValidateAdminUnitNamePassword(Terrasoft.Core.UserConnection,System.String@,System.String)">
            <summary>
            Проверяет наличие пользователя в БД и соотвествие пароля
            </summary>
            <param name="userConnection"></param>
            <param name="userName">Имя пользователя, без учета регистра. Если регистр не совпадает, 
            имя пользователя будет исправлено в соотвествии с значением в БД </param>
            <param name="userPassword">Пароль пользователя.</param>
            <returns>
            <c>true</c>, если пользователь с переданным <paramref name="userName"/> существует и пароль 
            <paramref name="userName"/> совпадает с хранящимся в БД
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessEngineStrategy)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.ProcessEngine"/> с заданным поведением.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processEngineStrategy">Перечень алгоритмов, которые переопределяют поведение экземпляра
            <see cref="T:Terrasoft.Core.ProcessEngine"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RemoveActiveProcess(System.String)">
            <summary>
            Removes process from RequestData store.
            </summary>
            <param name="processUId"> The unique identificator of process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaDataObject.ForceGetParameters">
            <summary>
            Осуществляет принудительное получение параметров элемента.
            </summary>
            <returns>Коллекция параметров.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.BaseSchemaUId">
            <summary>
            Уникальный идентификатор базовой схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.Clear">
            <summary>
            Удаляет все элементы из коллекции элементов менеджера, после чего очищает кэш
            <see cref="P:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.MetaDataContractCacheGroupName"/>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ManagerItem`1">
            <summary>
            Элемент менеджера.
            </summary>
            <typeparam name="TInstance">Класс, реализующий интерфейс <see cref="T:Terrasoft.Core.IManagerItemInstance"/>.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.IManagerItem`1">
            <summary>
            Предоставляет свойства элемента менеджера заданного типа.
            </summary>
            <typeparam name="TInstance">Любой класс.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.IManagerItem">
            <summary>
            Предоставляет свойства элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.UId">
            <summary>
            Уникальный идентификатор элемента менеджера.
            </summary>
            <remarks>
            Если схема замещает родителя, то поле <see cref="P:Terrasoft.Core.IManagerItem.UId"/> равно полю <see cref="P:Terrasoft.Core.IManagerItem.RealUId"/> родительской
            "настоящей" схемы, иначе поле <see cref="P:Terrasoft.Core.IManagerItem.UId"/> равно текущему значению поля <see cref="P:Terrasoft.Core.IManagerItem.RealUId"/>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.RealUId">
            <summary>
            Уникальный идентификатор расширяющего элемента менеджера.
            </summary>
            <remarks>
            Если элемент не является расширяющим, значение равно уникальному идентификатору этого элемента.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Name">
            <summary>
            Имя элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Caption">
            <summary>
            Заголовок элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Instance">
            <summary>
            Экземпляр элемента менеджера. Если ссылка на экземпляр элемента менеджера равна <c>null</c>, генерируется 
            исключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.SafeInstance">
            <summary>
            Безопасный экземпляр элемента менеджера. Если ссылка на экземпляр элемента менеджера равна <c>null</c>, 
            возвращается <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Manager">
            <summary>
            Менеджер.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem`1.Instance">
            <summary>
            Экземпляр элемента менеджера текущего типа. Если ссылка на экземпляр элемента менеджера равна <c>null</c>, 
            генерируется исключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem`1.SafeInstance">
            <summary>
            Безопасный экземпляр элемента менеджера текущего типа. Если ссылка на экземпляр элемента менеджера равна 
            <c>null</c>, возвращается <c>null</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ManagerItem`1.HandleNameChanging(System.String)">
            <summary>
            Актуализирует содержимое элемента менеджера при его переименовании.
            </summary>
            <param name="oldName">Старое имя элемента менеджера.</param>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.UId">
            <summary>
            Идентификатор элемента менеджера, значение которого зависит от типа схемы.
            Если схема замещает родителя, то поле <see cref="P:Terrasoft.Core.ManagerItem`1.UId"/> равно полю <see cref="P:Terrasoft.Core.ManagerItem`1.RealUId"/> родительской 
            "настоящей" схемы, иначе поле <see cref="P:Terrasoft.Core.ManagerItem`1.UId"/> равно текущему значению поля <see cref="P:Terrasoft.Core.ManagerItem`1.RealUId"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.RealUId">
            <summary>
            Уникальный идентификатор элемента менеджера, который содержит UId схемы, присвоенное ей при создании.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Caption">
            <summary>
            Заголовок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Instance">
            <summary>
            Экземпляр типа элемента менеджера. Если ссылка на экземпляр элемента менеджера равна <c>null</c>, 
            генерируется исключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.SafeInstance">
            <summary>
            Безопасный экземпляр типа элемента менеджера. Если ссылка на экземпляр элемента менеджера равна 
            <c>null</c>, возвращается <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Terrasoft#Core#IManagerItem#Instance">
            <summary>
            Экземпляр элемента менеджера типа <see cref="T:System.Object"/>. Если ссылка на экземпляр элемента менеджера 
            равна <c>null</c>, генерируется исключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Terrasoft#Core#IManagerItem#SafeInstance">
            <summary>
            Безопасный экземпляр элемента менеджера типа <see cref="T:System.Object"/>. Если ссылка на экземпляр элемента 
            менеджера равна <c>null</c>, возвращается <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Manager">
            <summary>
            Менеджер.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IDBCommand">
            <summary>
            Представляет собой команду SQL.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBCommand.Execute(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Выполняет команду SQL, используя заданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/> и возвращает количество 
            строк, задействованных при выполнении команды.
            </summary>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <returns>Количество строк, задействованных при выполнении оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBCommand.Execute">
            <summary>
            Выполняет команду SQL и возвращает количество строк, задействованных при выполнении команды.
            </summary>
            <returns>Количество строк, задействованных при выполнении команды.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.ActionsConfig">
            <summary>
            Битовое перечисление настроек обновления структуры базы данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Выполняет действия по обновлению структуры базы данных.
            </summary>
            <param name="actionsConfig">Настройки обновления структуры базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaActionCollection.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Выполняет все действия для обновления структуры базы данных.
            </summary>
            <param name="actionsConfig">Настройки обновления структуры базы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.GroupAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Выполняет группу действий по обновлению структуры базы данных.
            </summary>
            <param name="actionsConfig">Настройки обновления структуры базы данных.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если группа не содержит действий.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ValidateAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Выполняет действия по обновлению структуры базы данных.
            </summary>
            <param name="actionsConfig">Настройки обновления структуры базы данных.</param>
        </member>
        <member name="T:Terrasoft.Core.ManagerItemCollection`1">
            <summary>
            Коллекция элементов менеджера.
            </summary>
            <typeparam name="TItem">Тип, реализующий интерфейс <see cref="T:Terrasoft.Core.IManagerItem"/>.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.IManagerItemCollection`1">
            <summary>
            Коллекция элементов менеджера.
            </summary>
            <typeparam name="TItem">Любой тип.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetItems">
            <summary>
            Возвращает перечисление элементов менеджера.
            </summary>
            <returns>Перечисление элементов менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetItems(System.Predicate{`0})">
            <summary>
            Возвращает перечисление элементов менеджера, которые соответствуют заданным критериям.
            </summary>
            <param name="match">Критерии, которым должны соответствовать возвращаемые элементы менеджера.</param>
            <returns>
            Перечисление элементов менеджера, которые соответствуют критериям <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.FindByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента по заданному уникальному идентификатору.
            </summary>
            <param name="uid">
            Уникальный идентификатор искомого элемента менеджера.
            </param>
            <returns>Элемент менеджера с уникальным идентификатором <paramref name="uid"/>. Если элемент с уникальным 
            идентификатором <paramref name="uid"/> не найден, возвращается значение по умолчанию для текущего типа 
            элемента менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetByUId(System.Guid)">
            <summary>
            Возвращает элемент менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента менеджера.</param>
            <returns>Элемент менеджера с уникальным идентификатором <paramref name="uid"/>. Если элемент с уникальным 
            идентификатором <paramref name="uid"/> не найден, генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент менеджера с уникальным идентификатором 
            <paramref name="uid"/> не найден.</exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.FindByName(System.String)">
            <summary>
            Осуществляет поиск элемента менеджера по заданному имени.
            </summary>
            <param name="name">Имя искомого элемента менеджера.</param>
            <returns>Элемент менеджера с именем <paramref name="name"/>. Если элемент с именем <paramref name="name"/> 
            не найден, возвращается значение по умолчанию для текущего типа.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetByName(System.String)">
            <summary>
            Возвращает элемент менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера.</param>
            <returns>Элемент менеджера с именем <paramref name="name"/>. Если элемент менеджера с именем 
            <paramref name="name"/> не найден, генерируется исключение.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в элемент менеджера с именем <paramref name="name"/> не найден.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.RemoveItemByUId(System.Guid)">
            <summary>
            Удаляет элемент менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента менеджера, который необходимо удалить.</param>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.RemoveItemByName(System.String)">
            <summary>
            Удаляет элемент менеджера с заданным именем.
            </summary>
            <param name="name">Имя элемента менеджера, который необходимо удалить.</param>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.Clear">
            <summary>
            Удаляет все элементы менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemCollection`1.ItemCount">
            <summary>
            Количество элементов коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetItems">
            <summary>
            Возвращает перечислитель элементов менеджера.
            </summary>
            <returns>Перечислитель элементов менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            Возвращает перечислитель элементов менеджера, которые соответствуют заданным критериям.
            </summary>
            <param name="match">Критерии, которым должны соответствовать возвращаемые элементы менеджера.</param>
            <returns>
            Перечислитель элементов менеджера, которые соответствуют критериям <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetItems">
            <summary>
            Возвращает перечислитель элементов менеджера текущего типа.
            </summary>
            <returns>Перечислитель элементов менеджера текущего типа.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetItems(System.Predicate{`0})">
            <summary>
            Возвращает перечислитель элементов менеджера текущего типа.
            </summary>
            <returns>Перечислитель элементов менеджера текущего типа.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.FindByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента коллекции текущего типа по заданному уникальному идентификатору.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента коллекции.</param>
            <returns>Элемент коллекции текущего типа с уникальным идентификатором <paramref name="uid"/>. 
            Если элемент с уникальным идентификатором <paramref name="uid"/> в коллекции не найден, возвращается 
            значение по умолчанию для текущего типа элемента менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#FindByUId(System.Guid)">
            <summary>
            Осуществляет поиск элемента коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/> по заданному уникальному 
            идентификатору.
            </summary>
            <param name="uid">Уникальный идентификатор искомого элемента коллекции.</param>
            <returns>Элемент коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/>с уникальным идентификатором 
            <paramref name="uid"/>. Если элемент с уникальным идентификатором <paramref name="uid"/> в коллекции не 
            найден, возвращается значение по умолчанию для текущего типа элемента менеджера.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetByUId(System.Guid)">
            <summary>
            Возвращает элемент коллекции текущего типа с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента коллекции.</param>
            <returns>Элемент коллекции текущего типа с уникальным идентификатором <paramref name="uid"/>. 
            Если элемент с идентификатором <paramref name="uid"/> в коллекции не найден, генерируется исключение.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в коллекции элементов менеджера не найден элемент с уникальным 
            идентификатором <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetByUId(System.Guid)">
            <summary>
            Возвращает элемент коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/>с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента коллекции.</param>
            <returns>Элемент коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/>с уникальным идентификатором 
            <paramref name="uid"/>. Если элемент с идентификатором <paramref name="uid"/> в коллекции не найден, 
            генерируется исключение.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в коллекции элементов менеджера не найден элемент с уникальным 
            идентификатором <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.FindByName(System.String)">
            <summary>
            Осуществляет поиск элемента коллекции текущего типа с заданным именем.
            </summary>
            <param name="name">Имя искомого элемента коллекции.</param>
            <returns>Элемент коллекции текущего типа с именем <paramref name="name"/>. 
            Если элемент с именем <paramref name="name"/> в коллекции не найден, возвращается 
            значение по умолчанию для текущего типа.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#FindByName(System.String)">
            <summary>
            Осуществляет поиск элемента коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/> с заданным именем.
            </summary>
            <param name="name">Имя искомого элемента коллекции.</param>
            <returns>Элемент коллекции текущего типа с именем <paramref name="name"/>. 
            Если элемент с именем <paramref name="name"/> в коллекции не найден, возвращается 
            значение по умолчанию для текущего типа.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetByName(System.String)">
            <summary>
            Возвращает элемент коллекции текущего типа с заданным именем.
            </summary>
            <param name="name">Имя искомого элемента коллекции.</param>
            <returns>Элемент коллекции текущего типа с именем <paramref name="name"/>. Если элемент с именем 
            <paramref name="name"/> в коллекции не найден, генерируется исключение.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в коллекции элементов менеджера не найден элемент с именем 
            <paramref name="name"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetByName(System.String)">
            <summary>
            Возвращает элемент коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/> с заданным именем.
            </summary>
            <param name="name">Имя искомого элемента коллекции.</param>
            <returns>Элемент коллекции типа <see cref="T:Terrasoft.Core.IManagerItem"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Check(`0)">
            <summary>
            Определяет наличие в текущей коллекции элементов менеджера заданного элемента.
            </summary>
            <param name="item">Элемент, наличие которого проверяется.</param>
            <exception cref="T:System.ArgumentException">
            Если в текущей коллекции элемент <paramref name="item"/> не обнаружен.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveAllItemsByUId(System.Guid)">
            <summary>
            Удаляет из текущей коллекции элементов менеджера все элементы с заданным уникальным идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элементов, которые необходимо удалить.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции элементов менеджера не найдены элементы с 
            уникальным идентификатором <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveItemByUId(System.Guid)">
            <summary>
            Удаляет из текущей коллекции элементов менеджера первое вхождение элемента с заданным уникальным 
            идентификатором.
            </summary>
            <param name="uid">Уникальный идентификатор элемента, который необходимо удалить.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции элементов менеджера не найден элемент с 
            уникальным идентификатором <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveItemByName(System.String)">
            <summary>
            Удаляет из текущей коллекции элементов менеджера первое вхождение элемента с заданным именем. 
            </summary>
            <param name="name">Имя элемента, который необходимо удалить.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции элементов менеджера не найден элемент с 
            именем <paramref name="name"/>.</exception>
        </member>
        <member name="P:Terrasoft.Core.ManagerItemCollection`1.ItemCount">
            <summary>
            Количество элементов коллекции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.SystemEntitySchemaManager">
            <summary>
            Менеджер схем системных объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает генератор исходных кодов схем, используя заданное пользовательское 
            подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Генератор исходных кодов схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает генератор схем процессов, используя заданное пользовательское подключение. 
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Генератор схем процессов.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetMetaDataSerializer(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает сериализатор метаданных схем, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Сериализатор метаданных схем.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Инициализирует менеджер схем, используя заданный провайдер и информацию конфигурационного файла.
            </summary>
            <param name="provider">Провайдер менеджера схем.</param>
            <param name="configuration">Информация конфигурационного файла.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Актуализирует дескриптор элемента менеджера схем.
            </summary>
            <param name="item">Элемент менеджера, в котором необходимо актуализировать дескриптор.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.SaveSchema(System.Guid,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary> 
            Сохраняет схему с заданным идентификатором, используя заданное пользовательское подключение.
            В зависимости от значения признака <paramref name="validateNamePrefixes"/> перед сохранением схемы
            проверяется допустимость префиксов имен схемы и ее элементов.
            </summary>
            <param name="uid">Идентификатор созраняемой схемы.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="validateNamePrefixes"><c>true</c>, если перед сохранением схемы нужно проверить, являются ли
            допустимыми префиксы имен текущей схемы и ее элементов.</param>
            <returns><c>true</c>, если сохранение схемы с идентификатором <paramref name="uid"/> выполнено успешно;
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetSchemaOppositeReferences(System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnUsageType,Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает коллекцию связей схемы с заданными идентификатором, типом использования и 
            пользовательским подключением.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="usageType">Тип использования.</param>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Коллекция связей схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetSchemaChildren(System.Guid)">
            <summary>
            Возвращает коллекцию ссылок на схемы, которые являются наследниками схемы с заданным идентификатором.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <returns>Коллекция ссылок на схемы, являющихся наследниками схемы с идентификатором 
            <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.ItemCaption">
            <summary>
            Заголовок элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.ResourceManagerName">
            <summary>
            Имя менеджера ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.DataValueTypeManager">
            <summary>
            Менеджер значений типов данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.SystemValueManager">
            <summary>
            Менеджер системных значений.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.HashFunc">
            <summary>
            Функция хеширования. По умолчанию - MD5.
            </summary>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если устанавливаемое значение равно <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.SystemEntitySchemaManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeInstance(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Entities.EntitySchema})">
            <summary>
            Инициализирует экземпляр системной схемы в заданном элементе менеджера. 
            </summary>
            <param name="item">Элемент менеджера, для которого создается экземпляр.</param>
            <returns>Проинициализированный экземпляр системной схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeItems">
            <summary>
            Выполняет инициализацию элементов менеджера.
            </summary>
            <returns>
            <c>true</c>, если инициализация элементов менеджера прошла успешно; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeEntitySchemaRights">
            <summary>
            Выполняет инициализацию прав на схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Создает экземпляр схемы по типу, указанному в переданном элементе менеджера. Если тип схемы не найден, 
            генерируется исключение.</summary>
            <param name="schemaManagerItem">Элемент менеджера, в котором должна быть проинициализирована схема.</param>
            <param name="assembly">Сборка, которая содержит тип схемы, экземпляр которой создается.</param>
            <returns>Пронициализированный экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.ActualizeLicPackageOperations(System.String)">
            <summary>
            Актуализирует список доступных условных лицензионных операций для указанного лицензионного решения.
            </summary>
            <param name="licPackageName">Имя лицензионного решения.</param>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.ActualizeLicPackagesOperations">
            <summary>
            Актуализирует список доступных условных лицензионных операций для всех лицензионных решений.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageMaxConditionCount(System.String)">
            <summary>
            Возвращает граничное значение условной лицензии для лицензионного решения <paramref name="licPackageName"/>.
            </summary>
            <param name="licPackageName">Имя лицензионного решения.</param>
            <remarks>
            Возвращает -1, если лицензионное решение не найдено либо не содержит условных лицензий.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageCurrentConditionResult(System.String)">
            <summary>
            Возвращает актуальный результат проверки условной лицензии для лицензионного решения
            <paramref name="licPackageName"/>.
            </summary>
            <param name="licPackageName">Имя лицензионного решения.</param>
            <remarks>
            Возвращает 0, если лицензионное решение не найдено либо не содержит условных лицензий.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageCurrentConditionDate(System.String)">
            <summary>
            Возвращает дату и время (UTC) последней проверки условной лицензии для лицензионного решения
            <paramref name="licPackageName"/>.
            </summary>
            <param name="licPackageName">Имя лицензионного решения.</param>
            <remarks>
            Возвращает минимальную дату, если лицензионное решение не найдено либо не содержит условных лицензий.
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.IWorkspaceManager">
            <summary>Интерфейс для манипулирования рабочими пространствами пользователя (workspace)</summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Func">
            <summary>
            Предоставляет служебные методы для работы функциями.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(System.String)">
            <summary>
            Возвращает функцию для вычисления количества непустых значений колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая количество непустых значений в колонке с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(System.String,System.String)">
            <summary>
            Возвращает функцию для вычисления количества непустых значений колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая количество непустых значений колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для вычисления количества непустых значений переданного выражения колонки.
            </summary>
            <param name="columnExpression">Выражение колонки запроса.</param>
            <returns>Функция, вычисляющая количество непустых значений выражения <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для вычисления количества непустых значений переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, вычисляющая количество непустых значений выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(System.String)">
            <summary>
            Возвращает функцию для вычисления суммы непустых значений колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая сумму непустых значений колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(System.String,System.String)">
            <summary>
            Возвращает функцию для вычисления суммы непустых значений колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая сумму непустых значений колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для вычисления суммы непустых значений переданного выражения колонки.
            </summary>
            <param name="columnExpression">Выражение колонки запроса.</param>
            <returns>Функция, вычисляющая сумму непустых значений выражения колонки <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для вычисления суммы непустых значений переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, вычисляющая сумму непустых значений выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(System.String)">
            <summary>
            Возвращает функцию для вычисления среднего значения колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая среднее значение колонки с псевдонимом <paramref name="sourceColumnAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(System.String,System.String)">
            <summary>
            Возвращает функцию для вычисления среднего значения колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая среднее значение колонке с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для вычисления среднего значения переданного выражения колонки.
            </summary>
            <param name="columnExpression">Выражение колонки.</param>
            <returns>Функция, вычисляющая среднее значение выражения <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для вычисления среднего значения переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, вычисляющая среднее значение выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(System.String)">
            <summary>
            Возвращает функцию для вычисления минимального значения колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая минимальное значение колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(System.String,System.String)">
            <summary>
            Возвращает функцию для вычисления минимального значения колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая минимальное значение колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для вычисления минимального значения переданного выражения колонки.
            </summary>
            <param name="columnExpression">Выражение колонки.</param>
            <returns>Функция, вычисляющая минимальное значение выражения колонки <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для вычисления минимального значения переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, вычисляющая минимальное значение выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(System.String)">
            <summary>
            Возвращает функцию для вычисления максимального значения колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая максимальное значение колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(System.String,System.String)">
            <summary>
            Возвращает функцию для вычисления максимального значения колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, вычисляющая максимальное значение колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для вычисления максимального значения переданного выражения колонки.
            </summary>
            <param name="columnExpression">Выражение колонки.</param>
            <returns>Функция, вычисляющая максимальное значение выражения колонки <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для вычисления максимального значения переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, вычисляющая максимальное значение выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.IsNull(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию замены значения <c>null</c> замещающим выражением для заданных проверяемого и 
            замещающего выражений.
            </summary>
            <param name="checkExpression">Выражение, которое необходимо проверить на равенство <c>null</c>.</param>
            <param name="replacementValue">Выражение, возвращаемое функцией, если <paramref name="checkExpression"/> 
            равно <c>null</c>.</param>
            <returns>Функция, которая заменяет значение <c>null</c> в выражении <paramref name="checkExpression"/> на 
            выражение <paramref name="replacementValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.IsNull(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию замены значения <c>null</c> замещающим выражением для заданных проверяемого и 
            замещающего выражений.
            </summary>
            <param name="checkExpression">Выражение, которое необходимо проверить на равенство <c>null</c>.</param>
            <param name="replacementValue">Выражение, возвращаемое функцией, если <paramref name="checkExpression"/> 
            равно <c>null</c>.</param>
            <returns>Функция, которая заменяет значение <c>null</c> в выражении <paramref name="checkExpression"/> на 
            выражение <paramref name="replacementValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CreateGuid">
            <summary>
            Возвращает функцию генерации нового идентификатора.
            </summary>
            <returns>Функция, которая генерирует новый идентификатор.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CurrentDateTime">
            <summary>
            Возвращает функцию текущей даты и времени.
            </summary>
            <returns>Функция, возвращающая текущие дату и время.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Возвращает функцию возврата первого выражения из переданной коллекции выражений колонок, не 
            равного <c>null</c>.
            </summary>
            <param name="expressions">Коллекция выражений колонок.</param>
            <returns>Функция, возвращающая первое выражение из коллекции <paramref name="expressions"/>, не равное 
            <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            Возвращает функцию определения первого не равного <c>null</c> значения из заданного массива выражений 
            колонок.
            </summary>
            <param name="expressions">Массив выражений колонок.</param>
            <returns>Функция, возвращающая первое выражение из массива выражений колонок 
            <paramref name="expressions"/>, не равное <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            Возвращает функцию определения первого не равного <c>null</c> значения из заданного массива выражений.
            </summary>
            <param name="expressions">Массив выражений.</param>
            <returns>Функция, возвращающая первое выражение массива <paramref name="expressions"/>, не равное 
            <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.String)">
            <summary>
            Возвращает функцию определения указанной части даты для колонки с заданным псевдонимом.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты <paramref name="interval"/> для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.String,System.String)">
            <summary>
            Возвращает функцию определения указанной части даты для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты <paramref name="interval"/> для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию определения указанной части даты для переданного выражении колонки.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="expression">Выражение колонки запроса.</param>
            <returns>Функция, возвращающая часть даты <paramref name="interval"/> для выражения 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию определения указанной части даты для переданного выражения.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты <paramref name="interval"/> для выражения 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(System.String)">
            <summary>
            Возвращает функцию определения части даты [День] для колонки с заданным псевдонимом. 
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [День] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [День] для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [День] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [День] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [День] для выражения колонки <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [День] для переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [День] для выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(System.String)">
            <summary>
            Возвращает функцию для определения части даты [Неделя] для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Неделя] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [Неделя] для колонки с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Неделя] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [Неделя] для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [Неделя] для выражения колонки <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [Неделя] для заданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [Неделя] для выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(System.String)">
            <summary>
            Возвращает функцию для определения части даты [Месяц] для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Неделя] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [Месяц] для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Месяц] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [Месяц] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [Месяц] для выражения колонки <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(System.String)">
            <summary>
            Возвращает функцию для определения части даты [Год] для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Год] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [Год] для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Год] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(System.String)">
            <summary>
            Возвращает функцию для определения части даты [Час] для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Час] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [Час] для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Час] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [Час] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [Час] для выражения колонки <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [Час] для переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [Час] для выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(System.String)">
            <summary>
            Возвращает функцию для определения части даты [Минута] для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [Минута] для колонки с заданным псевдонимом.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [Минута] для колонки с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая компонент [Минута] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [Минута] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [Минута] для выражения колонки <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [Минута] для переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [Минута] для выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(System.String)">
            <summary>
            Возвращает функцию для определения части даты [День недели] для колонки с заданным псевдонимом. 
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [День недели] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(System.String,System.String)">
            <summary>
            Возвращает функцию для определения части даты [День недели] для колонки с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, возвращающая часть даты [День недели] для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [Месяц] для переданного выражения.
            </summary> 
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [Месяц] для выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [Год] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [Год] для выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [Год] для переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [Год] для выражения <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для определения части даты [День недели] для переданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, возвращающая часть даты [День недели] для выражения колонки 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию для определения части даты [День недели] для переданного выражения.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Функция, возвращающая часть даты [День недели] для выражения <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Cast(System.String,Terrasoft.Core.DBDataValueType)">
            <summary>
            Возвращает функцию приведения значения колонки с заданным псевдонимом к указанному типу данных.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="dataValueType">Целевой тип данных.</param>
            <returns>Функция приведения значений колонки с псевдонимом <paramref name="sourceColumnAlias"/> к типу 
            данных <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Cast(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            Возвращает функцию для приведения заданного выражения колонки к указанному типу данных.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <param name="dataValueType">Целевой тип данных.</param>
            <returns>Функция приведения выражения <paramref name="expression"/> к типу данных 
            <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(System.String)">
            <summary>
            Возвращает функцию для преобразования символов значения колонки с заданным псевдонимом к верхнему регистру.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, преобразующая символы значений колонки с псевдонимом <paramref name="sourceColumnAlias"/> 
            к верхнему регистру.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(System.String,System.String)">
            <summary>
            Возвращает функцию для преобразования символов значения колонки с заданным псевдонимом из указанного 
            источника к верхнему регистру.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Функция, преобразующая символы значений колонки с псевдонимом <paramref name="sourceColumnAlias"/> 
            из источника <paramref name="sourceAlias"/> к верхнему регистру.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию для преобразования символов значения переданного выражения колонки к верхнему регистру.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <returns>Функция, преобразующая символы значения выражения колонки <paramref name="expression"/> к верхнему 
            регистру.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            часть даты, временной промежуток и псевдоним колонки, содержащей исходное значение даты.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, которая содержит исходное значение даты и времени.
            </param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            часть даты, временой промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, которая содержит исходное значение даты и времени.
            </param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            часть даты, временной промежуток и выражение колонки, содержащей исходное значение даты и времени.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            часть даты, временной промежуток и выражение колонки, содержащей исходное значение даты и времени.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [День].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День].
            </summary>
            <param name="numberExpression">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День недели].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [День недели].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День недели].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [День недели].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Неделя].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [Неделя].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Неделя].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Неделя].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Месяц].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [Месяц].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Месяц].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Месяц]. 
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Год].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [Год].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Год].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Год].
            </summary>
            <param name="numberExpression">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Год].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и псевдоним колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной интервал, выступает [Час].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток, псевдоним источника и псевдоним колонки, содержащей исходное значение даты и времени. 
            В качестве части даты, к которой добавляется временной промежуток, выступает [Час].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Час].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, которой в качестве аргументов передаются 
            временной промежуток и выражение колонки, содержащей исходное значение даты и времени. В качестве части 
            даты, к которой добавляется временной промежуток, выступает [Час].
            </summary>
            <param name="number">Добавляемый временной промежуток.</param>
            <param name="expression">Выражение колонки, содержащей исходное значение даты и времени.</param>
            <returns>Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает функцию определения разницы дат для переданных выражений колонок.
            </summary>
            <param name="interval">Единица измерения разницы дат.</param>
            <param name="startDateExpression">Выражение колонки, содержащей начальную дату.</param>
            <param name="endDateExpression">Выражение колонки, содержащей конечную дату.</param>
            <returns>Функция, возвращающая разницу дат <paramref name="interval"/> для выражений
            <paramref name="startDateExpression"/> и <paramref name="endDateExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Возвращает функцию определения разницы дат для переданных выражений колонок.
            </summary>
            <param name="interval">Единица измерения разницы дат.</param>
            <param name="startDateExpression">Выражение колонки, содержащей начальную дату.</param>
            <param name="endDateExpression">Выражение колонки, содержащей конечную дату.</param>
            <returns>Функция, возвращающая разницу дат <paramref name="interval"/> для выражений
            <paramref name="startDateExpression"/> и <paramref name="endDateExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,System.String,System.String)">
            <summary>
            Возвращает функцию определения разницы дат для переданных выражений колонок.
            </summary>
            <param name="interval">Единица измерения разницы дат.</param>
            <param name="startDateSourceColumnAlias">Псевдоним колонки, содержащей начальное значение даты и времени.
            </param>
            <param name="endDateSourceColumnAlias">Псевдоним колонки, содержащей конечное значение даты и времени.
            </param>
            <returns>Функция, возвращающая разницу дат <paramref name="interval"/> для выражений
            <paramref name="startDateSourceColumnAlias"/> и <paramref name="endDateSourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DataLength(System.String)">
            <summary>
            Возвращает функцию возврата числа байтов, использованных для представления выражения.
            </summary>
            <param name="columnName">Имя колонки.</param>
            <returns>Функция, вычисляющая длину колонки с названием <paramref name="columnName"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.SchemaLocalizablePropertyChangeAction">
            <summary>
            Действия с локализированными значениями схемы.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Edit">
            <summary>
            Редактирование.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Delete">
            <summary>
            Удаление.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Rename">
            <summary>
            Переименование.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Culture">
            <summary>
            Культура.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.SourceUId">
            <summary>
            Уникальный идентификатор.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.PropertyName">
            <summary>
            Имя свойства.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.ActionValue">
            <summary>
            Значение действия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Action">
            <summary>
            Действие.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ChangedSchemaMethod.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.ChangedSchemaMethod"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ChangedSchemaMethod.#ctor(System.String,System.Boolean)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.ChangedSchemaMethod"/>.
            </summary>
            <param name="name">Имя метода.</param>
            <param name="isNew">Признак, метод был создан, но еще не опубликован.</param>
        </member>
        <member name="P:Terrasoft.Core.ChangedSchemaMethod.Name">
            <summary>
            Имя метода.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ChangedSchemaMethod.IsNew">
            <summary>
            Признак, метод был создан, но еще не опубликован.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaKind">
            <summary>
            Тип схемы.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.General">
            <summary>
            Обычная.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.RecordRight">
            <summary>
            Права по записям.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.TrackChangesInDB">
            <summary>
            Отслеживание изменений по записям.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType">
            <summary>
            Типы наследования схем на уровне базе данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType.IndependentTable">
            <summary>
            Независимое наследование. Структура наследника полностью копирует структуру родителя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType.OneToOneParentAssociation">
            <summary>
            Наследование один к одному. Структура наследника не копирует структуру родителя, а ссылается на него и 
            содержит свои специфические колонки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IsVirtualAttribute">
            <summary>
            Определяет атрибут виртуальности схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IsDBViewAttribute">
            <summary>
            Атрибут требует реализации схемы в виде представления на уровне базы данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSettings.SetDefValue(Terrasoft.Core.UserConnection,System.String,System.Object)">
            <summary>
            Устанавливает значение системной настройки по умолчанию.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="code">Код системной настройки.</param>
            <param name="value">Значение системной настройки.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSettingsValue.SetDefValue(Terrasoft.Core.UserConnection,Terrasoft.Core.Configuration.SysSettings,System.Object)">
            <summary>
            Устанавливает значение системной настройки по умолчанию.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="settings">Системная настройка.</param>
            <param name="value">Значение системной настройки.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.ICacheableQuery">
            <summary>
            Предоставляет методы и свойства кэшируемого запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ICacheableQuery.ResetCachedSqlText">
            <summary>
            Очищает кэшированный текст запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ICacheableQuery.IsCacheEnabled">
            <summary>
            Определяет, кэшируется ли текст запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ICacheableQuery.CachedSqlText">
            <summary>
            Кэшированный текст запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Column">
            <summary>
            Предоставляет служебные методы для работы с выражениями колонок запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SourceColumn(System.String)">
            <summary>
            Возвращает выражение для колонки запроса с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки запроса.</param>
            <returns>Выражение колонки запроса с псевдонимом <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SourceColumn(System.String,System.String)">
            <summary>
            Возвращает выражение для колонки запроса с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним колонки запроса.</param>
            <param name="sourceColumnAlias">Псевдоним источника.</param>
            <returns>Выражение для колонки запроса с псевдонимом <paramref name="sourceAlias"/> из источника 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Asterisk">
            <summary>
            Возвращает выражение типа [Все колонки].
            </summary>
            <returns>Выражение типа [Все колонки].</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Asterisk(System.String)">
            <summary>
            Возвращает выражение типа [Все колонки] для источника с заданным псевдонимом.
            </summary>
            <param name="sourceAlias">Псевдоним источника данных.</param>
            <returns>Выражение типа [Все колонки] для данных с псевдонимом <paramref name="sourceAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Const(System.Object)">
            <summary>
            Возвращает выражение типа [Константа] для переданного значения.
            </summary>
            <param name="value">Значение, для которого создается выражение.</param>
            <returns>Выражение типа [Константа] для значения <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object)">
            <summary>
            Возвращает выражение типа [Параметр] с заданным значением.
            </summary>
            <param name="value">Значение параметра.</param>
            <returns>Выражение типа [Параметр] со значением <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,System.String,Terrasoft.Common.ParameterDirection)">
            <summary>
            Возвращает выражение типа [Параметр] с заданными значением, именем и направлением передачи параметра.
            </summary>
            <param name="value">Значение параметра.</param>
            <param name="name">Имя параметра.</param>
            <param name="direction">Направление передачи параметра.</param>
            <returns>Выражение типа [Параметр] с именем <paramref name="name"/>, значением 
            <paramref name="value"/> и направлением передачи <paramref name="direction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.IO.Stream)">
            <summary>
            Возвращает выражение типа [Параметр] с заданным значением.
            </summary>
            <param name="streamValue">Значение параметра.</param>
            <returns>Выражение типа [Параметр] со значением <paramref name="streamValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Возвращает выражение типа [Параметр] с заданным значением заданного типа данных.
            </summary>
            <param name="value">Значение параметра.</param>
            <param name="parameterType">Тип данных значения параметра.</param>
            <returns>Выражение типа [Параметр] со значением <paramref name="value"/> типа данных 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,System.String)">
            <summary>
            Возвращает выражение типа [Параметр] с заданным значением типа данных с указанным именем.
            </summary>
            <param name="value">Значение параметра.</param>
            <param name="parameterTypeName">Имя типа данных значения параметра.</param>
            <returns>Выражение типа [Параметр] со значением <paramref name="value"/>, которое имеет тип данных с именем 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameters``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Возвращает выражение типа [Параметр] со значениями из заданного перечислителя.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="values">Перечислитель значений параметров.</param>
            <returns>Выражение типа [Параметр] со значениями из перечислителя <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameters(System.Object[])">
            <summary>
            Возвращает выражение типа [Параметр] со значениями из переданного массива.
            </summary>
            <param name="values">Массив значений параметров.</param>
            <returns>Выражение типа [Параметр] со значениями из массива <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SubSelect(Terrasoft.Core.DB.Select)">
            <summary>
            Возвращает выражение типа [Подзапрос] для переданного подзапроса на выборку.
            </summary>
            <param name="select">Подзапрос на выборку.</param>
            <returns>Выражение типа [Подзапрос] для подзапроса на выборку <paramref name="select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SubSelect(Terrasoft.Core.DB.Query)">
            <summary>
            Возвращает выражение типа [Подзапрос] для переданного произвольного подзапроса.
            </summary>
            <param name="selectQuery">Произвольный подзапрос.</param>
            <returns>Выражение типа [Подзапрос] для произвольного подзапроса <paramref name="selectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SqlText(System.String)">
            <summary>
            Возвращает выражение типа [Sql-текст] для заданного текста.
            </summary>
            <param name="value">Текст.</param>
            <returns>Выражение типа [Sql-текст] для текста <paramref name="value"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryJoinRightLevel">
            <summary>Условия наложения прав при использовании связанных таблиц, 
            если схема администрируется по записям.</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledAlways">
            <summary>Всегда</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledForAdditionalColumns">
            <summary>Накладывать только если из связанной схемы в запросе используются колонки отличные первичной 
            (PrimaryColumn) и первичной для отображения</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.Disabled">
            <summary>Никогда не накладывать</summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IQueryExpression">
            <summary>
            Предоставляет методы и свойства выражения запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IQueryExpression.Alias">
            <summary>
            Псевдоним выражения запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.JoinType">
            <summary>
            Вид оператора Join.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.Inner">
            <summary>
            Внутреннее соединение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.LeftOuter">
            <summary>
            Левое внешнее соединение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.RightOuter">
            <summary>
            Правое внешнее соединение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.FullOuter">
            <summary>
            Полное соединение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.Cross">
            <summary>
            Перекрестное соединение.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Join">
            <summary>
            Оператор Join запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Join"/> для заданного родительского запроса.
            </summary>
            <param name="parentQuery">Родительский запрос.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Select,Terrasoft.Core.DB.JoinType)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Join"/> указанного типа для заданного родительского запроса.
            </summary>
            <param name="parentSelect">Родительский запрос.</param>
            <param name="joinType">Тип оператора <c>Join</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Join)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, являющийся клоном переданного оператора <c>Join</c>.
            </summary>
            <param name="source">Оператор <c>Join</c>, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Join"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, представляющий копию текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.As(System.String)">
            <summary>
            Устанавливает псевдоним источника данных оператора Join. 
            </summary>
            <param name="alias">Псевдоним, устанавливаемый источнику данных оператора <c>Join</c>.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On">
            <summary>
            К текущему оператору <c>Join</c> добавляет пустое условие.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(System.String)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(System.String,System.String)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для колонки с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.Select)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.Query)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие оператора.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            К текущему оператору <c>Join</c> добавляет условие для переданного выражения колонки запроса.
            </summary>
            <param name="columnExpression">Выражение колонки запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.SourceExpression">
            <summary>
            Источник данных, присоединяемый оператором <c>Join</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.Condition">
            <summary>
            Условие оператора <c>Join</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.JoinType">
            <summary>
            Тип оператора <c>Join</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.JoinCollection">
            <summary>
            Коллекция операторов <c>Join</c> запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.JoinCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.#ctor(Terrasoft.Core.DB.JoinCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.JoinCollection"/>, являющийся клоном переданной коллекции 
            операторов <c>Join</c>.
            </summary>
            <param name="source">Коллекция операторов <c>Join</c>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.JoinCollection"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.JoinCollection"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.FindByAlias(System.String)">
            <summary>
            В текущей коллекции операторов <c>Join</c> осуществляет поиск оператора по заданному псевдониму 
            присоединяемого источника данных.
            </summary>
            <param name="alias">Псевдоним источника данных, присоединяемый искомым оператором.</param>
            <returns>Экземпляр оператора <see cref="T:Terrasoft.Core.DB.Join"/> с псевдонимом источника данных <paramref name="alias"/> 
            либо <c>null</c>, если оператор не найден.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.GetByAlias(System.String)">
            <summary>
            Из текущей коллекции операторов <c>Join</c> возвращает оператор с заданным псевдонимом присоединяемого 
            источника данных. Если оператор не найден в коллекции, генерируется исключение. 
            </summary>
            <param name="alias">Псевдоним источника данных, присоединяемый оператором <c>Join</c>.</param>
            <returns>Экземпляр оператора <see cref="T:Terrasoft.Core.DB.Join"/> с псевдонимом источника данных <paramref name="alias"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции операторов <c>Join</c> не найден оператор 
            с псевдонимом источника данных <paramref name="alias"/>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="alias"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.Exists(System.String)">
            <summary>
            Определяет, есть ли в текущей коллекции оператор <c>Join</c> с заданным псевдонимом присоединяемого 
            источника данных.
            </summary>
            <param name="alias">Псевдоним источника данных, присоединяемого искомым оператором.</param>
            <returns><c>true</c>, если в текущей коллекции операторов есть оператор, присоединяющий источник данных с 
            псевдонимом <paramref name="alias"/>; иначе - <c>false</c>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.ModifyQuerySource.Hints">
            <summary>
            Коллекция табличных указаний.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ModifyQuerySource.HasHints">
            <summary>
            Признак, определяющий, что существуют табличные указания.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.OrderByItem">
            <summary>
            Представляет выражение, по которому выполняется сортировка результатов запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Common.OrderDirectionStrict)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItem"/> для заданного выражения колонки с указанным 
            порядком сортировки.
            </summary>
            <param name="expression">Выражение колонки, по которому выполняется сортировка.</param>
            <param name="direction">Порядок сортировки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor(Terrasoft.Core.DB.OrderByItem)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItem"/>, являющийся клоном переданного выражения.
            </summary>
            <param name="source">Выражение, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.OrderByItem"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItem"/>, представляющий копию текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.OrderByItem.Expression">
            <summary>
            Выражение колонки, по которому выполняется сортировка.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.OrderByItem.Direction">
            <summary>
            Порядок сортировки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.OrderByItemCollection">
            <summary>
            Коллекция выражений, по которым выполняется сортировка результатов запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.#ctor(Terrasoft.Core.DB.OrderByItemCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>, являющийся копией переданной коллекцией 
            выражений для сортировки.
            </summary>
            <param name="source">Коллекция выражений для сортировки, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Query">
            <summary>
            Базовый класс запроса к базе данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GetSqlText">
            <summary>
            Возвращает текст запроса.
            </summary>
            <returns>Текст запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            Строит текст запроса, используя переданный экземпляр <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется 
            текст запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Query"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>, представляющий копию текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Execute">
            <summary>
            Выполняет текст запроса и возвращает количество строк, задействованных при выполнении запроса.
            </summary>
            <returns>Количество строк, задействованных при выполнении запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Execute(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Выполняет текст запроса, используя заданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, и возвращает число строк, 
            задействованных при выполнении запроса.
            </summary>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос.</param>
            <returns>Количество строк, задействованных при выполнении запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GetUsingParameters">
            <summary>
            Возвращает коллекцию параметров запроса.
            </summary>
            <returns>Коллекция параметров запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.ResetParameters">
            <summary>
            Очищает коллекцию параметров запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InitializeParameters">
            <summary>
            Инициализация параметров запроса.
            </summary>
            <returns>Коллекция проинициализированных параметров запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Terrasoft#Core#DB#IParametrizedQuery#InitializeParameters">
            <summary>
            Инициализация параметров запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,System.String)">
            <summary>
            Связывает с текущим запросом указанную схему, используя заданный тип соединения.
            </summary>
            <param name="joinType">Тип соединения.</param>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом схему с именем 
            <paramref name="schemaName"/>, используя тип соединения <paramref name="joinType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку данных, используя заданный тип соединения.
            </summary>
            <param name="joinType">Тип соединения.</param>
            <param name="subSelect">Связываемый подзапрос на выборку данных.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом подзапрос на 
            выборку данных <paramref name="subSelect"/>, используя тип соединения <paramref name="joinType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапрос, используя заданный тип соединения.
            </summary>
            <param name="joinType">Тип соединения.</param>
            <param name="subSelectQuery">Связываемый произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом произвольный 
            подзапрос <paramref name="subSelectQuery"/>, используя тип соединения <paramref name="joinType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя заданный тип соединения.
            </summary>
            <param name="joinType">Тип соединения.</param>
            <param name="sourceExpression">Связываемое выражение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом выражение 
            <paramref name="sourceExpression"/>, используя тип соединения <paramref name="joinType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(System.String)">
            <summary>
            Связывает с текущим запросом указанную схему, используя внутреннее соединение.
            </summary>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом схему с именем 
            <paramref name="schemaName"/>, используя внутреннее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку, используя внутреннее соединение.
            </summary>
            <param name="subSelect">Связываемый подзапрос на выборку.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом подзапрос на 
            выборку <paramref name="subSelect"/>, используя внутреннее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапрос, используя внутреннее соединение. 
            </summary>
            <param name="subSelectQuery">Связываемый произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом произвольный 
            подзапрос <paramref name="subSelectQuery"/>, используя внутреннее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя внутреннее соединение.
            </summary>
            <param name="sourceExpression">Связываемое выражение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом выражение 
            <paramref name="sourceExpression"/>, используя внутреннее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(System.String)">
            <summary>
            Связывает с текущим запросом схему с указанным именем, используя левое внешнее соединение.
            </summary>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом схему с именем 
            <paramref name="schemaName"/>, используя левое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку, используя левое внешнее соединение.
            </summary>
            <param name="subSelect">Связываемый подзапрос на выборку.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом подзапрос на 
            выборку <paramref name="subSelect"/>, используя левое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапрос, используя левое внешнее соединение.
            </summary>
            <param name="subSelectQuery">Связываемый произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом произвольный 
            подзапрос <paramref name="subSelectQuery"/>, используя левое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя левое внешнее соединение.
            </summary>
            <param name="sourceExpression">Связываемое выражение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом выражение 
            <paramref name="sourceExpression"/>, используя левое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(System.String)">
            <summary>
            Связывает с текущим запросом схему с указанным именем, используя правое внешнее соединение.
            </summary>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом схему с именем 
            <paramref name="schemaName"/>, используя правое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапрос, используя правое внешнее соединение.
            </summary>
            <param name="subSelect">Связываемый произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом произвольный 
            подзапрос <paramref name="subSelect"/>, используя правое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку, используя правое внешнее соединение.
            </summary>
            <param name="subSelectQuery">Связываемый подзапрос на выборку.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом подзапрос на 
            выборку <paramref name="subSelectQuery"/>, используя правое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя правое внешнее соединение.
            </summary>
            <param name="sourceExpression">Связываемое выражение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом выражение 
            <paramref name="sourceExpression"/>, используя правое внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(System.String)">
            <summary>
            Связывает с текущим запросом схему с указанным именем, используя полное внешнее соединение.
            </summary>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом схему с именем 
            <paramref name="schemaName"/>, используя полное внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку, используя полное внешнее соединение.
            </summary>
            <param name="subSelect">Связываемый подзапрос на выборку.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом подзапрос на 
            выборку <paramref name="subSelect"/>, используя полное внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапрос, используя полное внешнее соединение.
            </summary>
            <param name="subSelectQuery">Связываемый произвольный подзапрос.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом произвольный 
            подзапрос <paramref name="subSelectQuery"/>, используя полное внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя полное внешнее соединение.
            </summary>
            <param name="sourceExpression">Связываемое выражение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Join"/>, связывающий с текущим запросом выражение 
            <paramref name="sourceExpression"/>, используя полное внешнее соединение.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where">
            <summary>
            Добавляет в текущий запрос пустое начальное условие.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющее пустое начальное условие текущего запроса.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(System.String)">
            <summary>
            Добавляет в текущий запрос начальное условие для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, для которой добавляется условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющее начальное условие для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(System.String,System.String)">
            <summary>
            Добавляет в текущий запрос начальное условие для колонки с заданным псевдонимом из заданного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника с псевдонимом <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в текущий запрос в начальное условие для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, для результатов которого добавляется начальное условие.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие для результатов 
            подзапроса на выборку <paramref name="subSelect"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в текущий запрос начальное условие для результатов произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, для результатов которого добавляется начальное условие.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие для результатов 
            произвольного подзапроса <paramref name="subSelectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущий запрос начальное условие для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие для параметра 
            запроса <paramref name="parameter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Добавляет в текущий запрос начальное условие для значения переданного выражения. 
            </summary>
            <param name="columnExpression">Выражение, для значения которого добавляется начальное условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие в виде выражения 
            <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущий запрос начальное условие для значения переданного выражения.
            </summary>
            <param name="expression">Выражение, для значения которого добавляется начальное условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий начальное условие для значения выражения 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            Добавляет в текущий запрос в качестве начального условия переданное условие.
            </summary>
            <param name="condition">Условие запроса, добавляемое в качестве корневого условия к текущему запросу.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And">
            <summary>
            К текущему условию запроса добавляет пустое условие, используя логическую операцию И. 
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(System.String)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псеводнимом, используя логическую 
            операцию И.
            </summary>
            <param name="sourceColumnAlias"></param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(System.String,System.String)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псевдонимом из указанного источника, 
            используя логическую операцию И.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.Select)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный подзапрос на выборку, используя 
            логическую операцию И.
            </summary>
            <param name="subSelect">Подзапрос на выборку, добавляемый в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.Query)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный запрос, используя 
            логическую операцию И.
            </summary>
            <param name="subSelectQuery">Запрос, добавляемый в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            К текущему условию запроса добавляет предикат для переданного параметра запроса, используя логическую 
            операцию И.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное выражение.
            </summary>
            <param name="columnExpression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное выражение, используя логическую 
            операцию И.
            </summary>
            <param name="expression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное условие запроса, используя логическую 
            операцию И.
            </summary>
            <param name="condition">Условие запроса, добавляемое в качестве предиката.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or">
            <summary>
            К текущему условию запроса добавляет пустое условие, используя логическую операцию ИЛИ.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(System.String)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псевдонимом, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(System.String,System.String)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псевдонимом из указанного источника, 
            используя логическую операцию ИЛИ.
            </summary>
            <param name="sourceAlias">Псевдоним колонки.</param>
            <param name="sourceColumnAlias">Псевдоним источника.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.Select)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный подзапрос на выборку, используя 
            логическую операцию ИЛИ.
            </summary>
            <param name="subSelect">Подзапрос на выборку, добавляемый в качестве предиката в условие запроса. </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.Query)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный подзапрос, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="subSelectQuery">Подзапрос, добавляемый в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            К текущему условию запроса добавляет предикат для переданного параметра запроса, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            К текущему условию запросу добавляет в качестве предиката переданное выражение, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="columnExpression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное выражение, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="expression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное условие запроса, используя логическую 
            операцию ИЛИ.
            </summary>
            <param name="condition">Условие запроса, добавляемое в качестве предиката.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет пустое условие, используя указанную логическую операцию.
            </summary>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(System.String,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псевдонимом, используя указанную 
            логическую операцию.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(System.String,System.String,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет предикат для колонки с заданным псевдонимом из указанного источника, 
            используя указанную логическую операцию.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.Select,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный подзапрос на выборку, используя 
            заданную логическую операцию. 
            </summary>
            <param name="subSelect">Подзапрос на выборку, который добавляется в качестве предиката в условие запроса.
            </param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.Query,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданный подзапрос, используя указанную 
            логическую операцию.
            </summary>
            <param name="subSelectQuery">Подзапрос, который добавляется в качестве предиката к условию запроса.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryParameter,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет предикат для переданного параметра запроса, используя указанный тип 
            логической операции.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное выражение, используя указанную 
            логическую операцию.
            </summary>
            <param name="columnExpression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное выражение, используя указанную 
            логическую операцию.
            </summary>
            <param name="expression">Выражение, добавляемое в качестве предиката в условие запроса.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий результирующее условие запроса.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryCondition,Terrasoft.Common.LogicalOperation)">
            <summary>
            К текущему условию запроса добавляет в качестве предиката переданное условие запроса, используя указанную 
            логическую операцию.
            </summary>
            <param name="condition">Условие запроса, добавляемое в качестве предиката.</param>
            <param name="logicalOperation">Логическая операция, с помощью которой добавляется предикат.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="logicalOperation"/> 
            передается неопределенный тип логической операции.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.CloseBlock">
            <summary>
            Закрывает блок условий запроса.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если условие запроса не содержит открытых блоков.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,System.String)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке по колонке с заданным псевдонимом.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,System.String,System.String)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке по колонке с заданным псевдонимом из заданного 
            источника.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке, используя в качестве ключа сортировки 
            значение переданной функции.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="queryFunction">Функция, значение которой используется в качестве ключа сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.Select)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке, используя в качестве ключа сортировки 
            результаты переданного подзапроса на выборку.
            </summary>
            <param name="direction">Порядок сортировки.</param>
            <param name="subSelect">Подзапрос на выборку, результаты которого используются в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.Query)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке, используя в качестве ключа запроса результаты 
            переданного произвольного подзапроса.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="subSelectQuery">Произвольный подзапрос, результаты которого используются в качестве ключа 
            сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке, используя в качестве ключа сортировки 
            значение переданного выражения.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="columnExpression">Выражение, значение которого используется в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Выполняет сортировку результатов запроса в указанном порядке, используя в качестве ключа сортировки 
            значение переданного выражения.
            </summary>
            <param name="direction">Порядок сортировки результатов запроса.</param>
            <param name="expression">Выражение, значение которого используется в качестве ключа сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(System.String)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания по колонке с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(System.String,System.String)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания по колонке с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.Select)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания, используя в качестве ключа сортировки 
            результаты переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, результаты которого используются в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.Query)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания, используя в качестве ключа сортировки 
            результаты переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, результаты которого используются в качестве ключа 
            сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания, используя в качестве ключа сортировки 
            значение переданного выражения.
            </summary>
            <param name="columnExpression">Выражение, значение которого используется в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Выполняет сортировку результатов запроса в порядке возрастания, используя в качестве ключа сортировки 
            значение переданного выражения.
            </summary>
            <param name="expression">Выражение, значение которого используется в качестве ключа сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(System.String)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания по колонке с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(System.String,System.String)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания по колонке с заданным псевдонимом из указанного 
            источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется сортировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.Select)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания, используя в качестве ключа запроса результаты 
            переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, результаты которого используются в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.Query)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания, используя в качестве ключа запроса результаты 
            переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, результаты которого используются в качестве ключа 
            сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания, используя в качестве ключа сортировки значение 
            переданного выражения.
            </summary>
            <param name="columnExpression">Выражение, значение которого используется в качестве ключа сортировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Выполняет сортировку результатов запроса в порядке убывания, используя в качестве ключа сортировки значение 
            переданного выражения.
            </summary>
            <param name="expression">Выражение, значение которого используется в качестве ключа сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(System.String)">
            <summary>
            Выполняет группировку результатов запроса по колонке с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется группировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(System.String,System.String)">
            <summary>
            Выполняет группировку результатов запроса по колонке с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой выполняется группировка.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Выполняет группировку результатов запроса, используя в качестве ключа группировки значение переданного 
            выражения.
            </summary>
            <param name="columnExpression">Выражение, значение которого используется в качестве ключа группировки.
            </param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Выполняет группировку результатов запроса, используя в качестве ключа группировки значение переданного 
            выражения.
            </summary>
            <param name="expression">Выражение, значение которого используется в качестве ключа группировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having">
            <summary>
            Добавляет в текущий запрос пустое групповое условие.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий пустое групповое условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(System.String)">
            <summary>
            Добавляет в текущий запрос групповое условие для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой добавляется групповое условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(System.String,System.String)">
            <summary>
            Добавляет в текущий запрос групповое условие для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки, по которой добавляется групповое условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника с псевдонимом <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в текущий запрос групповое условие для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, для результатов которого добавляется групповое условие.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для результатов 
            подзапроса на выборку <paramref name="subSelect"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в текущий запрос групповое условие для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, для результатов которого добавляется групповое условие.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для результатов 
            произвольного подзапроса <paramref name="subSelectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущий запрос групповое условие для значения переданного выражения.
            </summary>
            <param name="expression">Выражение, для значения которого добавляется групповое условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для значения выражения 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущий запрос групповое условие для заданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса, для которого добавляется групповое условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для параметра запроса 
            <paramref name="parameter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Добавляет в текущий запрос групповое условие для значения переданного выражения.
            </summary>
            <param name="columnExpression">Выражение, для значения которого добавляется групповое условие.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, представляющий групповое условие для значения выражения 
            <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Union(Terrasoft.Core.DB.Select)">
            <summary>
            Объединяет с результатами текущего запроса результаты переданного запроса на выборку, исключая дубликаты 
            строк из результирующего набора.
            </summary>
            <param name="unionSelect">Запрос на выборку, результаты которого объединяются с результатами текущего 
            запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Union(Terrasoft.Core.DB.Query)">
            <summary>
            Объединяет с результатами текущего запроса результаты переданного произвольного запроса, исключая 
            дубликаты строк из результирующего набора.
            </summary>
            <param name="unionSelectQuery">Произвольный запрос, результаты которого объединяются с результатами 
            текущего запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.UnionAll(Terrasoft.Core.DB.Select)">
            <summary>
            Объединяет с результатами текущего запроса результаты переданного запроса на выборку, при этом дубликаты 
            строк не исключаются из результирующего набора.
            </summary>
            <param name="unionSelect">Запрос на выборку, результаты которого объединяются с результатами текущего 
            запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.UnionAll(Terrasoft.Core.DB.Query)">
            <summary>
            Объединяет с результатами текущего запроса результаты переданного произвольного запроса, при этом 
            дубликаты строк не исключаются из результирующего набора.
            </summary>
            <param name="unionSelectQuery">Произвольный запрос, результаты которого объединяются с результатами 
            текущего запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.ResetCachedSqlText">
            <summary>
            Очищает кэшированный текст запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.SetParameterValue(System.String,System.Object)">
            <summary>
            Устанавливает значение параметра запроса.
            </summary>
            <param name="name">Имя параметра.</param>
            <param name="value">Значение параметра.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.UserConnection">
            <summary>
            Пользовательское подключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.RowCount">
            <summary>
            Количество первых строк результирующего набора, возвращаемых запросом.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Parameters">
            <summary>
            Коллекция параметров запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasParameters">
            <summary>
            Определяет, имеет ли запрос параметры. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.BuildParametersAsValue">
            <summary>
            Определяет, добавлять ли параметры запроса в текст запроса как значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Joins">
            <summary>
            Коллекция предложений Join данного запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasJoins">
            <summary>
            Определяет, есть ли в данном запросе хотя бы одно предложение Join.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Condition">
            <summary>
            Возвращает условие Where запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasCondition">
            <summary>
            Определяет, есть ли в данном запросе условие Where.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HavingCondition">
            <summary>
            Возвращает предложение Having запроса. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasHavingCondition">
            <summary>
            Определяет, есть ли в данном запросе предложение Having.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.OrderByItems">
            <summary>
            Коллекция выражений, по которым выполняется сортировка результатов запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasOrderByItems">
            <summary>
            Указывает, определены ли выражения запроса, по которым нужно выполнять сортировку.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.GroupByItems">
            <summary>
            Коллекция выражений, по которым выполняется группировка результатов запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasGroupByItems">
            <summary>
            Указывает, определены ли в запросе выражения запроса, по которым нужно выполнять группировку.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.UnionQueries">
            <summary>
            Коллекция запросов, объединяемых с данным запросом оператором Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasUnionQueries">
            <summary>
            Определяет, имеет ли данный запрос объединяемые с ним запросы оператором Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.IsUnionTypeAll">
            <summary>
            Определяет, применять ли в данном запросе параметр All для оператора Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.IsCacheEnabled">
            <summary>
            Определяет, кэшируется ли текст запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.CachedSqlText">
            <summary>
            Кэшированный текст запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCaseItem">
            <summary>
            Элемент условия оператора CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/> с заданным условием запроса и 
            результирующим выражением.
            </summary>
            <param name="condition">Условие запроса.</param>
            <param name="resultExpression">Выражение, которое будет возвращено, если условие 
            <paramref name="condition"/> будет выполнено.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor(Terrasoft.Core.DB.QueryCaseItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>, являющееся копией переданного элемента.
            </summary>
            <param name="source">Новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>, являющийся копией переданного элемента 
            оператора CASE.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего элемента оператора CASE.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.AddCondition(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            Добавляет в текущий элемент переданное условие запроса.
            </summary>
            <param name="condition">Условие запроса.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCaseItem.Condition">
            <summary>
            Условие запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCaseItem.ResultExpression">
            <summary>
            Результирующее выражение. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCase">
            <summary>
            Выражение оператора CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.QueryCase"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.#ctor(Terrasoft.Core.DB.QueryCase)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.QueryCase"/>, являющийся копией переданного выражения оператора.
            </summary>
            <param name="source">Выражение оператора CASE, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryCase"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,System.String)">
            <summary>
            К текущему выражению оператора добавляет выражение предложения WHEN с заданными условием и псевдонимом 
            колонки результирующего выражения.
            </summary>
            <param name="condition">Условие предложения WHEN.</param>
            <param name="resultSourceColumnAlias">Псевдоним колонки результирующего выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.Select)">
            <summary>
            К текущему выражению оператора добавляет выражение предложения WHEN с заданными условием и подзапросом на 
            выборку, который возвращает результирующее выражение.
            </summary>
            <param name="condition">Условие предложения WHEN.</param>
            <param name="resultSubSelect">Подзапрос на выборку, возвращающий результирующее выражение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.Query)">
            <summary>
            К текущему выражению оператора добавляет выражение предложения WHEN с заданными условием и произвольным 
            подзапросом, который возвращает результирующее выражение.
            </summary>
            <param name="condition">Условие предложения оператора WHEN.</param>
            <param name="resultSubSelectQuery">Произвольный подзапрос, возвращающий результирующее выражение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            К текущему выражению оператора добавляет выражение предложения WHEN с заданными условием и параметром 
            результирующего выражения.
            </summary>
            <param name="condition">Условие предложения WHEN.</param>
            <param name="resultParameter">Параметр результирующего выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            К текущему выражению оператора добавляет предложение WHEN с заданными условием и выражением колонки 
            результирующего выражения.
            </summary>
            <param name="condition">Условие предложения WHEN.</param>
            <param name="resultColumnExpression">Выражение колонки результирующего выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(System.String)">
            <summary>
            Устанавливает в качестве выражения предложения ELSE текущего оператора выражение колонки с заданным 
            псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.Select)">
            <summary>
            Устанавливает в качестве выражения предложения ELSE текущего оператора выражение колонки для переданного 
            подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.Query)">
            <summary>
            Устанавливает в качестве предложения ELSE текущего оператора выражение колонки для переданного 
            произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Устанавливает в качестве предложения ELSE текущего оператора выражение колонки для заданного параметра 
            запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Устанавливает в качестве предложения ELSE текущего оператора заданное выражение колонки.
            </summary>
            <param name="columnExpression">Выражение колонки.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCase.ElseExpression">
            <summary>
            Выражение предложения ELSE.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpressionType">
            <summary>
            Тип выражения колонки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SourceColumnAlias">
            <summary>
            Псевдоним колонки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Asterisk">
            <summary>
            Все колонки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Const">
            <summary>
            Константа.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Parameter">
            <summary>
            Параметр.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SubSelect">
            <summary>
            Подзапрос.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Case">
            <summary>
            Выбор варианта.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Function">
            <summary>
            Функция.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.ArithmeticOperation">
            <summary>
            Арифметическая операция.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SqlText">
            <summary>
            Sql-текст.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpression">
            <summary>
            Выражение колонки запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для колонки с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для заданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Select,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для переданного подзапроса на выборку 
            с заданным псевдонимом.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <param name="alias">Псевдоним подзапроса на выборку.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Query,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для переданного произвольного подзапроса 
            с заданным псевдонимом.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <param name="alias">Псевдоним произвольного подзапроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryCase)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для заданного предложения <c>Case</c>. 
            </summary>
            <param name="queryCase">Предложение <c>Case</c> запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryCase,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для заданного предложения <c>Case</c> с 
            указанным псевдонимом.
            </summary>
            <param name="queryCase">Предложение <c>Case</c> запроса.</param>
            <param name="alias">Псевдоним предложения <c>Case</c> запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для заданной функции выражения.
            </summary>
            <param name="queryFunction">Функция выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryFunction,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для заданной функции выражения с 
            указанным псевдонимом.
            </summary>
            <param name="queryFunction">Функция выражения.</param>
            <param name="alias">Псевдоним функции выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для арифметической операции с заданными 
            операндами.
            </summary>
            <param name="arithmeticOperation">Арифметическая операция.</param>
            <param name="leftArithmeticOperand">Левый операнд арифметической операции.</param>
            <param name="rightArithmeticOperand">Правый операнд арифметической операции.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для арифметической операции с заданными 
            операндами и указанным псевдонимом.
            </summary>
            <param name="arithmeticOperation">Арифметическая операция.</param>
            <param name="leftArithmeticOperand">Левый операнд арифметической операции.</param>
            <param name="rightArithmeticOperand">Правый операнд арифметической операции.</param>
            <param name="alias">Псевдоним арифметической операции.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, являющийся клоном переданного выражения 
            колонки.
            </summary>
            <param name="source">Выражение колонки, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Negate(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Устанавливает отрицание переданного значения выражения колонки.
            </summary>
            <param name="operand">Выражение колонки.</param>
            <returns>Отрицание значения выражения колонки <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_UnaryNegation(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Оператор отрицания переданного выражения колонки.
            </summary>
            <param name="operand">Выражение колонки.</param>
            <returns>Отрицание выражения колонки <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Add(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает выражение арифметического сложения переданных выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции сложения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции сложения.</param>
            <returns>Новое выражение колонки, представляющее сумму выражений-операндов <paramref name="leftOperand"/> и 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического сложения для выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции сложения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции сложения.</param>
            <returns>Новое выражение колонки, представляющее сумму выражений-операндов <paramref name="leftOperand"/> и 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Перегрузка оператора арифметического сложения для выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции сложения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции сложения.</param>
            <returns>Новое выражение колонки, представляющее сумму выражений-операндов <paramref name="leftOperand"/> и 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического сложения для выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции сложения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции сложения.</param>
            <returns>Новое выражение колонки, представляющее сумму выражений-операндов <paramref name="leftOperand"/> и 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Subtract(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает выражение арифметического вычитания переданного правого выражения колонки из переданного левого 
            выражения колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции вычитания.</param>
            <returns>Новое выражение колонки, представляющее разность между выражениями-операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического вычитания правого выражения колонки из левого выражения колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции вычитания.</param>
            <returns>Новое выражение колонки, представляющее разность между выражениями - операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Перегрузка оператора арифметического вычитания правого выражения колонки из левого выражения колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции вычитания.</param>
            <returns>Новое выражение колонки, представляющее разность между выражениями - операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического вычитания правого выражения колонки из левого колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции вычитания.</param>
            <returns>Новое выражение колонки, представляющее разность между выражениями - операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает выражение арифметического умножения переданных выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции умножения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции умножения.</param>
            <returns>Новое выражение колонки, представляющее произведение выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического умножения двух выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции умножения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции умножения.</param>
            <returns>Новое выражение колонки, представляющее произведение выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Перегрузка оператора арифметического умножения двух выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции умножения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции умножения.</param>
            <returns>Новое выражение колонки, представляющее произведение выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического умножения двух выражений колонок.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд в операции умножения.</param>
            <param name="rightOperand">Выражение колонки - правый операнд в операции умножения.</param>
            <returns>Новое выражение колонки, представляющее произведение выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Divide(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Возвращает выражение арифметического деления переданного левого выражения колонки на переданное правое 
            выражение колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд операции деления.</param>
            <param name="rightOperand">Выражение колонки - правый операнд операции деления.</param>
            <returns>Новое выражение колонки, представляющее частное выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора арифметического деления левого выражения колокни на правое правое выражение колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд операции деления.</param>
            <param name="rightOperand">Выражение колонки - правый операнд операции деления.</param>
            <returns>Новое выражение колонки, представляющее частное выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Перегрузка оператора арифметического деления левого выражения колонки на правое выражение колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд операции деления.</param>
            <param name="rightOperand">Выражение колонки - правый операнд операции деления.</param>
            <returns>Новое выражение колонки, представляющее частное выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Перегрузка оператора деления левого выражения колонки на правое выражение колонки.
            </summary>
            <param name="leftOperand">Выражение колонки - левый операнд операции деления.</param>
            <param name="rightOperand">Выражение колонки - правый операнд операции деления.</param>
            <returns>Новое выражение колонки, представляющее частное выражений - операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Block">
            <summary>
            Помещает текущее выражение колонки в блок.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, помещенный в блок.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.GetQueryColumnExpression">
            <summary>
            Возвращает текущее выражение колонки.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ExpressionType">
            <summary>
            Тип выражения колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.IsBlock">
            <summary>
            Определяет, помещается ли выражение колонки в блок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.IsNegative">
            <summary>
            Определяет, является ли выражение колонки отрицанием.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Alias">
            <summary>
            Псевдоним выражения колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SourceAlias">
            <summary>
            Псевдоним источника.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SourceColumnAlias">
            <summary>
            Псевдоним колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ConstValue">
            <summary>
            Константное значение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Parameter">
            <summary>
            Параметр запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SubSelect">
            <summary>
            Подзапрос на выборку.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Case">
            <summary>
            Предложение <c>Case</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Function">
            <summary>
            Функция.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ArithmeticOperation">
            <summary>
            Арифметическая операция.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.LeftArithmeticOperand">
            <summary>
            Левый операнд арифметической операции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.RightArithmeticOperand">
            <summary>
            Правый операнд арифметической операции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SqlText">
            <summary>
            Sql-текст.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpressionCollection">
            <summary>
            Коллекция выражений колонок.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>, являющийся клоном переданной 
            коллекции выражений колонок.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>, представляющий копию текущего 
            экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddExpression(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок переданное выражение.
            </summary>
            <param name="expression">Выражение колонки, которое добавляется в текущую коллекцию.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(System.String)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним выражения колонки, которое добавляется в текущую коллекцию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(System.String,System.String)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение для заданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса, для которого добавляется выражение колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, для которого добавляется выражение колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, для которого добавляется выражение колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражение для переданной функции выражения.
            </summary>
            <param name="queryFunction">Функция выражения, для которой добавляется выражение колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddExpressionsRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.IQueryColumnExpressionConvertible})">
            <summary>
            Добавляет в текущую коллекцию выражений колонок диапазон выражений из заданного перечислителя.
            </summary>
            <param name="expressions">Перечислитель выражений колонок, которые добавляются в текущую коллекцию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryColumnExpression})">
            <summary>
            Добавляет в текущую коллекцию выражений колонок диапазон выражений из заданного перечислителя.
            </summary>
            <param name="columnExpressions">Перечислитель выражений колонок, которые добавляются в текущую коллекцию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Добавляет в текущую коллекцию выражений колонок диапазон выражений с псевдонимами из заданного 
            перечислителя.
            </summary>
            <param name="sourceColumnAliases">Перечислитель псевдонимов выражений колонок, который добавляются в 
            текущую коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryParameter})">
            <summary>
            Добавляет в текущую коллекцию выражений колонок диапазон выражений для параметров из переданного 
            перечислителя.
            </summary>
            <param name="parameters">Перечислитель параметров, для которых добавляются выражения в текущую коллекцию.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.ExistsByAlias(System.String)">
            <summary>
            Определяет, есть ли в текущей коллекции выражений колонок выражение с заданным псевдонимом.
            </summary>
            <param name="alias">Псевдоним искомого выражения колонки.</param>
            <returns><c>true</c>, если в текущей коллекции выражений колонок есть выражение с псевдонимом 
            <paramref name="alias"/>; иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.FindByAlias(System.String)">
            <summary>
            Возвращает из текущей коллекции выражений колонок выражение с заданным псевдонимом.
            </summary>
            <param name="alias">Псевдоним возвращаемого выражения колонки.</param>
            <returns>Выражение колонки с псевдонимом <paramref name="alias"/>, принадлежащее текущей коллекции.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.GetByAlias(System.String)">
            <summary>
            Возвращает из текущей коллекции выражений колонок выражение с заданным псевдонимом. Если выражение не 
            найдено в коллекции, генерируется исключение.
            </summary>
            <param name="alias">Псевдоним возвращаемого выражения колонки.</param>
            <returns>Выражение колонки с псевдонимом <paramref name="alias"/>, принадлежащее текущей коллекции.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если выражения колонки с псевдонимом 
            <paramref name="alias"/> не найдено в текущей коллекции.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в качестве параметра <paramref name="alias"/> передано пустое 
            значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.GetUniqueAlias(System.String,System.Int32)">
            <summary>
            Для заданного псевдонима выражения колонки генерирует уникальный псевдоним с заданной максимальной длиной.
            </summary>
            <param name="alias">Псевдоним выражения колонки, для которого генерится уникальный псевдоним.</param>
            <param name="aliasMaxLength">Максимальная длина уникального псевдонима.</param>
            <returns>Уникальный псевдоним для выражения колонки с псевдонимом <paramref name="alias"/>, который имеет 
            максимальную длину <paramref name="aliasMaxLength"/> символов.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryConditionType">
            <summary>
            Тип условия запроса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Blank">
            <summary>
            Пустое условие.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Block">
            <summary>
            Блок.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.IsNull">
            <summary>
            Является <c>null</c> в базе данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Equal">
            <summary>
            Равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.NotEqual">
            <summary>
            Не равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Greater">
            <summary>
            Больше.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.GreaterOrEqual">
            <summary>
            Больше или равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Less">
            <summary>
            Меньше.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.LessOrEqual">
            <summary>
            Меньше или равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Between">
            <summary>
            Диапазон значений.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Like">
            <summary>
            Совпадение строки с шаблоном.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.StartWith">
            <summary>
            Начинается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Contain">
            <summary>
            Содержит выражение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.EndWith">
            <summary>
            Заканчивается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.In">
            <summary>
            Входит в набор значений.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Exist">
            <summary>
            Существует по заданному условию.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCondition">
            <summary>
            Условие запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для заданного запроса.
            </summary>
            <param name="parentQuery">Запрос, для которого инициализируется экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryConditionType)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/> с заданным типом условия запроса.
            </summary>
            <param name="conditionType">Тип условия запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для заданного выражения.
            </summary>
            <param name="leftExpression">Выражение, для которого инициализируется экземпляр 
            <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, являющийся клоном заданного экземпляра 
            <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Not">
            <summary>
            Добавляет отрицание в текущее условие.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, в которое добавлено отрицание.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock">
            <summary>
            К текущему условию добавляет блок условия.
            </summary>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> типа блок, добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(System.String)">
            <summary>
            К текущему условию добавляет блок условия для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, для которой открывается блок выражения.</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/>, добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(System.String,System.String)">
            <summary>
            К текущему условию добавляет блок условия для колонки с заданным псевдонимом из указанного 
            источника.</summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для колонки с псевдонимом 
            <paramref name="sourceColumnAlias"/> из источника <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.Select)">
            <summary>
            К текущему условию добавляет блок условия для результатов заданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку, для результатов которого добавляется блок условия.</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для результатов подзапроса на выборку 
            <paramref name="subSelect"/>, добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.Query)">
            <summary>
            К текущему условию добавляет блок условия для результатов заданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос, для результатов которого добавляет блок условия.
            </param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для результатов подзапроса <paramref name="subSelectQuery"/>, 
            добавленное к текущему условию запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            К текущему условию добавляет блок условия для заданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса, для которого добавляется блок условия.</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для параметра запроса <paramref name="parameter"/>, 
            добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            К текущему условию добавляет блок условия для значения заданного выражения.
            </summary>
            <param name="columnExpression">Выражение, для значения которого добавляется блок условия.</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для значения выражения <paramref name="columnExpression"/>, 
            добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            К текущему условию добавляет блок условия для значения заданного выражения.
            </summary>
            <param name="expression">Выражение, для значения которого добавляется блок условия.</param>
            <returns>Условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/> для значения выражения <paramref name="expression"/>, 
            добавленное к текущему условию.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.WrapBlock">
            <summary>
            Помещает текущее условие в блок.
            </summary>
            <returns>Текущее условие <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, помещенное в блок.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNull">
            <summary>
            К текущему условию добавляет проверку, является ли значение выражения условия <c>null</c>.
            </summary>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия выражение для 
            колонки запроса с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия выражение для 
            результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия выражение для 
            результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия выражение для 
            переданного параметра запроса. 
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Равно] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="expression">Выражение, которого добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия выражение для 
            результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия выражение для 
            результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии запроса проверяет неравенство значения выражения условия и переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Не равно] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="expression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия выражение для 
            результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия выражение для 
            результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия выражение для 
            переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия переданное 
            выражение. 
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="expression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть 
            условия выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            выражение для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            переданное выражение.
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Больше или равно] и добавляет в правую часть условия 
            переданное выражения.
            </summary>
            <param name="expression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия выражение для 
            колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия выражение 
            для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия выражение для 
            результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия выражение для 
            результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия выражение для 
            переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше] и добавляет в правую часть условия переданное 
            выражение.
            </summary>
            <param name="expression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(System.String,System.String)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии запроса проверяет, является ли значение выражения условия меньшим или равным результатам 
            переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            переданное выражение. 
            </summary>
            <param name="columnExpression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии устанавливает тип сравнения [Меньше или равно] и добавляет в правую часть условия 
            переданное выражение.
            </summary>
            <param name="expression">Выражение, которое добавляется в правую часть условия.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(System.String)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(System.String,System.String)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии запроса проверяет, входит ли значение выражения условия в диапазон, нижняя граница 
            которого равна значению переданного выражения.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии запроса устанавливает тип сравнения [Диапазон значений] и добавляет в качестве нижней 
            границы переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Текущее условие запроса <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(System.String)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            выражение для колонки с заданным псевдонимом. 
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(System.String,System.String)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            переданный параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущем условии запроса типа [Диапазон сравнения] добавляет в качестве верхней границы диапазона 
            переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(System.String,System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.Select)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.Query)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Совпадение с шаблоном] и в качестве шаблона 
            устанавливает переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки, .</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(System.String,System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.Select)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.Query)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Начинается выражением] и с качестве шаблона сравнения 
            устанавливает переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(System.String,System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает выражение для колонки с заданным псевдонимом из указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.Select)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.Query)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Содержит выражение] и с качестве шаблона сравнения 
            устанавливает переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(System.String,System.String)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает выражение для колонки с заданным псевдонимом из указанного источника.</summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.Select)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.Query)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает выражение для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает выражение для переданного параметра запроса.
            </summary>
            <param name="parameter">Параметр запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            В текущее условие запроса добавляет сравнение типа [Заканчивается выражением] и с качестве шаблона 
            сравнения устанавливает переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного перечислителя псевдонимов колонок.
            </summary>
            <param name="sourceColumnAliases">Перечислитель псевдонимом колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.String[])">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного массива псевдонимов колонок.
            </summary>
            <param name="sourceColumnAliases">Массив псевдонимов колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryParameter})">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного перечислителя параметров запроса.
            </summary>
            <param name="parameters">Перечислитель параметров запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.QueryParameter[])">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного массива параметров запроса.
            </summary>
            <param name="parameters">Массив параметров запроса.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryColumnExpression})">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного перечислителя выражений колонок.
            </summary>
            <param name="columnExpressions">Перечислитель выражений колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.IQueryColumnExpressionConvertible})">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного перечислителя выражений колонок.
            </summary>
            <param name="expressions">Перечислитель выражений колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного массива выражений колонок.
            </summary>
            <param name="columnExpressions">Массив выражений колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Входит в набор значений] и добавляет в правую часть 
            условия выражение для заданного массива выражений колонок.
            </summary>
            <param name="expressions">Массив выражений колонок.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.Select)">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Существует по заданному условию] и добавляет в 
            качестве условия проверки выражение для результатов переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.Query)">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Существует по заданному условию] и добавляет в 
            качестве условия проверки выражение для результатов переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            В текущем условии запроса устанавливает сравнение типа [Существует по заданному условию] и добавляет в 
            качестве условия проверки переданное выражение.
            </summary>
            <param name="columnExpression">Выражение.</param>
            <returns>Экземпляр запроса <see cref="T:Terrasoft.Core.DB.Query"/>, которому принадлежит текущее условие.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.ParentQuery">
            <summary>
            Запрос, которому принадлежит текущее условие.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.Name">
            <summary>
            Имя условия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.ConditionType">
            <summary>
            Тип условия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.IsNot">
            <summary>
            Определяет, использовать ли оператор NOT перед условием.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.LogicalOperation">
            <summary>
            Логический оператор, который связывает данное условие с предыдущим условием запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.LeftExpression">
            <summary>
            Выражение левой части условия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.RightExpressions">
            <summary>
            Коллекция выражений правой части условия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.HasRightExpressions">
            <summary>
            Определяет, есть ли хотя бы одно выражение в правой части условия.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryFunction">
            <summary>
            Базовый класс функции выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Negate(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Возвращает выражение отрицания значения переданной функции.
            </summary>
            <param name="operand">Функция выражения.</param>
            <returns>Выражение колонки, представляющее отрицание функции выражения <paramref name="operand"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_UnaryNegation(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Перегрузка оператора отрицания переданной функции выражения.
            </summary>
            <param name="operand">Функция выражения.</param>
            <returns>Отрицание значения функции выражения <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Add(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Возвращает выражение арифметического сложения переданных функций выражения.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции сложения.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции сложения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий сумму операндов 
            <paramref name="leftOperand"/> И <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Addition(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Перегрузка оператора сложения двух функций выражений.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции сложения.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции сложения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий сумму операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Subtract(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Возвращает выражение вычитания переданной правой функции выражения из переданной левой функции выражения.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Функция выражения - правый операнд в функции вычитания.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий разность между операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Subtraction(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Перегрузка оператора вычитания правой функции выражения из левого функции выражения.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции вычитания.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции вычитания.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий разность между операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Multiply(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Возвращает выражение умножения переданных функций выражений.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции умножения.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции умножения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, являющийся произведением операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Multiply(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Перегрузка оператора умножения двух функций выражений.
            </summary>
            <param name="leftOperand">Функция запроса - левый операнд в операции умножения.</param>
            <param name="rightOperand">Функция запроса - правый операнд в операции умножения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий произведение операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Divide(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Возвращает выражение деления переданной левой функции выражения на переданную правую функцию выражения.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции деления.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции деления.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий частное от деления операнда 
            <paramref name="leftOperand"/> на операнд <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Division(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            Перегрузка оператора деления функций выражений.
            </summary>
            <param name="leftOperand">Функция выражения - левый операнд в операции деления.</param>
            <param name="rightOperand">Функция выражения - правый операнд в операции деления.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, представляющий частное от деления операнда 
            <paramref name="leftOperand"/> на операнд <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Clone">
            <summary>
            Создает копию текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryFunction"/>, представляющий копию текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием переданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется 
            текст запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет переданную коллекцию параметров в аргументы функции.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса, которые добавляются в аргументы функции.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.GetQueryColumnExpressions">
            <summary>
            Возвращает коллекцию выражений колонки запроса для текущей функции запроса.
            </summary>
            <returns>Коллекция <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.GetQueryColumnExpression">
            <summary>
            Возвращает выражение колонки запроса для текущей функции запроса.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции запроса.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.AggregationEvalType">
            <summary>
            Область применения агрегирующей функции.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.None">
            <summary>
            Область не задана.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.All">
            <summary>
            Применяется ко всем значениям.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.Distinct">
            <summary>
            Применяется к уникальным значениям.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.AggregationQueryFunction">
            <summary>
            Агрегирующая функция выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/> с заданным типом агрегирующей функции 
            для указанного выражения колонки.
            </summary>
            <param name="aggregationType">Тип агрегирующей функции.</param>
            <param name="expression">Выражение колонки, к которому применяется агрегирующая функция.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/> с заданным типом агрегирующей функции 
            для указанного выражения.
            </summary>
            <param name="aggregationType">Тип агрегирующей функции.</param>
            <param name="expression">Выражение, к которому применяется агрегирующая функция.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Core.DB.AggregationQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, являющийся клоном переданной 
            агрегирующей функции выражения.
            </summary>
            <param name="source">Агрегирующая функция выражения <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляров <see cref="T:System.Text.StringBuilder"/> и 
            построителя запроса<see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет переданную коллекцию параметров в аргументы функции.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса, которые добавляются в аргументы функции.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.All">
            <summary>
            Устанавливает для текущей агрегирующей функции область применения [Ко всем значениям].
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.Distinct">
            <summary>
            Устанавливает для текущей агрегирующей функции область применения [К уникальным значениям].
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.AggregationType">
            <summary>
            Тип агрегирующей функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.AggregationEvalType">
            <summary>
            Область применения агрегирующей функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IsNullQueryFunction">
            <summary>
            Функция для замены значения <c>null</c> замещающим выражением. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/> для заданных проверяемого выражения и 
            замещающего выражения.
            </summary>
            <param name="checkExpression">Выражение, которое проверяется на равенство <c>null</c>.</param>
            <param name="replacementExpression">Выражение, которое возвращается функцией, если 
            <paramref name="checkExpression"/> равно <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/> для заданных проверяемого выражения и 
            замещающего выражения.
            </summary>
            <param name="checkExpression">Выражение, которое проверяется на равенство <c>null</c>.</param>
            <param name="replacementExpression">Выражение, которое возвращается функцией, если 
            <paramref name="checkExpression"/> равно <c>null</c>.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве одного из параметров 
            <paramref name="checkExpression"/> или <paramref name="replacementExpression"/> передано значение 
            <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.IsNullQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, являющийся клоном переданной 
            функции выражения.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляров <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет переданную коллекцию параметров в аргументы функции.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса, которые добавляются в аргументы функции.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.IsNullQueryFunction.CheckExpression">
            <summary>
            Выражение аргумента функции, которое проверяется на равенство значению <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IsNullQueryFunction.ReplacementExpression">
            <summary>
            Выражение аргумента функции, которое возвращается, если проверяемое выражение равно <c>null</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.CreateGuidQueryFunction">
            <summary>
            Функция выражения нового идентификатора.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.#ctor(Terrasoft.Core.DB.CreateGuidQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, являющийся клоном переданной 
            функции. 
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляров <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запроса к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction">
            <summary>
            Функция выражения текущей даты и времени.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.DB.CurrentDateTimeQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, являющийся клоном переданной 
            функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляров <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CoalesceQueryFunction">
            <summary>
            Функция возврата первого выражения из списка аргументов, не равного <c>null</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.CoalesceQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> для переданной коллекции выражений 
            колонок.
            </summary>
            <param name="expressions">Коллекция выражений колонок запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expressions"/> передано 
            значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если коллекция <paramref name="expressions"/> не содержит ни 
            одного выражения колонки.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> для переданного массива выражений 
            колонок.
            </summary>
            <param name="expressions">Массив выражений колонок запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expressions"/> передано 
            значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если массив <paramref name="expressions"/> не содержит ни одного 
            выражения колонки.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> для переданного массива выражений
            колонок.
            </summary>
            <param name="expressions">Массив выражения колонок.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expressions"/> передано 
            значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если массив <paramref name="expressions"/> не содержит ни одного 
            выражения колонки.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляров <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запрос в к базе данных.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция аргументов функции не содержит ни одного 
            выражения.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.CoalesceQueryFunction.Expressions">
            <summary>
            Коллекция выражений аргументов функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DatePartQueryFunctionInterval">
            <summary>
            Часть даты.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Day">
            <summary>
            День.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Week">
            <summary>
            Неделя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Month">
            <summary>
            Месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Year">
            <summary>
            Год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Weekday">
            <summary>
            День недели.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Hour">
            <summary>
            Час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.HourMinute">
            <summary>
            Минута.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DatePartQueryFunction">
            <summary>
            Функция выражения части значения типа Дата/Время. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/> с заданным выражением колонки типа 
            Дата/Время и указанной частью даты.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="expression">Выражение колонки типа Дата/Время.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/> с заданным выражением колонки типа 
            Дата/Время и указанной частью даты.
            </summary>
            <param name="interval">Часть даты.</param>
            <param name="expression">Выражение колонки типа Дата/Время.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.DatePartQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DatePartQueryFunction.Interval">
            <summary>
            Часть даты, возвращаемая функцией.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DateAddQueryFunction">
            <summary>
            Функция выражения даты, полученной путем добавления указанного промежутка времени к заданной дате.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> с заданными параметрами.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Значение, которое добавляется к <paramref name="interval"/>.</param>
            <param name="expression">Выражение колонки, содержащей исходную дату.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> с заданными параметрами.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="numberExpression">Значение, которое добавляется к <paramref name="interval"/>.</param>
            <param name="expression">Выражение колонки, содержащей исходную дату.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> с заданными параметрами.
            </summary>
            <param name="interval">Часть даты, к которой добавляется временной промежуток.</param>
            <param name="number">Значение, которое добавляется к <paramref name="interval"/>.</param>
            <param name="expression">Выражение колонки, содержащей исходную дату.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра передано значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DateAddQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="F:Terrasoft.Core.DB.DateAddQueryFunction._number">
            <summary>
            Добавляемый временной промежуток.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.Expression">
            <summary>
            Выражение колонки, содержащей исходную дату.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.Interval">
            <summary>
            Часть даты, к которой добавляется временной промежуток.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.NumberExpression">
            <summary>
            Выражение, содержащие добавляемый временной промежуток.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DateDiffQueryFunctionInterval">
            <summary>
            Единица измерения разницы дат.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Year">
            <summary>
            Год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Month">
            <summary>
            Месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Day">
            <summary>
            День.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Hour">
            <summary>
            Час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Minute">
            <summary>
            Минута.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DateDiffQueryFunction">
            <summary>
            Функция выражения разницы дат, полученного путем вычитания заданных дат.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/> с заданными параметрами.
            </summary>
            <param name="interval">Единица измерения разницы дат.</param>
            <param name="startDateExpression">Выражение колонки, содержащей начальную дату.</param>
            <param name="endDateExpression">Выражение колонки, содержащей конечную дату.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/> с заданными параметрами.
            </summary>
            <param name="interval">Единица измерения разницы дат.</param>
            <param name="startDateExpression">Выражение колонки, содержащей начальную дату.</param>
            <param name="endDateExpression">Выражение колонки, содержащей конечную дату.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра передано значение <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.StartDateExpression">
            <summary>
            Выражение колонки, содержащей начальную дату.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.EndDateExpression">
            <summary>
            Выражение колонки, содержащей конечную дату.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.Interval">
            <summary>
            Единица измерения разницы дат, возвращаемая функцией.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.CastQueryFunction">
            <summary>
            Функция приведения выражения аргумента к заданному типу данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/> с заданными выражением колонки и целевым 
            типом данных.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <param name="castType">Целевой тип данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DBDataValueType)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/> с заданными выражением колонки и целевым 
            типом данных.
            </summary>
            <param name="expression">Выражение колонки.</param>
            <param name="castType">Целевой тип данных.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.CastQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.CastQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.CastQueryFunction.CastType">
            <summary>
            Целевой тип данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.UpperQueryFunction">
            <summary>
            Функция для преобразования символов выражения аргумента к верхнему регистру.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.UpperQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.UpperQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DataLengthQueryFunction">
            <summary>
            Функция для определения числа байтов, использованных для представления выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="columnNameExpression">Выражение колонки запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="columnNameExpression"/> 
            передано значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.DataLengthQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.DataLengthQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.TrimQueryFunction">
            <summary>
            Функция для удаления начальных и конечных пробелов из выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.TrimQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.TrimQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.LengthQueryFunction">
            <summary>
            Функция для возврата длины выражения.
            </summary>
            <remarks>Длина измеряется в единицах измерения, соответствующих типу данных выражения.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/> для заданного выражения колонки.
            </summary>
            <param name="expression">Выражение колонки запроса.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expression"/> передано 
            значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.LengthQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.LengthQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.ConcatQueryFunction">
            <summary>
            Функция для формирования строки, являющейся результатом объединения строковых значений аргументов функции.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/> для переданной коллекции выражений.
            </summary>
            <param name="expressions">Коллекция выражений колонок.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="expressions"/> передано 
            значение <c>null</c> либо коллекция <paramref name="expressions"/> не содержит ни одного элемента.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.#ctor(Terrasoft.Core.DB.ConcatQueryFunction)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, являющийся клоном переданной функции.
            </summary>
            <param name="source">Функция <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Формирует текст запроса с использованием заданных экземпляра <see cref="T:System.Text.StringBuilder"/> и 
            построителя запросов <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="dbEngine">Экземпляр построителя запросов к базе данных.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция аргументов функции не содержит ни одного 
            выражения.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Добавляет в аргументы функции переданную коллекцию параметров.
            </summary>
            <param name="resultParameters">Коллекция параметров запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, являющийся клоном текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.ConcatQueryFunction.Expressions">
            <summary>
            Коллекция выражений аргументов функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameter">
            <summary>
            Представляет параметр запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.Object)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с заданным значением.
            </summary>
            <param name="value">Значение параметра запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с заданными именем и значением.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="value">Значение параметра запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с заданным именем и заданным значением 
            определенного типа данных.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="value">Значение параметра запроса.</param>
            <param name="valueType">Тип данных значения параметра запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с заданным именем и заданным значением 
            определенного типа данных.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="value">Значение параметра запроса.</param>
            <param name="valueTypeName">Имя типа данных значения параметра запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с заданным именем и заданным значением типа 
            <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="name">Имя параметра запроса.</param>
            <param name="streamValue">Значение параметра запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, являющийся клоном заданного экземпляра 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> и заданный экземпляр 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/>, который сравнивается с текущим экземпляром 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.</param>
            <returns><c>true</c>, если сравниваемые объекты имеют непустые имена, и имя <paramref name="obj"/> 
            совпадает с именем текущего объекта <see cref="T:Terrasoft.Core.DB.QueryParameter"/>; иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.GetHashCode">
            <summary>
            Возвращает хэш-код объекта.
            </summary>
            <returns>Хэш-код объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Name">
            <summary>
            Имя параметра запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.IsAutoName">
            <summary>
            Признак, определяющий, генерировать ли имя параметра запроса автоматически.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.IsAutoAdded">
            <summary>
            Признак, является ли параметр запроса автоматически добавленным.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Value">
            <summary>
            Значение параметра запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ValueType">
            <summary>
            Тип значения параметра запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ValueTypeName">
            <summary>
            Имя типа значения параметра запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Direction">
            <summary>
            Направление передачи значения параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ParentParametrizedQuery">
            <summary>
            Родительский запрос, которому принадлежит параметр.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameterCollection">
            <summary>
            Коллекция параметров запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.#ctor(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>, являющийся клоном заданной 
            коллекции параметров запроса.
            </summary>
            <param name="source">Коллекция параметров запроса, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.ResetParameters">
            <summary>
            Очищает коллекцию параметров запроса, которые были добавлены автоматически.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GenerateUniqueName(System.String)">
            <summary>
            По заданному префиксу генерирует уникальное имя параметра запроса.
            </summary>
            <param name="parameterNamePrefix">Префикс имени параметра запроса.</param>
            <returns>Уникальное имя параметра запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GenerateUniqueNames">
            <summary>
            Генерирует уникальные имена для всех элементов текущей коллекции параметров запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.FindByName(System.String)">
            <summary>
            В текущей коллекции параметров запроса выполняет поиск параметра с заданным именем.
            </summary>
            <param name="name">Имя искомого параметра запроса.</param>
            <returns>Экземпляр параметра запроса <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем <paramref name="name"/> либо 
            <c>null</c>, если параметр с таким именем не найден в коллекции.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GetByName(System.String)">
            <summary>
            Из текущей коллекции параметров запроса возвращает параметр с заданным именем. Если параметр не найден в 
            коллекции, генерируется исключение.
            </summary>
            <param name="name">Имя возвращаемого параметра запроса.</param>
            <returns>Экземпляр параметра запроса <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем <paramref name="name"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции параметров запроса не найден 
            параметр с именем <paramref name="name"/>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object)">
            <summary>
            В текущую коллекцию параметров запроса добавляет параметр с заданными именем и значением.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="value">Значение добавляемого параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с 
            именем <paramref name="name"/> и значением <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            В текущую коллекцию параметров запроса добавляет параметр с заданным именем и заданным значением, который 
            имеет определенный тип данных.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="value">Значение добавляемого параметра запроса.</param>
            <param name="parameterType">Тип данных значения добавляемого параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем 
            <paramref name="name"/> и значением <paramref name="value"/>, который имеет тип данных 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object,System.String)">
            <summary>
            В текущую коллекцию параметров запроса добавляет параметр с заданным именем и заданным значением, которое 
            имеет тип данных с указанным именем.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="value">Значение добавляемого параметра запроса.</param>
            <param name="parameterTypeName">Имя типа данных значения параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем 
            <paramref name="name"/>, значением <paramref name="value"/>, которое имеет тип данных с именем 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddOut(System.String,Terrasoft.Core.DataValueType)">
            <summary>
            В текущую коллекцию параметров запроса добавляет исходящий параметр с заданным именем и заданным типом 
            данных значения параметра.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="parameterType">Тип данных значения параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса исходящий параметр 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, значение которого имеет тип данных <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddOut(System.String,System.String)">
            <summary>
            В текущую коллекцию параметров запроса добавляет исходящий параметр с заданными именем параметра и именем 
            типа данных значения параметра.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="parameterTypeName">Имя типа данных значения параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем 
            <paramref name="name"/> и именем значения типа данных параметра <paramref name="parameterTypeName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddVar(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            В текущую коллекцию параметров запроса добавляет входящий/исходящий параметр с заданными именем, значением 
            и типом значения.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="value">Значение добавляемого параметра запроса.</param>
            <param name="parameterType">Тип данных значения добавляемого параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем 
            <paramref name="name"/>, значением <paramref name="value"/> и типом значения 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddVar(System.String,System.Object,System.String)">
            <summary>
            В текущую коллекцию параметров запросов добавляет входящий/исходящий параметр с заданными именем, значением 
            и именем типа данных значения параметра.
            </summary>
            <param name="name">Имя добавляемого параметра запроса.</param>
            <param name="value">Значение добавляемого параметра запроса.</param>
            <param name="parameterTypeName">Имя типа данных значения добавляемого параметра запроса.</param>
            <returns>Добавленный в текущую коллекцию параметров запроса параметр <see cref="T:Terrasoft.Core.DB.QueryParameter"/> с именем 
            <paramref name="name"/>, значением <paramref name="value"/> типа данных с именем 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameterCollection.ParentParametrizedQuery">
            <summary>
            Родительский запрос, которому принадлежит данная коллекция параметров запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameterUtilities">
            <summary>
            Предоставляет служебные методы для работы с параметрами запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.JoinCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами операторов <c>Join</c> из переданной коллекции операторов.
            </summary>
            <param name="joins">Коллекция операторов <c>Join</c> запросов.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры операторов из 
            коллекции <paramref name="joins"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryColumnExpressionCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами выражений колонок из переданной коллекции выражений.
            </summary>
            <param name="columnExpressions">Коллекция выражений колонок запроса.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры выражений из 
            коллекции <paramref name="columnExpressions"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryCase,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами из переданного оператора <c>Case</c> запроса.
            </summary>
            <param name="queryCase">Оператор <c>Case</c> запроса.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры из оператора 
            <paramref name="queryCase"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QuerySourceExpression,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами из переданного выражения источника данных запроса.
            </summary>
            <param name="sourceExpression">Выражение источника данных запроса.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметра из выражения 
            <paramref name="sourceExpression"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами из переданной функции запроса.
            </summary>
            <param name="queryFunction">Функция запроса.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры из функции 
            <paramref name="queryFunction"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами из переданного выражения колонки запроса.
            </summary>
            <param name="columnExpression">Выражение колонки запроса.</param>
            <param name="resultParameters">Коллекция параметров, к которую добавляются параметры из выражения 
            <paramref name="columnExpression"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.ModifyQueryColumnValueCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами значений колонок из переданной коллекции значений.
            </summary>
            <param name="columnValues">Коллекция значений колонок.</param>
            <param name="resultParameters">Коллекция параметров, в которую добавляются параметры значений колонок из 
            коллекции <paramref name="columnValues"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.OrderByItemCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами выражений сортировки из переданной коллекции выражений. 
            </summary>
            <param name="orderByItems">Коллекция выражений запроса, по которым выполняется сортировка результатов.
            </param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры выражений 
            сортировки из коллекции <paramref name="orderByItems"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами из переданного условия запроса.
            </summary>
            <param name="condition">Условие запроса, в которое добавляется коллекция параметров.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры из условия 
            <paramref name="condition"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.SelectQueryCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Заполняет заданную коллекцию параметрами запросов на выборку из переданной коллекции запросов.
            </summary>
            <param name="queries">Коллекция запросов на выборку.</param>
            <param name="resultParameters">Коллекция параметров запроса, в которую добавляются параметры запросов на 
            выборку из коллекции <paramref name="queries"/>.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QuerySourceExpressionType">
            <summary>
            Тип выражения источника данных запроса.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SchemaName">
            <summary>
            Имя схемы источника данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SubSelect">
            <summary>
            Подзапрос на выборку источника данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SqlText">
            <summary>
            Sql-текст на выборку источника данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QuerySourceExpression">
            <summary>
            Выражение источника данных запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для схемы с заданным именем.
            </summary>
            <param name="schemaName">Имя схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для схемы с переданным именем и 
            заданным псевдонимом источника.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <param name="alias">Псевдоним источника.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Select,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для переданного подзапроса на выборку с 
            заданным псевдонимом источника.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <param name="alias">Псевдоним источника.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">Если тип подзапроса <paramref name="subSelectQuery"/> является 
            не <see cref="T:Terrasoft.Core.DB.Select"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Query,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> для переданного произвольного подзапроса 
            с заданным псевдонимом источника.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <param name="alias">Псевдоним источника.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>, являющийся клоном переданного выражения.
            </summary>
            <param name="source">Выражение, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.ExpressionType">
            <summary>
            Тип выражения источника данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.Alias">
            <summary>
            Псевдоним выражения источника данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SchemaName">
            <summary>
            Имя схемы источника данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SubSelect">
            <summary>
            Подзапрос на выборку, выступающий в качестве источника данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SqlText">
            <summary>
            Sql-текст, определяющий источник данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Source">
            <summary>
            Предоставляет служебные методы для работы с источником данных запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Source.SqlText(System.String)">
            <summary>
            Возвращает выражение источника данных запроса, который формируется переданным sql-выражением.
            </summary>
            <param name="value">Sql-выражение, которое формирует источник данных.</param>
            <returns>Выражение источника данных запроса, сформированное sql-выражением <paramref name="value"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityColumnValue">
            <summary>
            Значение колонки объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>, используя заданное пользовательское 
            подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.#ctor(Terrasoft.Core.Entities.EntityColumnValue)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>, который является клоном заданного значения.
            </summary>
            <param name="source">Значение колонки объекта, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.LoadValue(System.Data.IDataReader,System.Int32,System.Int32)">
            <summary>
            Загружает значение из переданного экземпляра <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader"/>, из которого загружается 
            значение.</param>
            <param name="fieldIndex">Индекс поля в переданном <see cref="T:System.Data.IDataReader"/>, которое будет 
            загружено.</param>
            <param name="packageSize">Размер пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.LoadValue(System.Object)">
            <summary>
            Загружает переданное значение типа <see cref="T:System.Object"/>.
            </summary>
            <param name="value">Загружаемое значение типа <see cref="T:System.Object"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.ResetValue">
            <summary>
            Отменяет изменения, устанавливая предыдущее значение колонки объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.ResetOldValue">
            <summary>
            Заменяет старое значение колонки объекта текущим.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.Validate(Terrasoft.Core.Entities.EntityValidationMessageCollection)">
            <summary>
            Выполняет проверку корректности значения колонки.
            </summary>
            <param name="validationMessages">Коллекция сообщений о проверке корректности значения колонки.</param>
            <returns>
            <c>true</c>, если проверка корректности значения колонки завершилась успешно; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.Clone">
            <summary>
            Создает клон текущего значения колонки объекта.
            </summary>
            <returns>Клон текущего значения колонки объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.UserConnection">
            <summary>
            Пользовательское подключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Column">
            <summary>
            Колонка схемы, соответствующая текущему значению колонки объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Name">
            <summary>
            Имя значения колонки объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsVirtual">
            <summary>
            Признак, является ли значение виртуальным, то есть не будет сохранено в базе данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Value">
            <summary>
            Хранимое значение.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если значение колонки не загружено.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.StreamBytes">
            <summary>
            Хранимое значение в виде массива <see cref="T:System.Byte"/> для колонки бинарного типа.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.OldValue">
            <summary>
            Предыдущее значение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsLoaded">
            <summary>
            Определяет, загружено ли значение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsChanged">
            <summary>
            Признак, было ли изменено значение.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityColumnValueCollection">
            <summary>
            Коллекция значений колонок объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/>, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaColumnCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/> на основании заданной коллекции 
            колонок схемы объекта, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columns">Коллекция колонок схемы объекта, на основании которой создаются значения текущей 
            коллекции значений колонок объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.Entities.EntityColumnValueCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/>, являющийся клоном заданной 
            коллекции значений колонок объекта.
            </summary>
            <param name="source">Коллекция значений колонок объекта, клон которой создается. Каждый элемент создаваемой 
            коллекции является клоном соответствующего элемента коллекции <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceLoadColumnValue(System.String,System.Object)">
            <summary>
            Загружает значение с заданным именем из переданного объекта <see cref="T:System.Object"/>. Если значение с 
            заданным именем не найдено, в коллекцию добавляется новый элемент с заданным именем.
            </summary>
            <param name="name">Имя значения колонки объекта.</param>
            <param name="value">Присваиваемое значение.</param>
            <remarks>Метод перегружен.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceLoadColumnValue(System.String,System.Data.IDataReader,System.Int32,System.Int32)">
            <summary>
            Загружает значение с заданным именем из переданного экземпляра 
            <see cref="T:System.Data.IDataReader"/>. Если значение с заданным именем не найдено, в коллекцию 
            добавляется новый элемент с таким именем.
            </summary>
            <param name="name">Имя значения колонки объекта.</param>
            <param name="dataReader">Экземпляр <see cref="T:System.Data.IDataReader"/>, с помощью которого загружается 
            значение.</param>
            <param name="fieldIndex">Позиция в переданном <see cref="T:System.Data.IDataReader"/>, из которой 
            загружается значение.</param>
            <param name="packageSize">Размер пакета.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceGetByName(System.String)">
            <summary>
            Возвращает из коллекции экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/> с заданным именем. Если в коллекции нет 
            экземпляра с таким именем, он создается.
            </summary>
            <param name="name">Имя значения колонки объекта, поиск которого выполняется в коллекции.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Add(Terrasoft.Core.Entities.EntityColumnValue)">
            <summary>
            Добавляет в коллекцию заданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>.
            </summary>
            <param name="item">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>, который добавляется в коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Clear">
            <summary>
            Удаляет из текущей коллекции все элементы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.FindByName(System.String)">
            <summary>
            Осуществляет поиск в коллекции значения колонки объекта с заданным именем. Если значение колонки не найдено,
            возвращается <c>null</c>.
            </summary>
            <param name="name">Имя искомого значения колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/> с именем <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.GetByName(System.String)">
            <summary>
            Возвращает из коллекции значений колонок элемент с заданным именем. Если такой элемент не найден, 
            генерируется исключение.
            </summary>
            <param name="name">Имя искомого значения колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/> с именем <paramref name="name"/>.</returns>
            <exceptions name="ItemNotFoundException">Если элемент с именем <paramref nmae="name"/> не найден в 
            текущей коллекции значений колонок.</exceptions>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Clone">
            <summary>
            Создает клон текущей коллекции значений колонок объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.GetEnumerator">
            <summary>
            Возвращает типизированный перечислитель значений колонок объекта.
            </summary>
            <returns>Типизированный перечислитель значений колонок объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель значений колонок объекта.
            </summary>
            <returns>Перечислитель значений колонок объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValueCollection.Count">
            <summary>
            Количество элементов в коллекции значений колонок объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType">
            <summary>
            Уровень проверки значений колонки, обязательных для заполнения.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.None">
            <summary>
            Проверка значений колонки не выполняется.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.ApplicationLevel">
            <summary>
            Проверка значений колонки на уровне приложения.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.DBLevel">
            <summary>
            Проверка значений колонки на уровне базы данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnUsageType">
            <summary>
            Тип использования колонки.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.General">
            <summary>
            Общая.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.Advanced">
            <summary>
            Для использования в расширенном режиме.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.None">
            <summary>
            Не используется.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumn">
            <summary>
            Представляет колонку схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.DataValueType)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с заданным типом данных 
            в заданной схеме.
            </summary>
            <param name="entitySchema">Схема, в которой создается колонка.</param>
            <param name="dataValueType">Тип данных создаваемой колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, являющийся клоном заданной колонки.
            </summary>
            <param name="source">Колонка, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Инициализирует основные свойства колонки на основании метаданных.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются метаданные схемы.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.Clone">
            <summary>
            Возвращает колонку - клон данной колонки.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, который является клоном текущей колонки.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.SetName(System.String)">
            <summary>
            Устанавливает для данной колонки заданное имя.
            </summary>
            <param name="name">Имя колонки.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.UId">
            <summary>
            Уникальный идентификатор колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Name">
            <summary>
            Имя колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DataValueType">
            <summary>
            Тип данных колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceSchema">
            <summary>
            Схема, на которую ссылается текущая колонка типа справочник.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceSchemaUId">
            <summary>
            Уникальный идентификатор, на который ссылается текущая колонка типа справочник.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceValueListSchemaUId">
            <summary>
            Уникальный идентификатор виртуального набора данных, на который ссылается текущая колонка с фиксированным 
            списком значений. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceValueListSchema">
            <summary>
            Виртуальный набор данных, на который ссылается текущая колонка с фиксированным списком значений.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Caption">
            <summary>
            Заголовок колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Description">
            <summary>
            Описание колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceSchemaList">
            <summary>
            Список ссылок на схемы, на которые ссылается данная колонка.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.HasReferenceSchemaList">
            <summary>
            Признак, ссылается ли данная колонка на другие схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ColumnValueName">
            <summary>
            Имя колонки, сформированное на основании значения, которое она содержит.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если колонка не ссылается на другие схемы, то есть не 
            является типом справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для колонки типа справочник не указана ссылка на 
            схему - справочник.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если в схеме - справочнике, на который ссылается колонка, 
            не указана первичная колонка.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DisplayColumnValueName">
            <summary>
            Формирует строку с значением колонки для отображения на основании значения, которое 
            она содержит.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.SourceSchemaUIdColumnValueName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ParentCollection">
            <summary>
            Коллекция колонок схемы, которой принадлежит текущая колонка.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.RequirementType">
            <summary>
            Уровень обязательности колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsDBRequirement">
            <summary>
            Признак, является ли колонка обязательной на уровне базы данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsVirtual">
            <summary>
            Признак, является ли колонка виртуальной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsDBReadOnly">
            <summary>
            Признак, будет ли значение данной колонки записано в таблицу базы данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsValueCloneable">
            <summary>
            Признак клонируемости колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsMultiLineText">
            <summary>
            Признак использования для колонки элемента управления MemoEdit.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsSimpleLookup">
            <summary>
            Признак использования для колонки элемента управления ComboBoxEdit.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsLocalizable">
            <summary>
            Признак использования локализуемого значения для колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsIndexed">
            <summary>
            Признак индексируемости колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsTrackChangesInDB">
            <summary>
            Признак журналируемости колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Index">
            <summary>
            Индекс колонки. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ValueType">
            <summary>
            Тип данных значения колонки, который соответствует системному типу среды .NET.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DisplayValueType">
            <summary>
            Тип данных отображаемого значения колонки, который соответствует системному типу среды .NET.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для колонки типа разнородный справочник не указана 
            список схем-справочников.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если в схеме-справочнике, на который ссылается колонка, 
            не указана первичная колонка.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DefValue">
            <summary>
            Значение по умолчанию для колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.HasDefValue">
            <summary>
            Определяет, установлено ли для данной колонки значение по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.HasConstDefValue">
            <summary>
            Определяет, установлено ли для данной колонки константное значение по умолчанию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsWeakReference">
            <summary>
            Определяет, что для колонки с типом справочник связь со справочником слабая на уровне базы данных, то есть 
            нет внешнего ключа для проверки целостности. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsCascade">
            <summary>
            Для колонки типа справочник определяет, связана ли она каскадной связью с записью из справочника.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.UsageType">
            <summary>
            Тип использования колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsOneToOneInheritedColumn">
            <summary>
            Признак наследования колонки один к одному.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnCollection">
            <summary>
            Предоставляет методы работы с коллекцией колонок схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/> в заданной схеме.
            </summary>
            <param name="entitySchema">Схема, в которой создается новая коллекция колонок.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaColumnCollection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/>, являющийся клоном 
            заданной коллекции колонок.
            </summary>
            <param name="source">Коллекция колонок, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Добавляет в текущую коллекцию колонок заданную колонку в заданную позицию.
            </summary>
            <param name="index">Позиция, в которую добавляется колонка <paramref name = "item"/>.</param>
            <param name="item">Колонка, которая добавляется в позицию <paramref name = "index"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.RemoveItem(System.Int32)">
            <summary>
            Удалает из текущей коллекции колонок колонку в заданной позиции.
            </summary>
            <param name="index">Позиция, из которой удаляется колонка.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.Clone">
            <summary>
            Возвращает коллекцию колонок - клон данной коллекции.
            </summary>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/>, который является клоном текущей коллекции колонок.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.FindByCaption(System.String)">
            <summary>
            Осуществляет поиск колонки в коллекции по заданному заголовку колонки.
            </summary>
            <param name="caption">Заголовок искомой колонки.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с заголовком <paramref name="caption"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.FindByColumnValueName(System.String)">
            <summary>
            Осуществляет поиск колонки в коллекции по заданному свойству колонки <c>ColumnValueName</c>.
            </summary>
            <param name="columnValueName">Значение свойства <c>ColumnValueName</c> для поиска.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с именем значения 
            <paramref name="columnValueName"/>.
            Если такая колонка не найдена, возвращается <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.GetByColumnValueName(System.String)">
            <summary>
            Возвращает колонку из коллекции по заданному свойству колонки <c>ColumnValueName</c>. Если такая колонка не 
            найдена, генерируется исключение.
            </summary>
            <param name="columnValueName">Значение свойства <c>ColumnValueName</c> для поиска.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с именем значения 
            <paramref name="columnValueName"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если колонка с именем значения 
            <paramref name="columnValueName"/> не найдена в текущей коллекции.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnCollection.EntitySchema">
            <summary>
            Схема текущей коллекции колонок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.UId">
            <summary>
            Уникальный идентификатор колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.Name">
            <summary>
            Имя колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.Caption">
            <summary>
            Заголовок колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.DataValueTypeUId">
            <summary>
            Идентификатор типа данных колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.IsRequired">
            <summary>
            Признак, является ли колонка обязательной для заполнения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.IsLookup">
            <summary>
            Признак, является ли колонка справочником.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.ReferenceSchemaUId">
            <summary>
            Идентификатор схемы, на которую ссылается текущая колонка типа справочник. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn">
            <summary>
            Колонка индекса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexColumn)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn"/>, являющийся клоном заданной колонки 
            индекса.
            </summary>
            <param name="source">Колонка индекса, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств колонки индекса из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных колонки индекса с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные колонки индекса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Clone">
            <summary>
            Возвращает клон текущей колонки индекса.
            </summary>
            <returns>Клон текущей колонки индекса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Name">
            <summary>
            Имя колонки индекса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ParentCollection">
            <summary>
            Коллекция, которой принадлежит колонка индекса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ColumnUId">
            <summary>
            Идентификатор колонки индекса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Column">
            <summary>
            Экземпляр колонки индекса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.OrderDirection">
            <summary>
            Порядок сортировки.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection">
            <summary>
            Коллекция колонок индекса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection"/>, являющийся клоном заданной 
            коллекции колонок индекса.
            </summary>
            <param name="source">Коллекция колонок индекса, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaIndexColumn)">
            <summary>
            Добавляет в коллекцию заданную колонку индекса по указанному индексу.
            </summary>
            <param name="index">Индекс, по которому добавляется колонка индекса в коллекцию.</param>
            <param name="item">Колонка индекса, которая добавляется в коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.RemoveItem(System.Int32)">
            <summary>
            Удаляет из коллекции колонку индекса по указанному индексу.
            </summary>
            <param name="index">Индекс, по которому удаляется колонка индекса из коллекции.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.Clone">
            <summary>
            Возвращает клон текущей коллекции колонок индекса.
            </summary>
            <returns>Клон текущей коллекции колонок индекса.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.ParentIndex">
            <summary>
            Индекс, содержащий данную коллекцию.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndex">
            <summary>
            Индекс схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndex"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.#ctor(Terrasoft.Core.Entities.EntitySchemaIndex)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndex"/>, являющийся клоном заданного индекса.
            </summary>
            <param name="source">Индекс схемы, клон которого создается.</param>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaIndex._getIndexPrefix">
            <summary>
            Свойство, содержащее делегат, позволяющий определить префикс индекса схемы по колонке на которую создается
            индекс.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Вычитка значений свойств индекса схемы из метаданных с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется 
            вычитка метаданных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.GetIndexName(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Возвращает сформированное уникальное имя индекса по колонке таблицы базы данных, которое включает в себя 
            префикс, идентификатор схемы, идентификатор колонки.
            </summary>
            <param name="schema">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, по которому 
            определяется идентификатор схемы, участвующий в формировании имени индекса.</param>
            <param name="column">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, по которой 
            определяются дополнительные параметры для формирования имени индекса.</param>
            <returns>Строка, представляющая уникальное имя индекса таблицы базы данных.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Осуществляет запись метаданных индекса схемы с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого записываются 
            метаданные индекса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.Clone">
            <summary>
            Возвращает клон текущего индекса схемы.
            </summary>
            <returns>Клон текущего индекса схемы.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.UId">
            <summary>
            Идентификатор индекса схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.Name">
            <summary>
            Имя индекса схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.ParentMetaSchema">
            <summary>
            Родительский объект, содержащий индекс.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.NamePrefix">
            <summary>
            Префикс.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.ParentCollection">
            <summary>
            Родительская коллекция.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsAutoName">
            <summary>
            Признак автоматического присвоения имени индексу.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsUnique">
            <summary>
            Определяет, является ли индекс уникальным.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsClustered">
            <summary>
            Определяет, является ли индекс кластерным, то есть содержащим значения индексируемых колонок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.Columns">
            <summary>
            Коллекция колонок индекса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsInherited">
            <summary>
            Признак, является ли индекс унаследованным.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection">
            <summary>
            Коллекция индексов схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection"/>, являющийся клоном заданной 
            коллекции индексов.
            </summary>
            <param name="source">Коллекция индексов, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaIndex)">
            <summary>
            Добавляет в коллекцию заданный элемент в указанную позицию.
            </summary>
            <param name="index">Позиция, в которую добавляется <paramref name="item"/>.</param>
            <param name="item">Индекс, который добавляется в коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.RemoveItem(System.Int32)">
            <summary>
            Удаляет элемент из коллекции из заданной позиции.
            </summary>
            <param name="index">Позиция, из которой удаляется элемент из коллекции.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.Clone">
            <summary>
            Возвращает клон текущей коллекции индексов.
            </summary>
            <returns>Клон текущей коллекции индексов.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo">
            <summary>
            Связь схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaUId">
            <summary>
            Идентификатор схемы, по которой осуществляется связь.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaName">
            <summary>
            Имя схемы, по которой осуществляется связь.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaCaption">
            <summary>
            Заголовок схемы, по которой осуществляется связь.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.ColumnUId">
            <summary>
            Идентификатор колонки, по которой осуществляется связь.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.ColumnCaption">
            <summary>
            Заголовок колонки, по которой осуществляется связь.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollection">
            <summary>
            Коллекция связей схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollection.Contains(System.Guid)">
            <summary>
            Определяет, принадлежит ли схема с заданным идентификатором коллекции связей схемы.
            </summary>
            <param name="uid">Идентификатор схемы, наличие которой проверяется.</param>
            <returns><c>true</c>, если схема с идентификатором <paramref name="uid"/> найдена в коллекции 
            связей.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollectionComparer">
            <summary>
            Предоставляет методы сравнения связей схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollectionComparer.Compare(Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo,Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo)">
            <summary>
            Сравнивает между собой заданные связи по имени схемы.
            </summary>
            <param name="firstItem">Первая связь для сравнения.</param>
            <param name="secondItem">Вторая связь для сравнения.</param>
            <returns>Число, определяющее лексические отношения между <paramref name="firstItem"/> и 
            <paramref name="secondItem"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType">
            <summary>
            Тип макроса запроса к схеме объекта.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.None">
            <summary>
            Тип макроса не определен.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentUser">
            <summary>
            Текущий пользователь.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentUserContact">
            <summary>
            Контакт текущего пользователя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Yesterday">
            <summary>
            Вчера.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Today">
            <summary>
            Сегодня.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Tomorrow">
            <summary>
            Завтра.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousWeek">
            <summary>
            Предыдущая неделя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentWeek">
            <summary>
            Текущая неделя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextWeek">
            <summary>
            Следующая неделя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousMonth">
            <summary>
            Предыдущий месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentMonth">
            <summary>
            Текущий месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextMonth">
            <summary>
            Следующий месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousQuarter">
            <summary>
            Предыдущий квартал.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentQuarter">
            <summary>
            Текущий квартал.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextQuarter">
            <summary>
            Следующий квартал.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousHalfYear">
            <summary>
            Предыдущее полугодие.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentHalfYear">
            <summary>
            Текущее полугодие.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextHalfYear">
            <summary>
            Следующее полугодие.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousYear">
            <summary>
            Предыдущий год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentYear">
            <summary>
            Текущий год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousHour">
            <summary>
            Предыдущий час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentHour">
            <summary>
            Текущий час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextHour">
            <summary>
            Следующий час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextYear">
            <summary>
            Следующий год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextNDays">
            <summary>
            Следующие N дней.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousNDays">
            <summary>
            Предыдущие N дней.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextNHours">
            <summary>
            Следующие N часов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousNHours">
            <summary>
            Предыдущие N часов.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfMonth">
            <summary>
            День месяца.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfWeek">
            <summary>
            День недели.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Hour">
            <summary>
            Час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.HourMinute">
            <summary>
            Время.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Month">
            <summary>
            Месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Year">
            <summary>
            Год.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryLoadingEventArgs">
            <summary>
            Предоставляет данные для события, возникающего при загрузке данных запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryLoadingEventArgs.SelectQuery">
            <summary>
            Подзапрос на выборку.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryOptions">
            <summary>
            Класс настроек запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryOptions.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryOptions"/>.
            </summary>
            <remarks>В конструкторе по умолчанию свойству <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableRowCount"/> устанавливается значение 14.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableRowCount">
            <summary>
            Количество записей страницы результирующего набора данных, возвращаемого запросом.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableDirection">
            <summary>
            Направление постраничного вывода.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableConditionValues">
            <summary>
            Значения условий постраничного вывода.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalMaxDepth">
            <summary>
            Максимальный уровень вложенности иерархического запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalColumnName">
            <summary>
            Имя колонки, использующейся для построения иерархического запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalColumnValue">
            <summary>
            Начальное значение иерархической колонки, от которого будет строиться иерархия.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQuery">
            <summary>Представляет запрос к схеме объекта. Это высокоуровневый класс, позволяющий собирать сложные запросы, 
            используя только понятия путей к колонкам объекта таблицы (схемы) относительно корневой таблицы.</summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</summary>
            <remarks>Используется исключительно для внутренних целей и не применим в конфигурации.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> с заданной корневой схемой.</summary>
            <param name="rootSchema">Корневая схема.</param>
            <remarks>В качестве корневой схемы устанавливается переданный экземпляр <paramref name="rootSchema"/>. В 
            качестве менеджера схем устанавливается менеджер переданного экземпляра корневой схемы.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchemaManager,System.String)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> с заданными менеджером схем и именем 
            корневой схемы.</summary>
            <param name="entitySchemaManager">Экземпляр менеджера схем.</param>
            <param name="sourceSchemaName">Имя корневой схемы.</param>
            <remarks>В менеджере схем <paramref name="entitySchemaManager"/> осуществляется поиск схемы с именем 
            <paramref name="sourceSchemaName"/> и в качестве корневой схемы принимается экземпляр найденной схемы.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, являющийся клоном переданного запроса 
            к схеме объекта.</summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnQueryExpression(System.String,Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,System.Boolean)">
            <summary>
            Возвращает выражение запроса к схеме объекта по заданным пути к колонке, корневой схеме и экземпляру 
            колонки схемы. При этом для колонки можно определить, какой тип ее значения использовать в выражении - 
            хранимое значение или значение для отображения.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <param name="rootSchema">Экземпляр корневой схемы.</param>
            <param name="schemaColumn">Экземпляр колонки, для которой строится выражение.</param>
            <param name="useDisplayValue">Признак, использовать ли для колонки значение для отображения. 
            Необязательный параметр, по умолчанию равен <c>false</c>.</param>
            <returns>Выражение запроса к схеме объекта, построенное по пути к колонке <paramref name="columnPath"/>, 
            корневой схеме <paramref name="rootSchema"/>, колонке схемы <paramref name="schemaColumn"/> с учетом 
            значения признака <paramref name="useDisplayValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnQueryExpression(System.String,Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            Возвращает выражение запроса к схеме объекта по заданным пути к колонке схемы и корневой схеме. При этом 
            для колонки можно определить, какой тип ее значения использовать в выражении - хранимое значение или 
            значение для отображения.
            </summary>
            <param name="columnPath">Путь к колонке схемы относительно корневой схемы.</param>
            <param name="rootSchema">Корневая схема.</param>
            <param name="useDisplayValue">Признак, использовать ли для колонки значение для отображения. 
            Необязательный параметр, по умолчанию равен <c>false</c>.</param>
            <returns>Выражение запроса к схеме объекта, построенное по пути к колонке <paramref name="columnPath"/>, 
            корневой схеме <paramref name="rootSchema"/> с учетом значения признака <paramref name="useDisplayValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object)">
            <summary>
            Возвращает выражение запроса к схеме объекта для параметра с заданным значением.
            </summary>
            <param name="parameterValue">Значение параметра.</param>
            <returns>Выражение запроса к схеме объекта для параметра со значением <paramref name="parameterValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Возвращает выражение запроса к схеме объекта для параметра с заданным значением определенного типа.
            </summary>
            <param name="parameterValue">Значение параметра.</param>
            <param name="valueType">Тип значения параметра.</param>
            <returns>Выражение запроса к схеме объекта для параметра со значением <paramref name="parameterValue"/> 
            типа данных <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object,System.String,Terrasoft.Core.DataValueType)">
            <summary>
            Возвращает выражение запроса к схеме объекта для параметра с заданными значением, определенным типом 
            данных значения и указанным значением для отображения.
            </summary>
            <param name="parameterValue">Значение параметра.</param>
            <param name="displayValue">Значение для отображения параметра.</param>
            <param name="valueType">Тип значения параметра.</param>
            <returns>Выражение запроса к схеме объекта для параметра со значением <paramref name="parameterValue"/> 
            типа данных <paramref name="valueType"/> и значением для отображения <paramref name="displayValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpressions(Terrasoft.Core.DataValueType,System.Object[])">
            <summary>
            Возвращает перечислитель выражений запросов для параметров с переданными значениями определенного типа 
            данных.</summary>
            <param name="valueType">Тип данных значений параметров.</param>
            <param name="parameterValues">Массив значений параметров.</param>
            <returns>Перечислитель выражений запросов для параметров со значениями <paramref name="parameterValues"/> 
            типа данных <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpressions(Terrasoft.Core.DataValueType,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Возвращает перечислитель выражений запросов для параметров с переданными значениями определенного типа 
            данных.</summary>
            <param name="valueType">Тип данных значений параметров.</param>
            <param name="parameterValues">Перечислитель значений параметров.</param>
            <returns>Перечислитель выражений запросов для параметров со значениями <paramref name="parameterValues"/> 
            типа данных <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,System.String[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> для заданных родительского 
            запроса, корневой схемы и массива путей к колонкам.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, для которого создается экземпляр функции.</param>
            <param name="rootSchema">Корневая схема.</param>
            <param name="columnPaths">Массив путей к колонкам относительно корневой схемы.</param>
            <returns>Созданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если в качестве параметра <paramref name="columnPaths"/> передано 
            значение <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(Terrasoft.Core.Entities.EntitySchema,System.String[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> для заданных корневой схемы и 
            массива путей к колонкам.
            </summary>
            <param name="rootSchema">Корневая схема.</param>
            <param name="columnPaths">Массив путей к колонкам относительно корневой схемы.</param>
            <returns>Созданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,System.String,System.Boolean,System.Boolean)">
            <summary>
            Возвращает выражение колонки схемы объекта для заданных запроса к схеме объекта, корневой схемы, пути к 
            колонке относительно корневой схемы.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, для которого создается выражение колонки.</param>
            <param name="rootSchema">Корневая схема.</param>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <param name="useCoalesceFunctionForMultiLookup">Признак, использовать ли для колонки типа справочник 
            функцию <c>COALESCE</c>. Необязательный параметр, по умолчанию равен <c>true</c>.</param>
            <param name="useDisplayValue">Признак, использовать ли для колонки значение для отображения. 
            Необязательный параметр, по умолчанию равен <c>false</c>.</param>
            <returns>Созданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(Terrasoft.Core.Entities.EntitySchema,System.String,System.Boolean)">
            <summary>
            Возвращает выражение запроса к схеме объекта для заданных корневой схемы и пути к колонке относительно 
            корневой схемы.
            </summary>
            <param name="rootSchema">Корневая схема.</param>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <param name="useCoalesceFunctionForMultiLookup">Признак, использовать ли для колонки типа справочник 
            функцию <c>COALESCE</c>. Необязательный параметр, по умолчанию равен <c>true</c>.</param>
            <returns>Созданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            Возвращает фильтр с заданными параметрами для выражения запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Родительский запрос, для которого создается фильтр.</param>
            <param name="rootSchema">Корневая схема.</param>
            <param name="comparisonType">Тип операции сравнения в фильтре.</param>
            <param name="useDisplayValue">Признак типа значения колонки, которое используется в фильтре: 
            <c>true</c> - значение для отображения; <c>false</c> - хранимое значение.
            </param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.
            </param>
            <param name="rightExpressionParameterValues">Массив значений выражений параметров в правой части фильтра.
            </param>
            <returns>Экземпляр фильтра <seealso cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            Возвращает фильтр с заданными параметрами для выражения запроса к схеме объекта.
            </summary>
            <param name="rootSchema">Корневая схема.</param>
            <param name="comparisonType">Тип операции сравнения в фильтре.</param>
            <param name="useDisplayValue">Признак типа значения колонки, которое используется в фильтре: <c>true</c> - 
            значение для отображения; <c>false</c> - хранимое значение.
            </param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionParameterValues">Массив значений выражений параметров в правой части фильтра.
            </param>
            <returns>Экземпляр фильтра <seealso cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetDayOfWeekNumber(Terrasoft.Core.UserConnection,System.DayOfWeek)">
            <summary>
            Возвращает порядковый номер дня недели для заданного объекта <see cref="T:System.DayOfWeek"/> с учетом региональных 
            настроек.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="dayOfWeek">Экземпляр <see cref="T:System.DayOfWeek"/>, для которого определяется порядковый 
            номер.</param>
            <returns>Порядковый номер дня недели для объекта <paramref name="dayOfWeek"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ClearDefCach(System.String)">
            <summary>
            Удаляет из кэша запроса элемент с заданным именем.
            </summary>
            <param name="cacheItemName">Имя удаляемого элемента кэша.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="cacheItemName"/> 
            передано пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ClearCach">
            <summary>
            Очищает кэш текущего запроса.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего запроса к схеме объекта.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(System.String,System.Boolean)">
            <summary>
            Возвращает выражение колонки схемы объекта по заданному пути к колонке относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <param name="useCoalesceFunctionForMultiLookup">Признак, использовать ли для колонки типа множественный 
            справочник функцию <c>COALESCE</c>. Необязательный параметр, по умолчанию равен <c>true</c>.</param>
            <returns>Созданный экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressions(System.String[])">
            <summary>
            Возвращает перечислитель выражений колонок запроса к схеме объекта по заданному массиву путей к колонкам.
            </summary>
            <param name="columnPaths">Массив путей к колонкам относительно корневой схемы.</param>
            <returns>Перечислитель объектов <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для колонок, расположенных по 
            путям <paramref name="columnPaths"/> относительно корневой схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressionsWithoutCoalesce(System.String[])">
            <summary>
            Возвращает перечислитель выражений колонок запроса к схеме объекта по заданному массиву путей к колонкам. 
            При этом, если колонка имеет тип множественный справочник, к ее значениям не применяется функция 
            <c>COALESCE</c>.</summary>
            <param name="columnPaths">Массив путей к колонкам относительно корневой схемы.</param>
            <returns>Перечислитель объектов <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для колонок, расположенных по 
            путям <paramref name="columnPaths"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressions(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Возвращает перечислитель выражений колонок запроса к схеме объекта по заданному набору путей к колонкам.
            </summary>
            <param name="columnPaths">Перечислитель путей к колонкам относительно корневой схемы.</param>
            <param name="useCoalesceFunctionForMultiLookup">Признак, определяющий использовать ли для колонки типа 
            множественный справочник функцию <c>COALESCE</c>. Необязательный параметр, по умолчанию равен <c>true</c>.
            </param>
            <returns>Перечислитель выражений <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для колонок, расположенных по 
            путям <paramref name="columnPaths"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateAggregationFunction(Terrasoft.Common.AggregationTypeStrict,System.String)">
            <summary>
            Возвращает экземпляр агрегирующей функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> с заданным 
            типом для колонки по укзанному пути относительно корневой схемы.
            </summary>
            <param name="aggregationType">Тип агрегирующей функции.</param>
            <param name="columnPath">Путь к колонке схемы относительно корневой схемы.</param>
            <returns>Экземпляр созданной агрегирующей функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передается пустая строка или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNullFunction(System.String,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> для колонок с проверяемым и 
            замещающим значениями, которые расположены по заданным путям относительно корневой схемы.
            </summary>
            <param name="checkColumnPath">Путь к колонке, содержащей проверяемое значение.</param>
            <param name="replacementColumnPath">Путь к колонке, содержащей значение, которое возвращается функцией в 
            случае, если проверяемое значение равно <c>null</c>.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве одного из параметров 
            <paramref name="checkColumnPath"/> или <paramref name="replacementColumnPath"/> передано пустое 
            значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateDatePartFunction(Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval,System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей заданный 
            интервал даты для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="interval">Часть даты, возвращаемая функцией.</param>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передано пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateDayFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей интервал даты 
            [День] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateWeekFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [Неделя] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateMonthFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [Месяц] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateYearFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [Год] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateWeekdayFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [День недели] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateHourFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [Час] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateHourMinuteFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, возвращающей часть даты 
            [Минута] для значения колонки, расположенной по указанному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(System.String[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> для заданного массива путей к 
            колонкам относительно корневой схемы.
            </summary>
            <param name="columnPaths">Массив путей к колонкам относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCaseNotNullQueryFunctionWhenItem(System.String,System.Object)">
            <summary>
            Возвращает экземпляр выражения для sql-конструкции 
            вида <c>WHEN &lt;Выражение_1&gt; IS NOT NULL THEN &lt;Выражение_2&gt;</c>.</summary>
            <param name="whenColumnPath">Путь к колонке, содержащей выражение предложения <c>WHEN</c>.</param>
            <param name="thenParameterValue">Путь к колонке, содержащей выражение предложения <c>THEN</c>.</param>
            <returns>Экземпляр созданного выражения условия <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCaseNotNullFunction(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/> для заданного массива 
            выражений условий.
            </summary>
            <param name="whenItems">Массив выражений условий создаваемой функции.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentDateTimeFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, возвращающей текущие 
            дату и время.
            </summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentDateFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/> возвращающей текущую дату.
            </summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentTimeFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, определяющей текущее 
            время.</summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, определяющей текущего 
            пользователя.
            </summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserContactFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, определяющей 
            идентификатор контакта текущего пользователя.
            </summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserAccountFunction">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, определяющей 
            идентификатор контрагента текущего пользователя.
            </summary>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateUpperFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> для выражения колонки по 
            заданному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateTrimFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> для выражения колонки по 
            заданному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передана пустая строка или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateTrimFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> для заданного массива выражений.
            </summary>
            <param name="expressions">Массив выражений.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="expressions"/> 
            передано значение <c>null</c> или если массив выражений не содержит ни одного элемента.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateLengthFunction(System.String)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> для выражения колонки по 
            заданному пути относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передана пустая строка ли <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateLengthFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> для заданного массива выражений.
            </summary>
            <param name="expressions">Массив выражений.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="expressions"/> 
            передается значение <c>null</c> или если массив выражений не содержит ни одного элемента.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateConcatFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> для заданного массива выражений.
            </summary>
            <param name="expressions">Массив выражений.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="expressions"/> 
            передается значение <c>null</c> или если массив выражений не содержит ни одного элемента.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCastFunction(System.String,Terrasoft.Core.DBDataValueType)">
            <summary>
            Возвращает экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> для выражения колонки, 
            расположенной по заданному пути относительно корневой схемы, и указанным целевым типом данных.
            </summary>
            <param name="columnPath">Путь к колонке относительно корневой схемы.</param>
            <param name="castType">Целевой тип данных.</param>
            <returns>Экземпляр созданной функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передана пустая строка или значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.String[])">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражений двух колонок, расположенных по указанным путям 
            относительно корневой схемы.</summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionColumnPaths">Массив путей к колонкам, содержащих выражения правой части фильтра.
            </param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути 
            относительно корневой схемы, и переданного выражения.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpression">Выражение в правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути 
            относительно корневой схемы, и переданного экземпляра функции.</summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionValue">Экземпляр функции выражения в правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для заданных выражения левой части фильтра, типа макроса и 
            значения, которое обрабатывается макросом в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpression">Выражение в левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение, которое обрабатывается макросом в правой части фильтра. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DateTime)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для заданных параметров.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpression">Выражение в левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение типа <see cref="T:System.DateTime"/>, которое обрабатывается макросом в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="macrosType"/> передан 
            неподдерживаемый тип макроса.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DayOfWeek)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для заданных выражения левой части фильтра, типа макроса и 
            значения типа <see cref="T:System.DayOfWeek"/>, которое обрабатывается макросом в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpression">Выражение в левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение типа <see cref="T:System.DayOfWeek"/>, которое обрабатывается макросом в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="macrosType"/> передан 
            неподдерживаемый тип макроса.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданных типа макроса и числового значения, которое обрабатывается макросом в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение, которое обрабатывается макросом в правой части фильтра. Используется для 
            типов макроса <c>NextNDays</c> и <c>PreviousNDays</c>. Необязательный параметр, по умолчанию равен <c>0</c>.
            </param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DateTime)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по заданному пути, типа 
            макроса и значения типа <see cref="T:System.DateTime"/>, которое обрабатывается макросом в правой части 
            фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение типа <see cref="T:System.DateTime"/>, которое обрабатывается макросом в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DayOfWeek)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            типа макроса и значения типа <see cref="T:System.DayOfWeek"/>, которое обрабатывается макросом в правой 
            части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="rightValue">Значение типа <see cref="T:System.DayOfWeek"/>, которое обрабатывается макросом в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по заданному пути, и 
            переданного подзапроса.</summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionValue">Выражение подзапроса в правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateAggregationEntitySchemaExpression(System.String,Terrasoft.Common.AggregationTypeStrict)">
            <summary>
            Возвращает выражение агрегирующей функции указанного типа для выражения колонки, расположенной по 
            заданному пути.
            </summary>
            <param name="leftExprColumnPath">Путь к колонке, для выражения которой строится агрегирующая функция.
            </param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <returns>Экземпляр выражения созданной агрегирующей функции.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSubEntitySchemaExpression(System.String)">
            <summary>
            Возвращает выражение подзапроса к схеме объекта для колонки, расположенной по заданному пути.
            </summary>
            <param name="leftExprColumnPath">Путь к колонке, для которой создается позапрос.</param>
            <returns>Экземпляр выражения подзапроса для колонки, расположенной по пути 
            <paramref name="leftExprColumnPath"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Int32)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа агрегирующей функции и переданного значения параметра типа <see cref="T:System.Int32"/>, к 
            которому применяется агрегируюшая функция в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="rightExprParameterValue">Значение параметра, к которому применяется агрегирующая функция в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Double)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа агрегирующей функции и переданного значения параметра типа <see cref="T:System.Double"/>, к 
            которому применяется агрегирующая функция в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="rightExprParameterValue">Значение параметра, к которому применяется агрегирующая функция в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.DateTime)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа аргегирующей функции и переданного значения параметра типа <see cref="T:System.DateTime"/>, к 
            которому применяется агрегирующая функция в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="rightExprParameterValue">Значение параметра, к которому применяется агрегирующая функция в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.String)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для колонки, расположенной по указанному пути, заданного типа 
            агрегирующей функции и переданного значения параметра типа <see cref="T:System.String"/>, к которому 
            применяется агрегирующая функция в правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="rightExprParameterValue">Значение параметра, к которому применяется агрегирующая функция в 
            правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Object,Terrasoft.Core.Entities.EntitySchemaQuery@)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа агрегирующей функции и переданного значения параметра, к которому применяется агрегирующая 
            функция в правой части фильтра. При этом в исходящем параметре возвращается подзапрос для выражения из 
            левой части фильтра либо подзапрос для первого выражения из правой части фильтра, если левое выражение 
            фильтра равно <c>null</c>.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="rightExprParameterValue">Значение параметра, к которому применяется агрегирующая функция в 
            правой части фильтра.</param>
            <param name="leftExprSubQuery">Параметр, в котором возвращается подзапрос для выражения в левой части 
            фильтра (если он не равен <c>null</c>) либо подзапрос для первого выражения в правой части фильтра (если 
            выражение левой части фильтра равно <c>null</c>).</param>
            <returns>Экземпляр созданого фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа агрегирующей функции, заданного типа макроса и значения, к которому применяется макрос в 
            правой части фильтра.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="daysCount">Значение, к которому применяется макрос в правой части фильтра. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,Terrasoft.Core.Entities.EntitySchemaQuery@,System.Int32)">
            <summary>
            Возвращает фильтр с заданным типом сравнения для выражения колонки, расположенной по указанному пути, 
            заданного типа агрегирующей функции, заданного типа макроса и значения, к которому применяется макрос в 
            правой части фильтра. При этом в исходящем параметре возвращается подзапрос для выражения из левой части 
            фильтра.</summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExprColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="leftExprAggregationType">Тип агрегирующей функции.</param>
            <param name="macrosType">Тип макроса.</param>
            <param name="leftExprSubQuery">Параметр, в котором возвращается подзапрос для выражения в левой части 
            фильтра.</param>
            <param name="daysCount">Значение, которое обрабатывается макросом в правой части фильтра. Необязательный 
            параметр, по умолчанию равен <c>0</c>.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            Возвращает параметризированный фильтр с заданным типом сравнения для выражения колонки, расположенной по 
            указанному пути, и переданного списка значений параметров из правой части фильтра. При этом для колонки 
            типа справочник можно определить тип ее значения, используемого в фильтре.</summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="useDisplayValue">Признак типа значения колонки-справочника, которое используется в фильтре: 
            <c>true</c> - значение для отображения; <c>false</c> - хранимое значение.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionParameterValues">Список значений параметров из правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.Object[])">
            <summary>
            Возвращает параметризированный фильтр с заданным типом сравнения для выражения колонки, расположенной по 
            указанному пути, и переданного списка значений параметров из правой части фильтра. 
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionParameterValues">Список значений параметров из правой части фильтра.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Возвращает параметризированный фильтр с заданным типом сравнения для выражения колонки, расположенной по 
            указанному пути, и списка значений параметров из переданного перечислителя. При этом для колонки типа 
            справочник можно определить тип ее значения, используемого в фильтре.
            </summary>
            <param name="comparisonType">Тип сравнения.</param>
            <param name="leftExpressionColumnPath">Путь к колонке, содержащей выражение левой части фильтра.</param>
            <param name="rightExpressionParameterValues">Перечислитель значений параметров из правой части фильтра.
            </param>
            <param name="useDisplayValue">Признак типа значения колонки-справочника, которое используется в фильтре: 
            <c>true</c> - значение для отображения; <c>false</c> - хранимое значение.
            </param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNullFilter(System.String)">
            <summary>
            Для текущего запроса к схеме объекта возвращает фильтр сравнения типа [Является <c>null</c> в базе 
            данных], устанавливая в качестве условия проверки выражение колонки, расположенной по указанному пути.
            </summary>
            <param name="leftExpressionColumnPath">Путь к колонке, для выражения которой строится фильтр.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNotNullFilter(System.String)">
            <summary>
            Для текщуего запроса к схеме объекта возвращает фильтр сравнения типа [Не является <c>null</c> в базе 
            данных], устанавливая в качестве проверяемого значения выражение колонки, расположенной по указанному пути.
            </summary>
            <param name="leftExpressionColumnPath">Путь к колонке, для которой строится фильтр.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateExistsFilter(System.String)">
            <summary>
            Для текущего запроса к схеме объекта возвращает фильтр сравнения типа [Существует по заданному условию] и 
            устанавливает в качестве проверяемого значения выражение колонки, расположенной по заданному пути.
            </summary>
            <param name="rightExpressionColumnPath">Путь к колонке, для выражения которой строится фильтр.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateNotExistsFilter(System.String)">
            <summary>
            Для текущего запроса к схеме объекта возвращает фильтр сравнения типа [Не существует по заданному условию] 
            и устанавливает в качестве проверяемого значения выражение колонки, расположенной по заданному пути.
            </summary>
            <param name="rightExpressionColumnPath">Путь к колонке, для выражения которой строится фильтр.</param>
            <returns>Экземпляр созданного фильтра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.RemoveColumn(System.String)">
            <summary>
            Удаляет колонку с заданным именем из коллекции колонок текущего запроса.</summary>
            <param name="columnName">Имя удаляемой колонки.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQuery@)">
            <summary>
            Создает и добавляет колонку в текущий запрос к схеме объекта в виде подзапроса, возвращающего результат 
            указанной агрегирующей функции, по пути к колонке схемы относительно корневой схемы.
            </summary>
            <param name="columnPath">Путь к колонке схемы относительно корневой схемы.</param>
            <param name="aggregationType">Тип агрегирующей функции. В качестве параметра передаются значения 
            перечисления типов агрегирующей функции <see cref="T:Terrasoft.Common.AggregationTypeStrict"/>.</param>
            <param name="subQuery">Ссылка на созданный подзапрос, помещенный в колонку.</param>
            <returns>Экземпляр созданной колонки <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQueryColumn)">
            <summary>
            Добавляет переданную колонку в коллекцию колонок текущего запроса к схеме объекта.</summary>
            <param name="queryColumn">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>, добавляемый в коллекцию колонок 
            текущего запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.String)">
            <summary>
            Создает и добавляет колонку в текущий запрос к схеме объекта по заданному пути к колонке относительно 
            корневой схемы.</summary>
            <param name="columnPath">Путь к колонке схемы относительно корневой схемы.</param>
            <returns>Экземпляр созданной колонки.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передано пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            Создает и добавляет колонку в текущий запрос к схеме объекта по переданной функции.</summary>
            <param name="function">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFunction"/>.</param>
            <returns>Экземпляр созданной колонки <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddAllSchemaColumns(System.Boolean)">
            <summary>
            В коллекцию колонок текущего запроса к схеме объекта добавляет все колонки корневой схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryColumns">
            <summary>
            Возвращает коллекцию выражений тех колонок запроса, для которых вычисляются итоговые значения.
            </summary>
            <returns>Коллекция выражений колонок запроса, для которых вычисляются итоговые значения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryColumns(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Для заданного перечня имен колонок возвращает коллекцию выражений колонок, для которых вычисляются итоговые 
            значения.
            </summary>
            <param name="columnNames">Перечислитель имен колонок запроса.</param>
            <returns>Коллекция выражений колонок, для которых вычисляются итоговые значения.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если у колонки с именем из перечислителя 
            <paramref name="columnNames"/> не определен тип агрегирующей функции либо если данная колонка не 
            используется для построения результирующего sql-запроса.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSelectQuery(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает запрос на выборку данных, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> для текущего запроса к схеме объекта.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если результирующий запрос на выборку не содержит ни одной 
            колонки.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSelectQuery(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            Возвращает запрос на выборку данных, построенный с учетом заданных настроек, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="options">Настройки запроса к схеме объекта.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> для текущего запроса к схеме объекта, построенный с учетом 
            настроек <paramref name="options"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ResetSelectQuery">
            <summary>
            Очищает запрос на выборку для текущего запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            Возвращает запрос на выборку итоговых (агрегирующих) значений для заданной коллекции колонок текущего 
            экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="summaryColumns">Коллекция колонок, для которых строится запрос на выборку итоговых значений.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> построенного запроса на выборку.</returns>
            <exception cref="T:Terrasoft.Core.Entities.SelectFromVirtualSchemaException">При попытке построения запроса на выборку из виртуальной 
            схемы.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="summaryColumns"/> 
            передано значение <c>null</c> или если коллекция колонок не содержит ни одного элемента.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает запрос на выборку итоговых (агрегирующих) значений для всех колонок текущего экземпляра 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> построенного запроса на выборку.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает запрос на выборку итоговых (агрегирующих) значений для колонок текущего экземпляра 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> с указанными именами, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columnNames">Перечислитель имен колонок, для которых строится запрос на выборку итоговых 
            значений.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> построенного запроса на выборку.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,System.String[])">
            <summary>
            Возвращает запрос на выборку итоговых (агрегирующих) значений для колонок текущего экземпляра 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> с указанными именами, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columnNames">Массив имен колонок, для которых строится запрос на выборку итоговых значений.
            </param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.Select"/> построенного запроса на выборку.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSchema">
            <summary>
            Возвращает экземпляр схемы объекта текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ResetSchema">
            <summary>
            Очищает схему текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntity(Terrasoft.Core.UserConnection,System.Object)">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> по заданному первичному ключу, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="primaryColumnValue">Значение первичного ключа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> с первичным ключом <paramref name="primaryColumnValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntityCollection(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            Возвращает коллекцию объектов, являющихся результатом выполнения текущего запроса к схеме объекта с учетом 
            заданных настроек, используя переданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="options">Настройки запроса к схеме объекта.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntityCollection(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает коллекцию экземпляров <see cref="T:Terrasoft.Core.Entities.Entity"/>, представляющих результаты выполнения текущего 
            запроса с использованием заданного пользовательского подключения.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntityCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых 
            значений для переданной коллекции колонок текущего запроса с использованием заданного 
            пользовательского подключения.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="summaryColumns">Коллекция колонок запроса, для которых выбираются итоговые значения.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых значений 
            коллекции колонок <paramref name="summaryColumns"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых 
            значений для всех колонок текущего запроса с использованием заданного пользовательского подключения.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых значений 
            всех колонок текущего запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых 
            значений для колонок с заданными именами, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columnNames">Перечислитель имен колонок.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых значений 
            для колонок с именами <paramref name="columnNames"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,System.String[])">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых 
            значений для колонок с заданными именами, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="columnNames">Массив имен колонок.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/> для результата, возвращаемого запросом на выборку итоговых значений 
            для колонок с именами <paramref name="columnNames"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetDataTable(Terrasoft.Core.UserConnection)">
            <summary>
            Возвращает результат выполнения текущего запроса к схеме объекта в виде таблицы данных в памяти, используя 
            заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <returns>Экземпляр <see cref="T:System.Data.DataTable"/>, представляющий результат выполнения текущего 
            запроса к схеме объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.LoadDataTableData(Terrasoft.Core.UserConnection,System.Data.DataTable)">
            <summary>
            Загружает результат выполнения текущего запроса к схеме объекта в переданный объект 
            <see cref="T:System.Data.DataTable"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable"/>, в который загружается результат 
            выполнения запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.LoadDataTableData(Terrasoft.Core.UserConnection,System.Data.DataTable,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            Загружает результат выполнения текущего запроса к схеме объекта в переданный объект 
            <see cref="T:System.Data.DataTable"/> с учетом заданных настроек, используя заданное пользовательское 
            подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="dataTable">Экземпляр <see cref="T:System.Data.DataTable"/>, в который загружается результат 
            выполнения запроса.</param>
            <param name="options">Настройки запроса к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetTypedColumnValue``1(Terrasoft.Core.Entities.Entity,System.String)">
            <summary>
            Возвращает типизированное значение колонки с заданным именем из переданного экземпляра <see cref="T:Terrasoft.Core.Entities.Entity"/>.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="entity">Экземпляр <see cref="T:Terrasoft.Core.Entities.Entity"/>, которому принадлежит колонка.</param>
            <param name="columnName">Имя колонки.</param>
            <returns>Типизированное значение колонки с именем <paramref name="columnName"/>, принадлежащей 
            <paramref name="entity"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="entity"/> передано 
            значение <c>null</c>. Или если в качестве параметра <paramref name="columnName"/> передано пустое значение 
            или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Создает и добавляет в текущий запрос к схеме объекта колонку типа параметр с заданным значением 
            определенного типа.
            </summary>
            <param name="parameterValue">Значение параметра.</param>
            <param name="parameterDataValueType">Тип значения параметра.</param>
            <returns>Экземпляр созданной колонки <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Создает и добавляет в текущий запрос к схеме объекта в качестве колонки переданный экземпляр подзапроса 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <param name="subQuery">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, который добавляется в качестве колонки к 
            текущему запросу.
            </param>
            <returns>Экземпляр созданной колонки <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Name">
            <summary>
            Имя.
            </summary>
            <exception cref="T:System.ArgumentException">При попытке изменения имени базового представления.</exception>
            <exception cref="T:System.ArgumentException">Если свойству присваивается значение, не являющееся действительным 
            идентификатором, или пустая строка.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.CacheItemName">
            <summary>
            Имя элемента кэша.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ParentCollection">
            <summary>
            Коллекция запросов, которой принадлежит текущий запрос к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ParentEntitySchema">
            <summary>
            Родительская схема запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IsInherited">
            <summary>
            Признак, является ли запрос унаследованным.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.CanReadUncommitedData">
            <summary>
            Признак, определяющий, будут ли попадать в результаты запроса данные, для которых не завершена транзакция.
            </summary>
            <remarks>Если свойство равно <c>true</c>, то в результаты запроса попадают данные, для которых не завершена 
            транзакция; если <c>false</c> - в запрос попадают только данные, для которых завершена транзакция.
            Значение по умолчанию: <c>true</c>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IgnoreDisplayValues">
            <summary>
            Признак, определяющий, что в запросе не будут использоваться отображаемые значения колонок.
            </summary>
            <remarks>Если свойство равно <c>true</c>, то в запросе возвращаются отображаемые значения колонок; если 
            свойство равно <c>false</c>, то запрос возвращает хранимые значения колонок.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Caption">
            <summary>
            Заголовок.
            </summary>
            <remarks>По умолчанию инициализируется заголовком схемы запроса.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ManagerItem">
            <summary>
            Элемент менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Manager">
            <summary>
            Менеджер схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.EntitySchemaManager">
            <summary>
            Менеджер схем объектов.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.DataValueTypeManager">
            <summary>
            Менеджер значений типов данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.RootSchema">
            <summary>Корневая схема.</summary>
            <remarks>Все пути к колонкам схем задаются относительно этой корневой схемы. 
            Свойство инициализируется в конструкторе. Значение по умолчанию: <c>null</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.PrimaryQueryColumn">
            <summary>Колонка, созданная по первичной колонке корневой схемы. 
            Заполняется при первом обращении.</summary>
            <remarks>Значение по умолчанию: экземпляр, созданный по первичной колонке корневой схемы.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Columns">
            <summary>Коллекция колонок текущего запроса к схеме объекта.</summary>
            <remarks>Значение по умолчанию: содержит колонку из свойства <see cref="P:Terrasoft.Core.Entities.EntitySchemaQuery.PrimaryQueryColumn"/>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Filters">
            <summary>Коллекция фильтров текущего запроса к схеме объекта.</summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.UseAdminRights">
            <summary>Параметр, определяющий, будут ли учитываться права при построении запроса получения
            данных.</summary>
            <remarks>Значение по умолчанию: <c>true</c></remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.UseLocalization">
            <summary>Параметр, определяющий, будут ли использоваться локализуемые данные.</summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.HideSecurityValue">
            <summary>
            Параметр, определяющий, будут ли скрываться значения зашифрованных колонок.
            </summary>
            <remarks>
            Значение по умолчанию: <c>false</c>.
            Если установить параметр в <c>true</c>, то значение зашифрованных колонок будет равно <c>null</c>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.JoinRightState">
            <summary>Параметр, определяющий условие наложения прав при использовании связанных таблиц,
            если схема администрируется по записям.</summary>
            <remarks>Значение по умолчанию: вычитывается из системной настройки <see cref="T:Terrasoft.Core.DB.QueryJoinRightLevel"/>.
            Если настройка не задана, то значение равно <see cref="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledForAdditionalColumns"/>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IsDistinct">
            <summary>Признак, определяющий, убирать ли дубли в результирующем наборе данных.</summary>
            <remarks>Значение по умолчанию: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.RowCount">
            <summary>
            Количество строк, возвращаемых запросом.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.SkipRowCount">
            <summary>
            Количество строк, которые необходимо пропустить в результирующем наборе данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Cache">
            <summary>
            Кэш запроса.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQuery.Loading">
            <summary>
            Событие, возникающее при загрузке данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection">
            <summary>
            Коллекция запросов к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryCollection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>, являющийся клоном переданной коллекции 
            запросов к схеме объекта.
            </summary>
            <param name="source">Экземпляр коллекции <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>, клон которой создается.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.Clone">
            <summary>
            Возвращает клон текущей коллекции запросов к схеме объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции запросов к схеме 
            объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryCollection.ParentEntitySchema">
            <summary>
            Схема объекта, которой принадлежит коллекция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType">
            <summary>
            Тип выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.SchemaColumn">
            <summary>
            Колонка схемы.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.Function">
            <summary>
            Функция.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.Parameter">
            <summary>
            Параметр.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.SubQuery">
            <summary>
            Подзапрос.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.ArithmeticOperation">
            <summary>
            Арифметическая операция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs">
            <summary>
            Предоставляет данные о состоянии для события изменения типа выражения запроса к схеме объекта. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType,Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs"/> с заданными 
            предыдущим и текущим типами выражения запроса к схеме объекта.
            </summary>
            <param name="oldValue">Предыдущий тип выражения запроса к схеме объекта.</param>
            <param name="value">Текущий тип выражения запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.OldValue">
            <summary>
            Предыдущий тип выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.Value">
            <summary>
            Текущий тип выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед изменением типа выражения запроса к схеме объекта. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType,Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs"/> с заданными
            предыдущим и текущим типами выражения запроса к схеме объекта.
            </summary>
            <param name="oldValue">Предыдущий тип выражения запроса к схеме объекта.</param>
            <param name="value">Текущий тип выражения запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs.Cancel">
            <summary>
            Определяет, было ли отменено изменение типа выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1">
            <summary>
            Предоставляет данные о состоянии для события изменения свойства запроса к схеме объекта.
            </summary>
            <typeparam name="T">Любой класс.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1"/> с заданными 
            предыдущим и текущим значениями свойства запроса к схеме объекта.
            </summary>
            <param name="oldValue">Предыдущее значение свойства запроса к схеме объекта.</param>
            <param name="value">Текущее значение свойства запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.OldValue">
            <summary>
            Предыдущее значение свойства запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.Value">
            <summary>
            Текущее значение свойства запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1">
            <summary>
            Предоставляет данные о состоянии для события перед изменением свойства запроса к схеме объекта.
            </summary>
            <typeparam name="T">Любой класс.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1"/> с заданными 
            предыдущим и текущим значениями свойства запроса к схеме объекта.
            </summary>
            <param name="oldValue">Предыдущее значение свойства запроса к схеме объекта.</param>
            <param name="value">Текущее значение свойства запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1.Cancel">
            <summary>
            Определяет, было ли отменено изменение свойства запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs">
            <summary>
            Предоставляет данные о состоянии для события изменения коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs"/> с заданными индексом 
            элемента коллекции и выражением запроса к схеме объекта.
            </summary>
            <param name="index">Индекс элемента в коллекции.</param>
            <param name="expression">Выражение запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.Index">
            <summary>
            Индекс элемента в коллекции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.Expression">
            <summary>
            Выражение запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед изменением коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs"/> c заданными 
            индексом элемента в коллекции и выражением запроса к схеме объекта.
            </summary>
            <param name="index">Индекс элемента в коллекции.</param>
            <param name="expression">Выражение запроса к схеме объекта.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs.Cancel">
            <summary>
            Определяет, было ли отменено изменение коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs">
            <summary>
            Предоставляет данные о состоянии для события изменения элемента коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs"/> с 
            заданными индексом элемента в коллекции, предыдущим и текущим значениями элемента коллекции.
            </summary>
            <param name="index">Индекс элемента в коллекции.</param>
            <param name="expression">Текущее значение элемента коллекции выражений запроса к схеме объекта.</param>
            <param name="oldExpression">Предыдущее значение элемента коллекции выражений запроса к схеме объекта.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs.OldExpression">
            <summary>
            Предыдущее значение элемента коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед изменением элемента коллекции выражений запроса к схеме 
            объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs"/> с 
            заданными индексом элемента в коллекции, предыдущим и текущим значениями элемента коллекции выражений 
            запроса к схеме объекта.
            </summary>
            <param name="index">Индекс элемента в коллекции.</param>
            <param name="expression">Текущее значение элемента коллекции выражений запроса к схеме объекта.</param>
            <param name="oldExpression">Предыдущее значение элемента коллекции выражений запроса к схеме объекта.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs.Cancel">
            <summary>
            Определяет, было ли отменено изменение элемента коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression">
            <summary>
            Выражение запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> с заданным типом выражения запроса к 
            схеме объекта.
            </summary>
            <param name="expressionType">Тип выражения запроса к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchema,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для колонки, расположенной по указанному 
            пути относительно заданной корневой схемы.
            </summary>
            <param name="rootSchema">Корневая схема, относительно которой строится выражение.</param>
            <param name="schemaColumnPath">Строка пути к колонке, для которой строится выражение.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для заданного экземпляра колонки схемы 
            объекта, расположенной по указанному пути относительно заданной корневой схемы.
            </summary>
            <param name="rootSchema">Корневая схема, относительно которой строится выражение.</param>
            <param name="schemaColumn">Экземпляр колонки схемы объекта, для которой строится выражение.</param>
            <param name="schemaColumnPath">Строка пути к колонке <paramref name="schemaColumn"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для заданной функции запроса к схеме 
            объекта.
            </summary>
            <param name="function">Функция запроса к схеме объекта, для которой строится выражение.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для заданного подзапроса к схеме объекта.
            </summary>
            <param name="subQuery">Подзапрос к схеме объекта, для которого строится выражение.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> для арифметической операции с заданными 
            операндами.
            </summary>
            <param name="arithmeticOperation">Арифметическая операция.</param>
            <param name="leftArithmeticOperand">Левый операнд арифметической операции.</param>
            <param name="rightArithmeticOperand">Правый операнд арифметической операции.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>, являющийся клоном переданного выражения 
            запроса к схеме объекта.
            </summary>
            <param name="source">Выражение запроса к схеме объекта, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Addition(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Перегрузка оператора арифметического сложения для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд в операции сложения.</param>
            <param name="rightOperand">Выражение запроса к схеме объекта - правый операнд в операции сложения.</param>
            <returns>Новое выражение запроса к схеме объекта, представляющее сумму выражений-операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Addition(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            Перегрузка оператора арифметического сложения для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - правый операнд в операции сложения.</param>
            <param name="rightOperand">Значение типа <see cref="T:System.Double"/> - левый операнд в операции сложения.
            </param>
            <returns>Новое выражение запроса к схеме объекта, представляющее сумму операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Subtraction(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Перегрузка оператора арифметического вычитания для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд операции вычитания.</param>
            <param name="rightOperand">Выражение запроса к схеме объекта - правый операнд в операции вычитания.</param>
            <returns>Новое выражение запроса к схеме объекта, представляющее разность между операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Subtraction(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            Перегрузка оператора арифметического вычитания для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - правый операнд в операции вычитания.</param>
            <param name="rightOperand">Значение типа <see cref="T:System.Double"/> - левый операнд значения выражения.
            </param>
            <returns>Новое выражение запроса к схеме объекта, представляющее разность между операндами 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Multiply(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Перегрузка оператора арифметического умножения для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд операции умножения.</param>
            <param name="rightOperand">Выражение запроса к схеме объекта - правый операнд операции умножения.</param>
            <returns>Новое выражение запроса к схеме объекта, представляющее произведение операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Multiply(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            Перегрузка оператора арифметического умножения для выражений запросов к схемам объектов
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд операции умножения.</param>
            <param name="rightOperand">Значение типа <see cref="T:System.Double"/> - правый операнд операции умножения.
            </param>
            <returns>Новое выражение запроса к схеме объекта, представляющее произведение операндов 
            <paramref name="leftOperand"/> и <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Division(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Перегрузка оператора арифметического деления для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд операции деления.</param>
            <param name="rightOperand">Выражение запроса к схеме объекта - правый операнд в операции деления.</param>
            <returns>Новое выражение запроса к схеме объекта, представляющее частное операнда 
            <paramref name="leftOperand"/> и операнда <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Division(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            Перегрузка оператора арифметического деления для выражений запросов к схемам объектов.
            </summary>
            <param name="leftOperand">Выражение запроса к схеме объекта - левый операнд операции деления.</param>
            <param name="rightOperand">Значение типа <see cref="T:System.Double"/> - правый операнд в операции деления.
            </param>
            <returns>Новое выражение запроса к схеме объекта, представляющее частное операнда 
            <paramref name="leftOperand"/> и операнда <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetJoinPath(System.String)">
            <summary>
            Возвращает путь к связанной таблице, из которой выбирается выражение колонки, по заданному полному пути к 
            колонке выражения.
            </summary>
            <param name="columnPath">Полный путь к колонке выражения.</param>
            <returns>Путь к связанной таблице колонки выражения.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="columnPath"/> 
            передано пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию выражения запроса к схеме объекта с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого 
            выполняется сериализация. </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Для текущего выражения создает выражение колонки запроса к базе данных с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права доступа к базе 
            данных для текущего выражения запроса к схеме объекта.</param>
            <returns>Выражение колонки запроса для текущего выражения.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных текущего выражения запроса к схеме объекта, используя переданный менеджер типов 
            данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных текущего выражения запроса к схеме объекта.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если текущее выражение запроса имеет неподдерживаемый тип.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetCaption">
            <summary>
            Возвращает заголовок для отображения для текущего выражения запроса к схеме объекта.
            </summary>
            <returns>Заголовок для отображения для текущего выражения запроса к схеме объекта</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если текущее выражение запроса к схеме объекта имеет 
            неподдерживаемый тип.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionType">
            <summary>
            Тип выражения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsBlock">
            <summary>
            Определяет, помещается ли выражение в блок.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsNegative">
            <summary>
            Определяет, является ли выражение отрицанием.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SourceName">
            <summary>
            Источник данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SourceAlias">
            <summary>
            Псевдоним источника данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Path">
            <summary>
            Полный путь к колонке выражения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.JoinPath">
            <summary>
            Путь к связанной таблице колонки выражения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SchemaColumnName">
            <summary>
            Имя колонки схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.RootSchema">
            <summary>
            Корневая схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SchemaColumn">
            <summary>
            Экземпляр колонки схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Function">
            <summary>
            Функция выражения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsAggregationFunction">
            <summary>
            Признак, является ли выражение агрегирующей функцией.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsSubQuery">
            <summary>
            Признак, является ли выражение подзапросом.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValue">
            <summary>
            Значение параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedType">
            <summary>
            Типизированное значение параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.DisplayValue">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SubQuery">
            <summary>
            Подзапрос к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SubQueryOptions">
            <summary>
            Параметры подзапроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.QueryColumnAlias">
            <summary>
            Псевдоним колонки запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParentQuery">
            <summary>
            Родительский запрос к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ArithmeticOperation">
            <summary>
            Арифметическая операция.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.LeftArithmeticOperand">
            <summary>
            Левый операнд арифметической операции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.RightArithmeticOperand">
            <summary>
            Правый операнд арифметической операции.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanging">
            <summary>
            Событие, возникающее перед изменением типа выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInExpressionTypeChanging">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanging"/>. 
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanged">
            <summary>
            Событие, возникающее после изменения типа выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInExpressionTypeChanged">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanging">
            <summary>
            Событие, возникающее перед изменением функции запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInFunctionChanging">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanged">
            <summary>
            Событие, возникающее после изменения функции запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInFunctionChanged">
            <summary>
            Определяет, выполняется ли обработка <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanging">
            <summary>
            Событие, возникающее перед изменением значения параметра запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueChanging">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanged">
            <summary>
            Событие, возникающее после изменения значения параметра запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueChanged">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanging">
            <summary>
            Событие, возникающее перед изменением типизированного значения параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueForcedTypeChanging">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanged">
            <summary>
            Событие, возникающее после изменения типизированного значения параметра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueForcedTypeChanged">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanged"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection">
            <summary>
            Коллекция выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/>, являющийся клоном переданной 
            коллекции выражений.
            </summary>
            <param name="source">Экземпляр коллекции <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetMaxQueryColumnAliasLength(System.String)">
            <summary>
            Для текущей коллекции выражений возвращает максимальную длину псевдонима колонки запроса, расположенной по 
            заданному пути.
            </summary>
            <param name="joinPath">Путь к колонке запроса.</param>
            <returns>Максимальная длина псевдонима колонки запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String)">
            <summary>
            Возвращает уникальный псевдоним для колонки запроса с заданным псевдонимом.
            </summary>
            <param name="alias">Псевдоним колонки, для которой возвращается уникальный псевдоним.</param>
            <returns>Уникальный псевдоним колонки запроса для псевдонима <paramref name="alias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.Int32)">
            <summary>
            Возвращает уникальный псевдоним указанной максимальной длины для колонки запроса с заданным псевдонимом.
            </summary>
            <param name="alias">Псевдоним колонки, для которой возвращается уникальный псевдоним.</param>
            <param name="aliasMaxLength">Максимальная длина возвращаемого уникального псевдонима.</param>
            <returns>Уникальный псевдоним с максимальной длиной <paramref name="aliasMaxLength"/> для колонки с 
            псевдонимом <paramref name="alias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.String)">
            <summary>
            Возвращает уникальный псевдоним для колонки c заданным псевдонимом, расположенной по заданному пути.
            </summary>
            <param name="joinPath">Путь к колонке, для которой возвращается уникальный псевдоним.</param>
            <param name="alias">Псевдоним колонки, для которой возвращается уникальный псевдоним.</param>
            <returns>Уникальный псевдоним для колонки с псевдонимом <paramref name="alias"/>, расположенной по пути 
            <paramref name="joinPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.String,System.Int32)">
            <summary>
            Возвращает уникальный псевдоним с указанным максимальным ограничением по длине для колонки с заданным 
            псевдонимом, расположенной по заданному пути.
            </summary>
            <param name="joinPath">Путь к колонке, для которой возвращается уникальный псевдоним.</param>
            <param name="alias">Псевдоним колонки, для которой возвращается уникальный псевдоним.</param>
            <param name="aliasMaxLength">Максимальная длина возвращаемого уникального псевдонима.</param>
            <returns>Уникальный псевдоним с максимальной длиной <paramref name="aliasMaxLength"/> для колонки запроса с 
            псевдонимом <paramref name="alias"/>, расположенной по пути <paramref name="joinPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUsingSchemaColumnExpressions">
            <summary>
            Для текущей коллекции выражений формирует коллекцию выражений, которые будут использованы при построении 
            sql-запроса.
            </summary>
            <returns>Коллекция выражений, которая будет использована при построении sql-запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Для текущей коллекции выражений возвращает перечислитель выражений колонок запроса, сформированный с учетом 
            заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права доступа к базе 
            данных для текущего выражения запроса к схеме объекта.</param>
            <returns>Перечислитель выражений колонок запроса для текущей коллекции выражений.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.ResetQueryColumnAliases">
            <summary>
            Сброс псевдонимов для всех элементов текущей коллекции. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции выражений запроса к 
            схеме объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции выражений запроса к 
            схеме объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит данная коллекция выражений.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserting">
            <summary>
            Событие, возникающее перед добавлением элемента в коллекцию выражений запроса к схеме объекта. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionInserting">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserting"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserted">
            <summary>
            Событие, возникающее после добавления элемента в коллекцию выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionInserted">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserted"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanging">
            <summary>
            Событие, возникающее перед изменением элемента коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionChanging">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanged">
            <summary>
            Событие, возникающее после изменения элемента коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionChanged">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoving">
            <summary>
            Событие, возникающее перед удалением элемента из коллекции выражений к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionRemoving">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoving"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoved">
            <summary>
            Событие, возникающее после удаления элемента из коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionRemoved">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoved"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionClearing">
            <summary>
            Событие, возникающее перед удалением всех элементов коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInCollectionClearing">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionClearing"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionCleared">
            <summary>
            Событие, возникающее после удаления всех элементов коллекции выражений запроса к схеме объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInCollectionCleared">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionCleared"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn">
            <summary>
            Колонка запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> с заданным именем.
            </summary>
            <param name="name">Имя колонки запроса к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryColumn)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>, являющийся клоном переданной колонки 
            запроса к схеме объекта.
            </summary>
            <param name="source">Колонка запроса к схеме объекта, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию текущей колонки запроса к схеме объекта, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация текущей колонки запроса к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей колонки запроса к схеме объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей колонки запроса к схеме объекта.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.CreateSummaryQueryColumnExpression(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Создает выражение агрегирующей функции для заданного выражения колонки.
            </summary>
            <param name="queryColumnExpression">Выражение колонки запроса.</param>
            <returns>Выражение агрегирующей функции для выражения колонки запроса 
            <paramref name="queryColumnExpression"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей колонки запроса не указан тип агрегирующей 
            функции.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных хранимого значения колонки, используя переданный менеджер типов данных. 
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных значения колонки.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultDataDisplayValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных значения для отображения колонки, используя переданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных значения для отображения колонки.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByAsc">
            <summary>
            Для текущей колонки устанавливает порядок сортировки по возрастанию.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByAsc(System.Int32)">
            <summary>
            Для текущей колонки устанавливает порядок сортировки по возрастанию в заданной позиции.
            </summary>
            <param name="orderPosition">Позиция сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> с установленным порядком сортировки по 
            возрастанию.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByDesc">
            <summary>
            Для текущей колонки устанавливает порядок сортировки по убыванию.
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByDesc(System.Int32)">
            <summary>
            Для текущей колонки устанавливает порядок сортировки по убыванию в заданной позиции.
            </summary>
            <param name="orderPosition">Позиция сортировки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> с установленным порядком сортировки по 
            убыванию.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultSummaryDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных итогового значения колонки, используя переданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных итогового значения колонки.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей колонки не задан тип итоговой агрегирующей 
            функции.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Caption">
            <summary>
            Заголовок колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ValueExpression">
            <summary>
            Выражение хранимого значения колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ValueQueryAlias">
            <summary>
            Псевдоним хранимого значения в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.DisplayExpression">
            <summary>
            Выражение значения для отображения колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.DisplayValueQueryAlias">
            <summary>
            Псевдоним значения для отображения в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SourceSchemaUIdExpression">
            <summary>
            Выражение для уникального идентификатора схемы - источника.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит колонка.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsLookup">
            <summary>
            Признак, является ли колонка справочником.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsVisible">
            <summary>
            Признак, будет ли данная колонка присутствовать в результирующем наборе данных запроса. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsAlwaysSelect">
            <summary>
            Признак, будет ли данная колонка всегда присутствовать в результирующем sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsSelecting">
            <summary>
            Признак, использовать ли данную колонку для построения результирующего sql-запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.UseDisplayValue">
            <summary>
            Признак, использовать ли для колонки значение для отображения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderDirection">
            <summary>
            Порядок сортировки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderPosition">
            <summary>
            Позиция сортировки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsAggregated">
            <summary>
            Признак, применяется ли к колонке агрегирующая функция.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SummaryType">
            <summary>
            Тип агрегирующей функции для колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Path">
            <summary>
            Путь к колонке.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection">
            <summary>
            Коллекция колонок запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection"/>, являющийся клоном переданной 
            коллекции колонок запроса к схеме объекта.
            </summary>
            <param name="source">Коллекция колонок запроса к схеме объекта, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetUniqueName(System.String)">
            <summary>
            Генерирует уникальное для текущей коллекции имя колонки по заданному имени.
            </summary>
            <param name="name">Имя колонки, для которой генерируется уникальное имя.</param>
            <returns>Уникальное в контексте текущей коллекции имя для <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.RemoveByName(System.String)">
            <summary>
            Удаляет из коллекции колонку с заданным именем.
            </summary>
            <param name="name">Имя удаляемой колонки.</param>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="name"/> передано пустое 
            значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей коллекции нет колонки с именем 
            <paramref name="name"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetSelectingExpressions">
            <summary>
            Для текущей коллекции колонок возвращает коллекцию выражений колонок, которые будут использоваться для 
            построения результирующего sql-запроса.
            </summary>
            <returns>Коллекция выражений колонок, которые будут использованы для построения 
            результирующего sql-запроса. </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetSelectingValueExpressions">
            <summary>
            Из текущей коллекции возвращает коллекцию колонок, хранимые значения которых выбираются в запросе к схеме 
            объекта.
            </summary>
            <returns>Коллекция колонок, хранимые значения которых выбираются в запросе к схеме объекта.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.FindSchemaColumnByName(System.String)">
            <summary>
            Осуществляет поиск в коллекции колонки схемы с заданным именем. Если колонка схемы не найдена, возвращается 
            <c>null</c>.
            </summary>
            <param name="name">Имя искомой колонки схемы.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> с именем 
            <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.HasAggregationSelectingColumn">
            <summary>
            Определяет, есть ли в коллекции колонка, участвующая в построении запроса, к которой применена агрегирующая 
            функция.
            </summary>
            <returns><c>true</c>, если в текущей коллекции есть хотя бы одна колонка, участвующая в построении запроса, 
            к которой применена агрегирующая функцияЖ иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.ExistsByPath(System.String)">
            <summary>
            Определяет, есть ли в текущей коллекции колонка с заданным путем.
            </summary>
            <param name="path">Путь к колонке.</param>
            <returns><c>true</c>, если в текущей коллекции колонок есть колонка с путем <paramref name="path"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.Clone">
            <summary>
            Возвращает экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции колонок запроса к 
            схеме объекта.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции колонок запроса к 
            схеме объекта.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит коллекция колонок.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities">
            <summary>
            Предоставляет служебные методы для работы с выражениями запросов к схемам объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities.AddUsingSchemaColumnExpressions(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            Добавляет все выражения колонок запроса из переданного выражения в указанную коллекцию выражений.
            </summary>
            <param name="queryExpression">Выражение.</param>
            <param name="resultExpressions">Коллекция результирующих выражений колонок запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities.AddUsingSchemaColumnExpressions(Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection,Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            Добавляет все выражения колонок запроса из переданной коллекции выражений в указанную коллекцию выражений.
            </summary>
            <param name="queryExpressions">Коллекция выражений.</param>
            <param name="resultExpressions">Коллекция результирующих выражений колонок запроса.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.FilterComparisonType">
            <summary>
            Тип операции сравнения в фильтре.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Between">
            <summary>
            Диапазон значений.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.IsNull">
            <summary>
            Является <c>null</c> в базе данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.IsNotNull">
            <summary>
            Не является <c>null</c> в базе данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Equal">
            <summary>
            Равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotEqual">
            <summary>
            Не равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Less">
            <summary>
            Меньше.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.LessOrEqual">
            <summary>
            Меньше или равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Greater">
            <summary>
            Больше.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.GreaterOrEqual">
            <summary>
            Больше или равно.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.StartWith">
            <summary>
            Начинается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotStartWith">
            <summary>
            Не начинается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Contain">
            <summary>
            Содержит выражение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotContain">
            <summary>
            Не содержит выражение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.EndWith">
            <summary>
            Заканчивается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotEndWith">
            <summary>
            Не заканчивается выражением.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Exists">
            <summary>
            Существует по заданному условию.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotExists">
            <summary>
            Не существует по заданному условию.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.FilterAggregationType">
            <summary>
            Тип агрегирующей функции в фильтре.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.None">
            <summary>
            Тип агрегирующей функции не определен.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Min">
            <summary>
            Минимальное значение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Max">
            <summary>
            Максимальное значение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Sum">
            <summary>
            Сумма.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Avg">
            <summary>
            Среднее значение.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Count">
            <summary>
            Количество.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem">
            <summary>
            Интерфейс элемента фильтра запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            Заполняет переданную коллекцию выражениями колонок элемента фильтра, которые выбираются из связанных таблиц.
            </summary>
            <param name="expressions">Коллекция выражений колонок.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.GetFilterInstances">
            <summary>
            Возвращает перечисление экземпляров фильтра.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.IsEnabled">
            <summary>
            Определяет, использовать ли элемент в построении результирующего sql-запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит фильтр.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter">
            <summary>
            Представляет фильтр запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor(Terrasoft.Core.Entities.FilterComparisonType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/> с заданным типом операции сравнения.
            </summary>
            <param name="comparisonType">Тип операции сравнения в фильтре.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFilter)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>, являющийся клоном переданного фильтра.
            </summary>
            <param name="source">Экземпляр фильтра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>, клон которого создается.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию фильтра, используя переданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра фильтра.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.CreateQueryCondition(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Формирует условие запроса для данного фильтра с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права доступа.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.SetEnabled(System.Boolean)">
            <summary>
            Устанавливает свойству <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled"/> переданное значение.
            </summary>
            <param name="isEnabled">Значение, устанавливаемое свойству <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled"/>.</param>
            <returns>Текущий экземпляр фильтра.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            Заполняет переданную коллекцию выражениями колонок фильтра, которые выбираются из связанных таблиц. 
            </summary>
            <param name="expressions">Коллекция выражений колонок.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#GetFilterInstances">
            <summary>
            Возвращает перечисление экземпляров фильтра. 
            </summary>
            <returns>Перечислитель экземпляров фильтра.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.LeftExpression">
            <summary>
            Выражение левой части условия фильтра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.RightExpressions">
            <summary>
            Выражение правой части условия фильтра.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.ComparisonType">
            <summary>
            Тип операции сравнения в фильтре.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.AggregationType">
            <summary>
            Тип агрегирующей функции в фильтре.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled">
            <summary>
            Определяет, использовать ли фильтр в построении результирующего sql-запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит фильтр.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.TrimDateTimeParameterToDate">
            <summary>
            Определяет, выполнять ли преобразование выражений фильтра типа Дата/Время к типу Дата.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection">
            <summary>
            Коллекция фильтров запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит текущая коллекция фильтров.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Common.LogicalOperationStrict)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, фильтры в которой объединяются с 
            указанной логической операцией, для заданного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит текущая коллекция фильтров.</param>
            <param name="logicalOperation">Тип логической операции, которой объединяются фильтры в текущей коллекции.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Common.LogicalOperationStrict,Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem[])">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> с заданными массивом добавляемых в
            коллекцию элементов и типом логической операции, которой объединяются фильтры коллекции.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит текущая коллекция фильтров.</param>
            <param name="logicalOperation">Тип логической операции, которой объединяются фильтры в коллекции.</param>
            <param name="items">Массив элементов, которые добавляются в текущую коллекцию фильтров.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem[])">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> с указанным массивом элементов, 
            которые добавляются в текущую коллекцию, для заданного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит текущая коллекция фильтров.</param>
            <param name="items">Массив элементов, которые добавляются в текущую коллекцию фильтров.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, являющейся клоном переданной 
            коллекцией фильтров.
            </summary>
            <param name="source">Экземпляр коллекции фильтров <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию коллекции фильтров, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация коллекции фильтров.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию коллекции фильтров, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого выполняется 
            десериализация коллекции фильтров.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.SetEnabled(System.Boolean)">
            <summary>
            Устанавливает свойству <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled"/> переданное значение.
            </summary>
            <param name="isEnabled">Значение, устанавливаемое свойству <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled"/>.</param>
            <returns>Текущий экземпляр фильтра.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.FindByName(System.String)">
            <summary>
            Осуществляет поиск элемента с заданным именем.
            </summary>
            <param name="name">Имя элемента.</param>
            <returns>Элемент с именем <paramref name="name"/> или <c>null</c>, если такой элемент не найден.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.GetByName(System.String)">
            <summary>
            Возвращает элемент с заданным именем. Если такой элемент не найден, генерируется исключение.
            </summary>
            <param name="name">Имя элемента.</param>
            <returns>Элемент с именем <paramref name="name"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент с именем <paramref name="name"/> не найден в коллекции.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции фильтров.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            Заполняет переданную коллекцию выражениями колонок коллекции фильтров, которые выбираются из связанных 
            таблиц.
            </summary>
            <param name="expressions">Коллекция выражения колонок.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#GetFilterInstances">
            <summary>
            Возвращает перечисление экземпляров фильтров в коллекции.
            </summary>
            <returns>Перечисление экземпляров фильтров в коллекции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Name">
            <summary>
            Имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled">
            <summary>
            Определяет, использовать ли коллекцию фильтров в построении результирующего sql-запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsNot">
            <summary>
            Определяет, использовать ли оператор NOT перед коллекцией фильтров.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.LogicalOperation">
            <summary>
            Тип логической операции, которой объединяются фильтры в коллекции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит коллекция фильтров.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFunction">
            <summary>
            Базовый класс функции выражения запроса к схеме объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права 
            доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя переданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.CheckIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Проверяет, имеет ли возвращаемый функцией результат указанный тип данных. В противном случае генерируется 
            исключение.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если возвращаемый функцией результат имеет тип данных, отличный 
            от <paramref name="dataValueType"/>.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFunction.ParentQuery">
            <summary>
            Запрос к схеме объекта, которому принадлежит функция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction">
            <summary>
            Агрегирующая функция выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> заданного типа агрегирующей 
            функции для заданного запроса к схеме объекта.
            </summary>
            <param name="aggregationType">Тип агрегирующей функции.</param>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> для заданных типа агрегирующей
            функции, выражения и запроса к схеме объекта.</summary>
            <param name="aggregationType">Тип агрегирующей функции.</param>
            <param name="expression">Выражение запроса.</param>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>, являющийся клоном переданного 
            экземпляра агрегирующей функции выражения.
            </summary>
            <param name="source">Экземпляр агрегирующей функции выражения, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию агрегирующей функции, используя заданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для агрегирующей функции, сформированное с учетом заданных прав 
            доступа.</summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права 
            доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для агрегирующей функции выражения, сформированный с 
            учетом прав доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов агрегирующей функции.
            </summary>
            <returns>Коллекция выражений аргументов агрегирующей функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого агрегирующей функцией результата, используя заданный менеджер типов 
            данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого агрегирующей функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый агрегирующей функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если агрегирующая функция возвращает результат типа данных 
            <paramref name="dataValueType"/>; иначе - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если результат агрегирующей функции имеет неподдерживаемый тип 
            данных.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка агрегирующей функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.All">
            <summary>
            Устанавливает для текущей агрегирующей функции область применения [Ко всем значениям].
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Distinct">
            <summary>
            Устанавливает для текущей агрегирующей функции область применения [К уникальным значениям].
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.AggregationType">
            <summary>
            Тип агрегирующей функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.AggregationEvalType">
            <summary>
            Область применения агрегирующей функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Expression">
            <summary>
            Выражение аргумента агрегирующей функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction">
            <summary>
            Функция для замены значения <c>null</c> замещающим выражением.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> для заданных запроса к схеме 
            объекта, проверяемого выражения и замещающего выражения.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="checkExpression">Выражение, которое проверяется на равенство <c>null</c>.</param>
            <param name="replacementExpression">Выражение, которое возвращается функцией, если 
            <paramref name="checkExpression"/> равно <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>, являющийся клоном переданной 
            функции выражения.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции выражения, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация функции выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права 
            доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции запроса.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если проверяемое или замещающее выражение функции 
            равно <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражения аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя переданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns>Всегда возвращает <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.CheckExpression">
            <summary>
            Выражение аргумента функции, которое проверяется на равенство значению <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.ReplacementExpression">
            <summary>
            Выражение аргумента функции, которое возвращается функцией, если проверяемое выражение равно <c>null</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction">
            <summary>
            Функция, возвращающая первое не равное <c>null</c> выражение из списка аргументов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>, являющийся клоном переданной 
            функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции выражения, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация функции выражения.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если в качестве параметра <paramref name="dbSecurityEngine"/> 
            передано значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция выражений агрументов функции не имеет ни 
            одного элемента или равна <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция выражений аргументов функции не имеет ни 
            одного элемента или равна <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns>Всегда возвращает <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.SpecifyQueryAlias(System.String)">
            <summary>
            Определяет для текущей функции выражения заданный псевдоним в результирующем sql-запросе.
            </summary>
            <param name="queryAlias">Псевдоним, определяемый для текущей функции.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.Expressions">
            <summary>
            Коллекция выражений аргументов функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.HasExpressions">
            <summary>
            Признак, определяющий наличие хотя бы одного элемента в коллекции выражений аргументов функции. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem">
            <summary>
            Класс, описывающий выражение условия sql-оператора CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/> для заданных выражений
            предложений WHEN и THEN.</summary>
            <param name="whenExpression">Выражение предложения WHEN условия.</param>
            <param name="thenExpression">Выражение предложения THEN условия.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>, являющийся клоном 
            переданного экземпляра.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>, клон которого 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию условия, используя переданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>. 
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра условия.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.WhenExpression">
            <summary>
            Выражение предложения WHEN.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.ThenExpression">
            <summary>
            Выражение предложения THEN.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems">
            <summary>
            Коллекция выражений условий sql-оператора CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.#ctor">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>, являющийся клоном 
            переданной коллекции условий.
            </summary>
            <param name="source">Коллекция условий, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущей коллекции условий.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction">
            <summary>
            Функция, возвращающая одно из множества возможных значений в зависимости от указанных условий.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>, являющийся клоном переданной 
            функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции выражения, используя переданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра 
            <paramref name="dbSecurityEngine"/> передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция выражений условий функции не имеет ни одного 
            элемента или равна <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений агрументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция выражений условий функции не имеет ни одного 
            элемента или равна <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns>Всегда возвращает <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.SpecifyQueryAlias(System.String)">
            <summary>
            Определяет для текущей функции выражения заданный псевдоним в результирующем sql-запросе.
            </summary>
            <param name="queryAlias">Псевдоним, определяемый для текущей функции.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.WhenItems">
            <summary>
            Коллекция условий функции выражения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.HasWhenItems">
            <summary>
            Признак, имеет ли функция хотя бы одно условие.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.ElseExpression">
            <summary>
            Выражение предложения ELSE. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction">
            <summary>
            Функция, возвращающая выражение системного значения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений агрументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction">
            <summary>
            Функция выражения текущей даты и времени.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/> для заданного запроса к 
            схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, являющийся клоном 
            переданной функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction">
            <summary>
            Базовый класс функции выражения для базовой даты.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction.Offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction">
            <summary>
            Функция выражения текущей даты.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/> с указанным смещением 
            относительно базовой даты для заданного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение в минутах относительно базовой даты. По умолчанию равно 0.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>, являющийся клоном переданной 
            функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction">
            <summary>
            Функция выражения даты начала текущей недели.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/> для заданного запроса к 
            схеме объекта и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>, являющийся клоном 
            переданной функции выражения.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction">
            <summary>
            Функция выражения даты начала текущего месяца.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/> для заданного запроса 
            к схеме объекта и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>, являющийся клоном 
            переданной функции выражения.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction">
            <summary>
            Функция выражения даты начала текущего квартала.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/> для заданного запроса 
            к схеме объекта и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>, являющийся клоном 
            переданной функции выражения.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>, клон которого 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>.
            </summary>
            <returns>экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction">
            <summary>
            Функция выражения даты начала текущего полугодия.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/> для заданного 
            запроса к схеме объекта и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>, являющийся клоном 
            переданной функции выражения.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction">
            <summary>
            Функция выражения даты начала текущего года.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/> для заданного запроса к 
            схеме объекта и указанного смещения относительно базовой даты. 
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>, являющийся клоном 
            переданной функции выражения. 
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateTimeQueryFunction">
            <summary>
            Базовый класс функции выражения базовых даты и времени.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateTimeQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction">
            <summary>
            Функция выражения даты начала текущего часа.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> для заданного запроса к 
            схеме объекта и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> для заданного запроса к 
            схеме объекта с выражением аргумента функции и указанного смещения относительно базовой даты.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expression">Выражение аргумента функции.</param>
            <param name="offset">Смещение относительно базовой даты.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/>, являющийся клоном 
            переданной функции выражения.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction">
            <summary>
            Функция выражения текущего времени.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction">
            <summary>
            Функция выражения текущего пользователя.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/> для заданного запроса 
            к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction">
            <summary>
            Функция выражения контакта текущего пользователя.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/> для заданного запроса 
            к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, являющийся клоном 
            переданного экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction">
            <summary>
            Функция выражения контрагента текущего пользователя.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/> для заданного запроса к 
            схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, являющийся клоном 
            переданного экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, клон 
            которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.SystemValueName">
            <summary>
            Имя системного значения.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval">
            <summary>
            Часть даты.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Day">
            <summary>
            День.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Week">
            <summary>
            Неделя.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Month">
            <summary>
            Месяц.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Year">
            <summary>
            Год.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Weekday">
            <summary>
            День недели.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Hour">
            <summary>
            Час.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.HourMinute">
            <summary>
            Минута.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction">
            <summary>
            Функция выражения части даты.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> с заданным выражением запроса и 
            указанной частью даты для определенного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="interval">Часть даты.</param>
            <param name="expression">Выражение запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции, используя заданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Объект <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный 
            с учетом прав доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя переданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений агрументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Interval">
            <summary>
            Часть даты, возвращаемая функцией.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction">
            <summary>
            Функция для преобразования символов выражения аргумента к верхнему регистру.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> для заданного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> для заданных выражения и запроса к 
            схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expression">Выражение запроса к схеме объекта.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>, клон которой создается.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции, используя заданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с 
            учетом прав доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction">
            <summary>
            Функция приведения выражения аргумента к заданному типу данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.DBDataValueType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> для заданного запроса к схеме объекта 
            с указанным целевым типом данных.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="castType">Целевой тип данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> с заданными выражением и целевым типом 
            данных.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expression">Выражение запроса.</param>
            <param name="castType">Целевой тип данных.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCastQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>, клон которой создается.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции, используя переданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции,сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.CastType">
            <summary>
            Целевой тип данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction">
            <summary>
            Функция для удаления начальных и конечных пробелов из выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> для заданного запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> для заданных выражения и запроса к 
            схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expression">Выражение запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>, клон которой создается.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции, используя переданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом переданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction">
            <summary>
            Функция для возврата длины выражения.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> для заданных выражения и запроса к 
            схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expression">Выражение запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции с помощью переданного экземпляра <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если выражение аргумента функции является <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, если функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.Expression">
            <summary>
            Выражение аргумента функции.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction">
            <summary>
            Функция для формирования строки, являющейся результатом объединения строковых значений аргументов функции.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> для заданного запроса к схеме 
            объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> для заданных массива выражений и 
            запроса к схеме объекта.
            </summary>
            <param name="parentQuery">Запрос к схеме объекта, которому принадлежит функция.</param>
            <param name="expressions">Массив выражений.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>, являющийся клоном переданного 
            экземпляра функции.
            </summary>
            <param name="source">Экземпляр функции <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>, клон которой 
            создается.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию функции, используя переданный экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого выполняется 
            сериализация.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Возвращает выражение колонки запроса для текущей функции, сформированное с учетом заданных прав доступа.
            </summary>
            <param name="dbSecurityEngine">Экземпляр <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, определяющий 
            права доступа.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> для текущей функции, сформированный с учетом прав 
            доступа <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">Если в качестве параметра <paramref name="dbSecurityEngine"/> 
            передано значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если коллекция выражений аргументов функции не содержит ни 
            одного элемента или равна <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetArguments">
            <summary>
            Возвращает коллекцию выражений аргументов функции.
            </summary>
            <returns>Коллекция выражений аргументов функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Возвращает тип данных возвращаемого функцией результата, используя заданный менеджер типов данных.
            </summary>
            <param name="dataValueTypeManager">Менеджер типов данных.</param>
            <returns>Тип данных возвращаемого функцией результата.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Определяет, имеет ли возвращаемый функцией результат указанный тип данных.
            </summary>
            <param name="dataValueType">Тип данных.</param>
            <returns><c>true</c>, функция возвращает результат типа данных <paramref name="dataValueType"/>; 
            иначе - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetCaption">
            <summary>
            Возвращает заголовок функции выражения.
            </summary>
            <returns>Строка заголовка функции.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>.
            </summary>
            <returns>Экземпляр <see cref="T:System.Object"/>, являющийся клоном текущего экземпляра функции.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.QueryAlias">
            <summary>
            Псевдоним функции в sql-запросе.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.Expressions">
            <summary>
            Коллекция выражений аргументов функции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.HasExpressions">
            <summary>
            Определяет, есть ли в коллекции аргументов функции хотя бы один элемент.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityValidationMessage">
            <summary>
            Сообщение о проверке объекта.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.MassageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.Text">
            <summary>
            Текст сообщения.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.Column">
            <summary>
            Колонка схемы объекта.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityValidationMessageCollection">
            <summary>
            Коллекция сообщений о проверке объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityValidationMessageCollection.HasErrors">
            <summary>
            Определяет наличие в коллекции сообщений об ошибках.
            </summary>
            <returns>
            <c>true</c>, если в коллекции сообщений есть сообщения об ошибках; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildRowLockHintSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.RowLockHint)">
            <summary>
            Формирует текст запроса табличного указания "Блокировка по записям".
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
            <param name="rowLockSqlHint">Табличное указание "Блокировка по записям".</param>
        </member>
        <member name="T:Terrasoft.Core.DB.Delete">
            <summary>
            Запрос на удаление данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Delete"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.#ctor(Terrasoft.Core.DB.Delete)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Delete"/>, являющийся клоном переданного запроса.
            </summary>
            <param name="source">Запрос на удаление, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.GetSqlText">
            <summary>
            Возвращает sql-текст текущего запроса.
            </summary>
            <returns>Sql-текст текущего запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            Формирует текст запроса с использование заданного экземпляра <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Delete"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Delete"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.From(System.String)">
            <summary>
            К текущему запросу добавляет в качестве источника данных схему с заданным именем.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Delete"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.From(Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            К текущему запросу добавляет в качестве источника данных заданный источник.
            </summary>
            <param name="source">Источник данных.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Delete"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Delete.Source">
            <summary>
            Источник данных запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Insert">
            <summary>
            Запрос на добавление данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.#ctor(Terrasoft.Core.DB.Insert)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>, являющийся клоном переданного запроса.
            </summary>
            <param name="source">Запрос на добавление, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Insert"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.GetSqlText">
            <summary>
            Возвращает sql-текст текущего запроса.
            </summary>
            <returns>Sql-текст текущего запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            Формирует текст запроса с использованием заданного экземпляра <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.GetUsingParameters">
            <summary>
            Возвращает коллекцию параметров запроса.
            </summary>
            <returns>Коллекция параметров запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Into(System.String)">
            <summary>
            Добавляет в текущий запрос предложение INTO, определяющее в качестве источника данных запроса схему с 
            заданным именем.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Into(Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            Добавляет в текущий запрос предложение INTO, определяющее в качестве источника данных запроса переданный 
            источник данных.
            </summary>
            <param name="source">Источник данных.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом выражения для 
            переданного подзапроса на выборку.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом выражения для 
            произвольного подзапроса.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом переданного 
            выражения колонки.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="columnExpression">Выражение колонки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом переданного 
            выражения.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="expression">Выражение.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущий запрос предложения SET для присвоения колонке с заданным псевдонимом выражения для 
            переданного параметра.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="parameter">Параметр запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Insert.ColumnValues">
            <summary>
            Коллекция значений колонок запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectDirection">
            <summary>
            Направление постраничного вывода.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Prior">
            <summary>
            Предыдущая страница.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.First">
            <summary>
            Первая страница.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Current">
            <summary>
            Текущая страница.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Next">
            <summary>
            Следующая страница.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectCondition">
            <summary>
            Представляет условие для запроса с постраничным выводом.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectCondition.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectCondition"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectCondition.#ctor(Terrasoft.Core.DB.PageableSelectCondition)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectCondition"/>, являющийся клоном переданного 
            условия запроса.
            </summary>
            <param name="source">Условие запроса, клон которого создается.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.LeftExpression">
            <summary>
            Выражение левой части условия.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.OrderByItem">
            <summary>
            Выражение, по которому выполняется сортировка результатов запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.LastValueParameter">
            <summary>
            Параметр, определяющий значение последней записи предыдущей страницы данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectOptions">
            <summary>
            Параметры постраничного вывода результатов запроса. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> с заданными количеством записей на 
            странице данных и направлением постраничного вывода.
            </summary>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение 
            последней записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы данных.
            </param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение 
            последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValueType">Тип данных значения последней записи предыдущей 
            страницы данных.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.String,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение 
            последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">Имя типа данных значения последней записи 
            предыдущей страницы.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит сохраняемое значение 
            последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит сохраняемое значение 
            последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValueType">Тип данных значения последней записи предыдущей 
            страницы.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionColumnName">Имя колонки, для которой добавляется условие запроса.</param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит сохраняемое значение 
            последней записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">Имя типа данных значения последней записи 
            предыдущей страницы.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит сохраняемое значение 
            последней записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит сохраняемое значение 
            последней записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы данных.
            </param>
            <param name="primaryConditionLastValueParameterValueType">Тип данных значения последней страницы данных.
            </param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение последней 
            записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы данных.
            </param>
            <param name="primaryConditionLastValueParameterValueTypeName">Имя типа данных значения последней записи 
            предыдущей страницы данных.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение последней 
            записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение последней записи предыдущей страницы данных.
            </param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение последней 
            записи предыдущей страницы.</param>
            <param name="primaryConditionLastValueParameterValue">Значение записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValueType">Тип данных значения последней записи предыдущей 
            страницы данных.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String,System.Int32)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryConditionSourceExpression">Выражение колонки, для которой добавляется условие запроса.
            </param>
            <param name="primaryConditionLastValueParameterName">Имя параметра, который содержит значение последней 
            записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValue">Значение записи предыдущей страницы данных.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">Имя типа значения последней записи 
            предыдущей страницы данных.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.PageableSelectCondition,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> заданными параметрами.
            </summary>
            <param name="primaryCondition">Условие запроса.</param>
            <param name="rowCount">Количество записей страницы данных.</param>
            <param name="direction">Направление постраничного вывода.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.PageableSelectOptions)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>, являющийся клоном переданного 
            экземпляра.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object)">
            <summary>
            Устанавливает свойствам первичного условия запроса с постраничным выводом переданные значения.
            </summary>
            <param name="leftExpression">Выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра значения последней записи предыдущей страницы данных.
            </param>
            <param name="lastValueParameterValue">Значение первичной последней записи предыдущей страницы данных.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Устанавливает свойствам первичного условия запроса с постраничным выводом переданные значения.
            </summary>
            <param name="leftExpression">Выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра значения последней записи предыдущей страницы данных.
            </param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueType">Тип данных значения последней записи предыдущей страницы данных.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String)">
            <summary>
            Устанавливает свойствам первичного условия запроса с постраничным выводом переданные значения.
            </summary>
            <param name="leftExpression">Выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра значения последней записи предыдущей страницы данных.
            </param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueTypeName">Имя типа данных значения последней записи предыдущей страницы 
            данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.OrderByItem,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет условие с заданными свойствами для переданного выражения сортировки результатов запроса.
            </summary>
            <param name="leftExpression">Выражение левой части условия.</param>
            <param name="orderByItem">Выражение, по которому выполняется сортировка результатов запроса.</param>
            <param name="lastValueParameter">Параметр, определяющий значение последней записи предыдущей страницы 
            данных.</param>
            <returns>Условие для выражения сортировки <paramref name="orderByItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет условие с заданными свойствами для выражений, по которым будет выполняться сортировка 
            результатов запроса.
            </summary>
            <param name="leftExpression">Выражение левой части условия.</param>
            <param name="lastValueParameter">Параметр, определяющий значение последней записи предыдущей страницы 
            данных.</param>
            <returns>Условие для выражений сортировки результатов запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object)">
            <summary>
            Добавляет условие с заданными свойствами для выражения колонки с указанным именем, по которой будет 
            выполняться сортировка результатов запроса.
            </summary>
            <param name="columnName">Имя колонки, для которой добавляется выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра, определяющего значение последней записи предыдущей 
            страницы данных.</param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <returns>Условие для выражения сортировки результатов запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Добавляет условие с заданными свойствами для выражения колонки с указанным именем, по которой будет 
            выполняться сортировка результатов запроса.
            </summary>
            <param name="columnName">Имя колонки, для которой добавляется выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра, определяющего значение последней записи предыдущей 
            страницы данных.</param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueType">Тип данных значения последней записи предыдущей 
            страницы данных.</param>
            <returns>Условие для выражения сортировки результатов запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object,System.String)">
            <summary>
            Добавляет условие с заданными свойствами для выражения колонки с указанным именем, по 
            которой будет выполняться сортировка результатов запроса.
            </summary>
            <param name="columnName">Имя колонки, для которой добавляется выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра, определяющего значение последней записи 
            предыдущей страницы данных.</param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueTypeName">Имя типа данных значения последней записи страницы данных.
            </param>
            <returns>Условие для выражения сортировки результатов запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Добавляет условие с заданными свойствами для выражения колонки с указанным именем из 
            указанного источника, по которой будет выполняться сортировка результатов запроса.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnName">Имя колонки, для которой добавляет выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра, определяющего значение последней записи страницы данных.
            </param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueType">Тип данных значения последней записи страницы данных.</param>
            <returns>Условие для выражения сортировки результатов запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            Добавляет условие с заданными свойствами для выражения колонки с указанным именем из указанного источника, 
            по которой будет выполняться сортировка результатов запроса.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnName">Имя колонки, для которой добавляется выражение левой части условия.</param>
            <param name="lastValueParameterName">Имя параметра, определяющего значение последней записи страницы данных.
            </param>
            <param name="lastValueParameterValue">Значение последней записи предыдущей страницы данных.</param>
            <param name="lastValueParameterValueTypeName">Имя типа значения последней записи страницы данных.</param>
            <returns>Условие для выражения сортировки результатов запроса.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.PrimaryCondition">
            <summary>
            Первичное условие запроса с постраничным выводом.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.HasPrimaryCondition">
            <summary>
            Признак, определяющий, имеет ли запрос с постраничным выводом первичное условие.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.RowCount">
            <summary>
            Количество записей страницы данных.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.Direction">
            <summary>
            Направление постраничного вывода.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.OrderByItemsConditions">
            <summary>
            Коллекция условий для выражений, по которым выполняется сортировка результатов запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.HasOrderByItemsConditions">
            <summary>
            Определяет, присутствуют ли в запросе условия для выражений, по которым выполняется сортировка результатов 
            запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.HierarchicalSelectOptions">
            <summary>
            Параметры построения иерархических запросов.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.HierarchicalSelectOptions.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.HierarchicalSelectOptions.#ctor(Terrasoft.Core.DB.HierarchicalSelectOptions)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>, являющийся клоном переданного 
            экземпляра.
            </summary>
            <param name="source">Экземпляр <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>, клон которого создается.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.PrimaryColumnName">
            <summary>
            Имя колонки, представляющей первичный ключ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.ParentColumnName">
            <summary>
            Имя родительской колонки.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.StartingPrimaryColumnCondition">
            <summary>
            Условие по первичной колонке, определяющее стартовую запись в иерархии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.HasStartingPrimaryColumnCondition">
            <summary>
            Признак определяющий, имеет ли запрос условие для определения стартовой записи в иерархии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.SelectType">
            <summary>
            Тип иерархического запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.MaxDepthParameter">
            <summary>
            Максимальный уровень вложенности иерархии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.IsDistinct">
            <summary>
            Определяет, возвращает ли запрос только уникальные записи.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.IncludeLevelColumn">
            <summary>
            Определяет, будет ли запрос возвращать колонку с номером уровня записи в иерархии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.LevelColumnAlias">
            <summary>
            Псевдоним колонки с номером уровня записи в иерархии.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.CreateCommonTableExpression">
            <summary>
            Определяет, будет ли создано для данного иерархического запроса обобщенное табличное выражение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.CommonTableExpressionName">
            <summary>
            Имя обобщенного табличного выражения иерархического запроса.
            </summary>
            <remarks>По умолчанию равно &lt;HierarchicalSelect&gt;</remarks>
        </member>
        <member name="T:Terrasoft.Core.DB.Select">
            <summary>
            Запрос на выборку данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>, являющийся клоном переданного запроса.
            </summary>
            <param name="source">Запрос на выборку данных, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.GetSqlText">
            <summary>
            Возвращает sql-текст текущего запроса.
            </summary>
            <returns>Sql-текст текущего запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            Формирует текст запроса с использованием заданного экземпляра <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.GetUsingParameters">
            <summary>
            Возвращает коллекцию используемых запросом параметров.
            </summary>
            <returns>Коллекция параметров, используемых запросом.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Select"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>, представляющий копию текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteReader(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Используя переданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, выполняет запрос на выборку и возвращает 
            <see cref="T:System.Data.IDataReader"/> с результирующим набором записей.
            </summary>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <returns>Экземпляр <see cref="T:System.Data.IDataReader"/> с результирующим набором записей.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteReader(Terrasoft.Core.DB.Select.ExecuteReaderReadMethod)">
            <summary>
            Выполняет запрос на выборку и вызывает переданный метод делегата для каждой записи набора. 
            </summary>
            <param name="readMethod"></param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteScalar``1">
            <summary>
            Выполняет текущий запрос на выборку и возвращает типизированный первый столбец первой записи 
            результирующего набора, возвращаемого запросом.
            </summary>
            <typeparam name="TResult">Тип возвращаемого значения столбца.</typeparam>
            <returns>Первый столбец первой записи в результирующем наборе типа <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Используя переданный экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, выполняет текущий запрос на выборку и возвращает 
            типизированный первый столбец первой записи результирующего набора, возвращаемого запросом.
            </summary>
            <typeparam name="TResult">Тип возвращаемого значения столбца.</typeparam>
            <param name="dbExecutor">Экземпляр <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, с помощью которого выполняется запрос к базе 
            данных.</param>
            <returns>Первый столбец первой записи в результирующем наборе данных типа <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Distinct">
            <summary>
            Добавляет к текущему запросу на выборку ключевое слово Distinct. 
            </summary>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Top(System.Int32)">
            <summary>
            Устанавливает количество первых записей, возвращаемых результирующим набором данных.
            </summary>
            <param name="rowCount">Количество первых записей результирующего набора.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.As(System.String)">
            <summary>
            Добавляет указанный псевдоним для последнего заданного выражения запроса.
            </summary>
            <param name="alias">Псевдоним выражения запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если метод вызывается до вызова одного из методов [From] или 
            [Columns].</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(System.String)">
            <summary>
            Добавляет в коллекцию выражений колонок текущего запроса выражение для колонки с заданным псевдонимом.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(System.String,System.String)">
            <summary>
            Добавляет в коллекцию выражений колонок текущего запроса выражение для колонки с заданным псевдонимом из 
            указанного источника.
            </summary>
            <param name="sourceAlias">Псевдоним источника.</param>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в коллекцию выражений колонок текущего запроса выражение для переданного подзапроса на выборку.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в коллекцию выражений колонок текущего запроса выражение для переданного произвольного подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryCase)">
            <summary>
            Добавляет в коллекцию выражений колонок текущего запроса выражение для переданного оператора Case.
            </summary>
            <param name="queryCase">Оператор Case запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок выражения для переданного параметра запроса.
            </summary>
            <param name="queryParameter">Параметр запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок переданное выражение колонки.
            </summary>
            <param name="columnExpression">Выражение колонки запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущую коллекцию выражений колонок переданное выражение.
            </summary>
            <param name="expression">Выражение.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(System.String)">
            <summary>
            Добавляет в качестве выражения источника данных текущего запроса схему с указанным именем.
            </summary>
            <param name="schemaName">Имя схемы.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в качестве выражения источника данных текущего запроса выражение для переданного подзапроса на 
            выборку.
            </summary>
            <param name="subSelect">ПОдзапрос на выборку.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в качестве выражения источника данных текущего запроса выражение для переданного произвольного 
            подзапроса.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Добавляет в качестве выражения источника данных текущего запроса переданное выражение.
            </summary>
            <param name="sourceExpression">Выражение источника данных запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(System.String)">
            <summary>
            Связывает с текущим запросом схему с указанным именем, используя перекрестное соединение.
            </summary>
            <param name="schemaName">Имя связываемой схемы.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.Select)">
            <summary>
            Связывает с текущим запросом указанный подзапрос на выборку, используя перекрестное соединение.
            </summary>
            <param name="subSelect">Подзапрос на выборку.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.Query)">
            <summary>
            Связывает с текущим запросом указанный произвольный подзапроса, используя перекрестное соединение.
            </summary>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            Связывает с текущим запросом указанное выражение, используя перекрестное соединение.
            </summary>
            <param name="sourceExpression">Выражение для присоединяемого источника данных.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ToPageable(Terrasoft.Core.DB.PageableSelectOptions)">
            <summary>
            Преобразует текущий запрос к запросу с возможностью постраничного вывода с заданными параметрами.
            </summary>
            <param name="options">Параметры постраничного вывода результатов запроса.</param>
            <returns>Запрос на выборку данных с постраничным выводом.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.IsDistinct">
            <summary>
            Определяет, возвращает ли запрос только уникальные записи.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.Columns">
            <summary>
            Коллекция выражений колонок запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.SourceExpression">
            <summary>
            Выражение источника данных запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.CanReadUncommitedData">
            <summary>
            Признак, определяющий, будут ли попадать в результаты запроса данные, для которых не завершена транзакция.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Select.ExecuteReaderReadMethod">
            <summary>
            Определяет сигнатуру метода делегата, вызываемого при чтении записей данных запроса.
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="T:Terrasoft.Core.DB.SelectQueryCollection">
            <summary>
            Коллекция запросов на выборку данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.#ctor(Terrasoft.Core.DB.SelectQueryCollection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>, являющийся клоном переданной коллекции.
            </summary>
            <param name="source">Коллекция запросов на выборку, клон которой создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.Clone">
            <summary>
            Создает клон текущей коллекции запросов на выборку.
            </summary>
            <returns>Новый экземпляр коллекции запросов на выборку <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>, являющийся 
            клоном текущей коллекции.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Update">
            <summary>
            Запрос на обновление данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>, используя заданное пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Update"/> для схемы с указанным именем, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="schemaName">Имя схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Update"/> для указанного источника данных, используя заданное 
            пользовательское подключение.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="source">Источник данных.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.DB.Update)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>, являющийся клоном переданного запроса.
            </summary>
            <param name="source">Запрос на обновление, клон которого создается.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.GetSqlText">
            <summary>
            Возвращает sql-текст текущего запроса.
            </summary>
            <returns>Sql-текст текущего запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            Формирует текст запроса с использованием заданного экземпляра <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">Экземпляр <see cref="T:System.Text.StringBuilder"/>, с помощью которого формируется текст 
            запроса.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.GetUsingParameters">
            <summary>
            Возвращает коллекцию параметров запроса.
            </summary>
            <returns>Коллекция параметров запроса.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Core.DB.Update"/>.
            </summary>
            <returns>Новый экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>, являющийся клоном текущего экземпляра.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.Select)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом выражения для 
            переданного подзапроса на выборку.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="subSelect">Подзапрос на выборку</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.Query)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом выражения для 
            переданного произвольного подзапроса.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="subSelectQuery">Произвольный подзапрос.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом переданного 
            выражения колонки.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="columnExpression">Выражение колонки.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом переданного 
            выражения.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="expression">Выражение.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            Добавляет в текущий запрос предложение SET для присвоения колонке с заданным псевдонимом переданного 
            параметра.
            </summary>
            <param name="sourceColumnAlias">Псевдоним колонки.</param>
            <param name="parameter">Параметр запроса.</param>
            <returns>Текущий экземпляр <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.Update.Source">
            <summary>
            Источник данных запроса.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Update.ColumnValues">
            <summary>
            Коллекция значений колонок запроса.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemActionEventArgs">
            <summary>
            Базовый класс для классов, содержащих данные о состоянии для событий менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemActionEventArgs.Item">
            <summary>
            Элемент менеджера.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед добавлением элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs"/>, используя заданный элемент 
            менеджера.
            </summary>
            <param name="item">Добавляемый элемент менеджера.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs.IsCanceled">
            <summary>
            Определяет, было ли отменено добавление элемента менеджера.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs">
            <summary>
            Предоставляет данные о состоянии для события после добавления элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs"/>, используя заданный элемент 
            менеджера.
            </summary>
            <param name="item">Элемент менеджера, который был добавлен.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед удалением элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs"/>, используя заданный элемент 
            менеджера.
            </summary>
            <param name="item">Удаляемый элемент менеджера.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs.IsCanceled">
            <summary>
            Определяет, было ли отменено удаление элемента менеджера.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs">
            <summary>
            Предоставляет данные о состоянии для события после удаления элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs"/>, используя заданный элемент 
            менеджера.
            </summary>
            <param name="item">Удаленный элемент менеджера.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs">
            <summary>
            Предоставляет данные о состоянии для события перед сохранением элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs"/>, используя заданный элемент 
            менеджера.
            </summary>
            <param name="item">Сохраняемый элемент менеджера.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs.IsCanceled">
            <summary>
            Определяет, было ли отменено сохранение элемента менеджера.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs">
            <summary>
            Предоставляет данные о состоянии для события после сохранения элемента менеджера.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem,System.Boolean)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs"/>, используя заданный элемент.
            </summary>
            <param name="item">Элемент менеджера, который был сохранен.</param>
            <param name="isNew">Определяет, является ли новым сохраненный элемент <paramref name="item"/>.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs.IsNew">
            <summary>
            Определяет, является ли новым сохраняемый элемент менеджера.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerItem">
            <summary>
            Интерфейс элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.UserConnection">
            <summary>
            Пользовательское подключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.IsInstanceInitialized">
            <summary>
            Определяет, является ли проинициализированным экземпляр схемы элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.TypeName">
            <summary>
            Имя типа схемы элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ManagerName">
            <summary>
            Имя менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ParentUId">
            <summary>
            Идентификатор родительского элемента.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.UserId">
            <summary>
            Идентификатор пользователя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.FolderId">
            <summary>
            Идентификатор каталога.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.IsCoreSchema">
            <summary>
            Определяет, является ли схема системной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ReferenceSchemaUIds">
            <summary>
            Список схем, на которые ссылается схема элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ExtraProperties">
            <summary>
            Дополнительные свойства элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Assembly">
            <summary>
            Сборка, содержащая тип схемы элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.AssemblyRefCount">
            <summary>
            Количество сборок, на которые ссылается схема элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Description">
            <summary>
            Описание элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.SysSchemaInSolutionId">
            <summary>
            Идентификатор записи в таблице SysSchemaInSolution, из которой получен элемент.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Descriptor">
            <summary>
            Дескриптор элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.RealParentItemUId">
            <summary>
            Уникальный идентификатор родительского элемента менеджера, который содержит уникальный идентификатор
            родительской схемы, присвоенный ей при создании.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.DenyExtending">
            <summary>
            Запретить замещение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.IncludeDependenciesSource">
            <summary>
            Включить коды зависимых схем.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerItem`1">
            <summary>
            Типизированный интерфейс элемента менеджера схем.
            </summary>
            <typeparam name="TSchemaManagerSchema">Класс, наследованный от <see cref="T:Terrasoft.Core.Schema"/>, реализующий интерфейсы 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.ForceGetInstance">
            <summary>
            Возвращает экземпляр схемы. Если схема не проинициализирована, предварительно выполняет ее инициализацию.
            </summary>
            <returns>Экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.Assign(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Устанавливает для текущего элемента менеджера свойства переданного элемента менеджера. 
            </summary>
            <param name="source">Схема, свойства которой устанавливаются для текущей схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.Assign(`0)">
            <summary>
            Устанавливает для текущего элемента менеджера свойства переданной схемы.
            </summary>
            <param name="source">Объект, свойства которого устанавливаются для текущей схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.DropInstance">
            <summary>
            Удаляет экземпляр схемы.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItem`1">
            <summary>
            Элемент менеджера схем.
            </summary>
            <typeparam name="TSchemaManagerSchema">Класс, наследованный от <see cref="T:Terrasoft.Core.Schema"/>, реализующий интерфейсы 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>, 
            <see cref="T:System.ICloneable"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.#ctor(Terrasoft.Core.SchemaManager{`0})">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> в заданном 
            менеджере схем.
            </summary>
            <param name="manager">Менеджер схем, в котором создается экземпляр 
            <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.#ctor(Terrasoft.Core.ISchemaManagerItem{`0},System.Boolean)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> указанным элементом 
            менеджера в заданном менеджере схем. 
            </summary>
            <param name="source">Элемент менеджера для инициализации нового экземпляра.</param>
            <param name="isShallowClone">Признак полноты клонирования схемы. Если <paramref name="isShallowClone"/> 
            равен <c>true</c>, то в создаваемый экземпляр <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> не копируются колонки схемы 
            <paramref name="source"/>. Если <paramref name="isShallowClone"/> равен <c>false</c>, то создается 
            полноценный клон <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.ForceGetInstance">
            <summary>
            Возвращает экземпляр схемы. Если схема не проинициализирована, предварительно выполняет ее инициализацию.
            </summary>
            <returns>Экземпляр схемы.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.DropInstance">
            <summary>
            Удаляет экземпляр схемы.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Assign(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Устанавливает для текущего элемента менеджера свойства переданного элемента менеджера. 
            </summary>
            <param name="source">Элемент менеджера, свойства которого устанавливаются для текущего элемента менеджера.
            </param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Assign(`0)">
            <summary>
            Устанавливает для текущего элемента менеджера свойства переданной схемы.
            </summary>
            <param name="source">Схема, свойства которой устанавливаются для текущего элемента менеджера.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.UserConnection">
            <summary>
            Пользовательское подключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IsInstanceInitialized">
            <summary>
            Признак, является ли схема проинициализированной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Instance">
            <summary>
            Проинициализированный экземпляр схемы. Если тип схемы не найден в сборке, генерируется исключение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.SafeInstance">
            <summary>
            Проинициализированный безопасный экземпляр схемы. Если тип схемы не найден в сборке, возвращает <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Name">
            <summary>
            Имя элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Caption">
            <summary>
            Заголовок элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Manager">
            <summary>
            Экземпляр менеджера схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Description">
            <summary>
            Описание элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.FolderId">
            <summary>
            Каталог элемента менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IsCoreSchema">
            <summary>
            Признак, является ли схема системной.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Terrasoft#Core#IManagerItem#Manager">
            <summary>
            Менеджер схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ManagerItem">
            <summary>
            Элемент менеджера.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.UserId">
            <summary>
            Уникальный идентификатор пользователя.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Assembly">
            <summary>
            Сборка, которой принадлежит схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.AssemblyRefCount">
            <summary>
            Количество сборок, на которые ссылается схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ManagerName">
            <summary>
            Имя менеджера схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ParentUId">
            <summary>
            Идентификатор родительской схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ReferenceSchemaUIds">
            <summary>
            Список схем, на которые ссылается данная схема.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.TypeName">
            <summary>
            Имя типа схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ExtraProperties">
            <summary>
            Дополнительные свойства схемы.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.SysSchemaInSolutionId">
            <summary>
            Идентификатор записи в таблице SysSchemaInSolution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Descriptor">
            <summary>
            Дескриптор элемента менеджера схем.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.RealParentItemUId">
            <summary>
            Уникальный идентификатор родительского элемента менеджера, который содержит уникальный идентификатор
            родительской схемы, присвоенный ей при создании.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.DenyExtending">
            <summary>
            Запретить замещение.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IncludeDependenciesSource">
            <summary>
            Включить коды зависимых схем.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemCollection`1">
            <summary>
            Коллекция элементов менеджера.
            </summary>
            <typeparam name="TSchemaManagerSchema">Класс, наследованный от <see cref="T:Terrasoft.Core.Schema"/>, реализующий интерфейсы 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>, 
            <see cref="T:System.ICloneable"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.#ctor(Terrasoft.Core.SchemaManager{`0})">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Core.SchemaManagerItemCollection`1"/> для 
            заданного менеджера.
            </summary>
            <param name="manager">Менеджер схем.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemAdding(Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs)">
            <summary>
            Обработчик события, возникающего перед добавлением элемента в коллекцию.
            </summary>
            <param name="e">Данные о состоянии для события перед добавлением элемента менеджера.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemAdded(Terrasoft.Core.SchemaManagerItemAfterAddEventArgs)">
            <summary>
            Обработчик события, возникающего после добавления элемента в коллекцию.
            </summary>
            <param name="e">Данные о состоянии для события, возникающего после добавления элемента менеджера.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemRemoving(Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs)">
            <summary>
            Обработчик события, возникающего перед удалением элемента из коллекции.
            </summary>
            <param name="e">Данные о состоянии для события, возникающего перед удалением элемента менеджера.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemRemoved(Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs)">
            <summary>
            Обработчик события, возникающего после удаления элемента из коллекции.
            </summary>
            <param name="e">Данные о состоянии для события, возникающего после удаления элемента менеджера.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.InsertItem(System.Int32,Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Добавляет в коллекцию заданный элемент по указанному индексу.
            </summary>
            <param name="index">Индекс, по которому следует добавить элемент <paramref name="item"/> в коллекцию.
            </param>
            <param name="item">Элемент, который добавляется в коллекцию.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.RemoveItem(System.Int32)">
            <summary>
            Удаляет элемент из коллекции по указанному индексу.
            </summary>
            <param name="index">Индекс удаляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindByUId(System.Guid,System.Guid)">
            <summary>
            Осуществляет поиск элемента по заданным идентификатору элемента и идентификатору пользователя.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент менеджера с идентификатором <paramref name="uid"/>, принадлежащий пользователю с 
            идентификатором <paramref name="userId"/>, или <c>null</c>, если такой элемент не найден.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetByUId(System.Guid,System.Guid)">
            <summary>
            Возвращает элемент с заданными идентификатором, принадлежащий указанному пользователю. Если 
            такой элемент не найден, генерируется исключение.
            </summary>
            <param name="uid">Идентификатор элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент менеджера с идентификатором <paramref name="uid"/>, принадлежащий пользователю с 
            идентификатором <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент с идентификатором <paramref name="uid"/>, 
            принадлежащий пользователю с идентификатором <paramref name="userId"/>, не найден.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindInstanceByUId(System.Guid,System.Guid)">
            <summary>
            Осуществляет поиск элемента с заданными идентификатором экземпляра схемы, принадлежащий указанному 
            пользователю.
            </summary>
            <param name="uid">Идентификатор экземпляра схемы элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Найденный элемент, имеющий экземпляр схемы с идентификатором <paramref name="uid"/> и 
            принадлежащий пользователю с идентификатором <paramref name="userId"/>, или <c>null</c>, если такой элемент 
            не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetInstanceByUId(System.Guid,System.Guid)">
            <summary>
            Возвращает элемент с заданными идентификатором экземпляра схемы, принадлежащий указанному пользователю. 
            Если такой элемент не найден, генерируется исключение.
            </summary>
            <param name="uid">Идентификатор экземпляра схемы элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент, имеющий экземпляр схемы с идентификатором <paramref name="uid"/> и принадлежащий 
            пользователю с идентификатором <paramref name="userId"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент, имеющий экземпляр схемы с идентификатором 
            <paramref name="uid"/> и принадлежащий пользователю с идентификатором <paramref name="userId"/>, не найден.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindByName(System.String,System.Guid)">
            <summary>
            Осуществляет поиск элемента с заданными именем, принадлежащий указанному пользователю.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент с именем <paramref name="name"/>, принадлежащий пользователю с идентификатором 
            <paramref name="userId"/>, или <c>null</c>, если такой элемент не найден.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetByName(System.String,System.Guid)">
            <summary>
            Возвращает элемент с заданными именем, принадлежащий указанному пользователю с заданным идентификатором. 
            Если такой элемент не найден, генерируется исключение.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент с именем <paramref name="name"/>, принадлежащий пользователю с идентификатором 
            <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент с именем <paramref name="name"/>, принадлежащий 
            пользователю с идентификатором <paramref name="userId"/>, не найден.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindInstanceByName(System.String,System.Guid)">
            <summary>
            Осуществляет поиск элемента с заданными именем экземпляра схемы, принадлежащий указанному пользователю. 
            </summary>
            <param name="name">Имя экземпляра схемы элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент, имеющий экземпляр схемы с именем <paramref name="name"/> и принадлежащий пользователю с 
            идентификатором <paramref name="userId"/>, или <c>null</c>, если такой элемент не найден.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetInstanceByName(System.String,System.Guid)">
            <summary>
            Возвращает элемент с заданными именем, принадлежащий указанному пользователю. Если такой 
            элемент не найден, генерируется исключение.
            </summary>
            <param name="name">Имя экземпляра элемента.</param>
            <param name="userId">Идентификатор пользователя.</param>
            <returns>Элемент, имеющий экземпляр схемы с именем <paramref name="name"/> и принадлежащий пользователю с 
            идентификатором <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="name"/> передано 
            пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент, имеющий экземпляр схемы с именем 
            <paramref name="name"/> и принадлежащий пользователю с идентификатором <paramref name="userId"/>, не найден.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.Manager">
            <summary>
            Менеджер схем.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdding">
            <summary>
            Событие, возникающее перед добавлением элемента в коллекцию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemAdding">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdding"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdded">
            <summary>
            Событие, возникающее после добавления элемента в коллекцию.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemAdded">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdded"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoving">
            <summary>
            Событие, возникающее перед удалением элемента из коллекции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemRemoving">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoving"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoved">
            <summary>
            Событие, возникающее после удаления элемента из коллекции.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemRemoved">
            <summary>
            Определяет, выполняется ли обработка события <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoved"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetIsCreatedInInterpretableVersion(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Возвращает признак создания схемы процесса в интрепретируемой среде выполнения процессов.
            Если экземпляр схемы не определён в элементе менеджера, будет взят экземпляр схемы из метаданных.
            </summary>
            <param name="managerItem">Элемент менедежера процессов.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetActivityCategory(System.Guid)">
            <summary>
            Возвращает идентификатор категории активности.
            </summary>
            <param name="stepType">Тип шага</param>
            <returns>Идентификатор категории активности</returns>
            <remarks> Возвращаемое значение должно быть в нижнем регистре, иначе ComboBox не находит значение в списке.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetIsCreatedInInterpretableVersion(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Возвращает признак создания схемы процесса в интрепретируемой среде выполнения процессов.
            </summary>
            <param name="processSchema">Схема процеса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.FindInstanceFromMetaData(System.Guid)">
            <summary>
            Осуществляет поиск экземпляра схемы по заданному идентификатору из метаданных.
            </summary>
            <param name="schemaUId">Идентификатор схемы.</param>
            <returns>Экземпляр элемента менеджера с уникальным идентификатором <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.FindById(System.Guid)">
            <summary>
            Осуществляет поиск элемента менеджера с заданным уникальным идентификатором.
            </summary>
            <param name="id">Уникальный идентификатор искомого элемента менеджера.</param>
            <returns>Элемент менеджера с уникальным идентификатором <paramref name="id"/>. Если 
            элемент с уникальным идентификатором <paramref name="id"/> не найден, возвращается null.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(System.Guid)">
            <summary>
            Проверяет, можно ли выполнить процесс по указанному идентификатору схемы в интерпретируемой среде.
            </summary>
            <param name="processSchemaId">Идентификатор схемы процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Проверяет, можно ли выполнить процесс по указанной схеме в интерпретируемой среде.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="processSchema">Схема процесса.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Проверяет, можно ли выполнить процесс по указанному элементу менеджера схем
            в интерпретируемой среде.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="managerItem">Элемент менеджера схем бизнесс процессов.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetProcessSchema(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Возвращает экземпляр схемы бизнес-процесса <see cref="T:Terrasoft.Core.Process.ProcessSchema"/>.
            </summary>
            <param name="userConnection">Пользовательское соединение.</param>
            <param name="managerItem">Элемент менеджера схем бизнес-процессов.</param>
            <returns>Экземпляр схемы бизнес-процесса.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.EnableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Активирует процесс.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="sysSchemaId">Идентификатор схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.DisableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Деактивирует процесс.
            </summary>
            <param name="userConnection">Пользовательское подключение.</param>
            <param name="sysSchemaId">Идентификатор схемы.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetIsProcessEnabled(System.Guid)">
            <summary>
            Возврашает признак процесса Активен/Неактивен
            </summary>
            <param name="sysSchemaId">Идентификатор схемы.</param>
            <returns></returns>
        </member>
    </members>
</doc>
